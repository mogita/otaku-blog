<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mogita</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on mogita</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language><atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A Personal Mastodon Instance Setup</title>
      <link>http://localhost:1313/posts/a-personal-mastodon-instance-setup.html</link>
      <pubDate>Thu, 22 Dec 2022 12:57:46 +0800</pubDate>
      
      <guid>http://localhost:1313/posts/a-personal-mastodon-instance-setup.html</guid>
      <description>&lt;p&gt;I’ve not always wanted to bring up a Mastodon instance for it was not that intriguing to me, until recently Musk has worked on Twitter in an amateur way.&lt;/p&gt;
&lt;p&gt;On the other hand, to host an instance of my own is a way of paying tribute to the past ‘90s self-host Email compaign which I was too young and poor to have the chance to experience. At least for now, we are seeing a blooming new way of social networking, whether or not a long-term fight against spam and junk information in the future awaits.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/mogita/status/1605188553423536134&#34;&gt;https://twitter.com/mogita/status/1605188553423536134&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I’ll open source my setup. You can skip to the Code section to see the project.&lt;/p&gt;
&lt;p&gt;You can also check out my instance &lt;a href=&#34;https://mog.blue/@mogita&#34;&gt;@mogita@mog.blue&lt;/a&gt;. I&amp;rsquo;m always ready for a little chat.&lt;/p&gt;
&lt;h1 id=&#34;how-to-run&#34;&gt;
  How To Run
  &lt;a class=&#34;heading-link&#34; href=&#34;#how-to-run&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;I’m going to serve my Mastodon instance through Docker with &lt;code&gt;docker-compose&lt;/code&gt; for an easier and consistent management workflow.&lt;/p&gt;
&lt;h1 id=&#34;what-to-include&#34;&gt;
  What To Include
  &lt;a class=&#34;heading-link&#34; href=&#34;#what-to-include&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Inside the &lt;code&gt;docker-compose.yml&lt;/code&gt; file I’ll put these components:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mastodon web: &lt;code&gt;tootsuite/mastodon:latest&lt;/code&gt; + ES analyzer tweak (for indexing non-English languages)&lt;/li&gt;
&lt;li&gt;Database: &lt;code&gt;postgres:14-alpine&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Redis: &lt;code&gt;redis:7-alpine&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;ElasticSearch: &lt;code&gt;elasticsearch:7.17.8&lt;/code&gt; + &lt;a href=&#34;https://github.com/medcl/elasticsearch-analysis-ik&#34;&gt;ik&lt;/a&gt; + &lt;a href=&#34;https://github.com/medcl/elasticsearch-analysis-stconvert&#34;&gt;stconvert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Streaming: &lt;code&gt;tootsuite/mastodon:latest&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Sidekiq: &lt;code&gt;tootsuite/mastodon:latest&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Nginx: &lt;code&gt;nginx:latest&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;es-analyzer-tweak&#34;&gt;
  ES Analyzer Tweak
  &lt;a class=&#34;heading-link&#34; href=&#34;#es-analyzer-tweak&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;A vanilla Mastodon instance is fairly easy to setup from the basic versions of the said docker images. However, adding optimization for other languages in its search functionality requires code modification which would impair the simplicity of just following the minimum workflow. Hope this necessity can be replaced with a more proper way, like configurable through &lt;code&gt;.env&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;At the time of writing, there are 3 steps according to the &lt;a href=&#34;https://docs.joinmastodon.org/admin/optional/elasticsearch/#search-optimization-for-other-languages&#34;&gt;official documentation&lt;/a&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install ES plugin &lt;a href=&#34;https://github.com/medcl/elasticsearch-analysis-ik&#34;&gt;https://github.com/medcl/elasticsearch-analysis-ik&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Install ES plugin &lt;a href=&#34;https://github.com/medcl/elasticsearch-analysis-stconvert&#34;&gt;https://github.com/medcl/elasticsearch-analysis-stconvert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Modify Mastodon’s source code on index definition&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Previous 2 steps can be achieved relatively easier. Just create a &lt;code&gt;Dockerfile&lt;/code&gt; for a custom ES build and make the installation on the official ES image. Pay attention to the version consistency though.&lt;/p&gt;
&lt;p&gt;As of step 3, I’ll &lt;code&gt;patch&lt;/code&gt; the diff code provided by the documentation. Nonetheless a custom image is necessary too.&lt;/p&gt;
&lt;p&gt;To sum up, I’ll need to build 2 images:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A custom Mastodon image for: Mastodon web, Streaming and Sidekiq&lt;/li&gt;
&lt;li&gt;A custom ElasticSearch image for: ElasticSearch with non-English languages support&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;miscellaneous&#34;&gt;
  Miscellaneous
  &lt;a class=&#34;heading-link&#34; href=&#34;#miscellaneous&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h1&gt;
&lt;h2 id=&#34;https-support&#34;&gt;
  HTTPS Support
  &lt;a class=&#34;heading-link&#34; href=&#34;#https-support&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;My Mastodon setup will enjoy the benefits from &lt;code&gt;nginx-proxy&lt;/code&gt; and &lt;code&gt;acme-companion&lt;/code&gt; for automatic SSL certificates challenging and renewal. This is why I have an Nginx component on the list. It’s the reverse proxy to handle SSL traffic.&lt;/p&gt;
&lt;h2 id=&#34;object-storage-support&#34;&gt;
  Object Storage Support
  &lt;a class=&#34;heading-link&#34; href=&#34;#object-storage-support&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Using a cheap S3 compatible object storage service is my go-to plan on a minimum user base. Having it gone through a Cloudflare CDN might help with lowering the bandwidth cost too.&lt;/p&gt;
&lt;h2 id=&#34;email-relay&#34;&gt;
  Email Relay
  &lt;a class=&#34;heading-link&#34; href=&#34;#email-relay&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Google Workplace SMTP relay service is my first choice since I’m on a business plan. For free alternatives, any relay service shall do and many offer a free amount for around 100 or more Emails per day.&lt;/p&gt;
&lt;h2 id=&#34;backups&#34;&gt;
  Backups
  &lt;a class=&#34;heading-link&#34; href=&#34;#backups&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Since the object storage will be used, the only critical thing to backup is the database. A script that sends a daily &lt;code&gt;pg_dump&lt;/code&gt; archive to one of my storage service provider shall do. If things go crazy in the future, like I’ll need to host the instance for hundreds of users, then master-slave replica might be useful as an additional measurement.&lt;/p&gt;
&lt;h2 id=&#34;scaling&#34;&gt;
  Scaling
  &lt;a class=&#34;heading-link&#34; href=&#34;#scaling&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;No need to consider right now. Cost effectivity, on the contrary, shall be my first priority given the instance being invitation only.&lt;/p&gt;
&lt;h1 id=&#34;code&#34;&gt;
  Code
  &lt;a class=&#34;heading-link&#34; href=&#34;#code&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;I named my Mastodon setup project the &lt;code&gt;monsts&lt;/code&gt;, it stands for “Mastodon Of Not So Typical Setup”.&lt;/p&gt;
&lt;p&gt;You can browse the source code here: &lt;a href=&#34;https://gitlab.com/mogita/monsts&#34;&gt;https://gitlab.com/mogita/monsts&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Things I Use</title>
      <link>http://localhost:1313/uses.html</link>
      <pubDate>Wed, 12 Oct 2022 15:09:29 +0800</pubDate>
      
      <guid>http://localhost:1313/uses.html</guid>
      <description>&lt;h1 id=&#34;hardware&#34;&gt;
  Hardware
  &lt;a class=&#34;heading-link&#34; href=&#34;#hardware&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;🖥️ iMac (M1, 2021)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RAM: 16GB&lt;/li&gt;
&lt;li&gt;Storage: 1TB&lt;/li&gt;
&lt;li&gt;OS: macOS&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;🖥️ Displays:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;iMac built-in 24&amp;quot; Retina Display&lt;/li&gt;
&lt;li&gt;AOC 27&amp;quot; 4K Display&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;🖱️ Logitech MX Vertical Mouse&lt;/p&gt;
&lt;p&gt;⌨️ HHKB Professional BT Keyboard&lt;/p&gt;
&lt;p&gt;📱 iPhone 14 Pro&lt;/p&gt;
&lt;p&gt;🔊 Xiaomi Mi Soundbar MDZ-27-DA&lt;/p&gt;
&lt;p&gt;🎛 Focusrite 2i4 Audio Interface&lt;/p&gt;
&lt;p&gt;🎙️ Audio-Technica AT4040 Microphone&lt;/p&gt;
&lt;p&gt;🏗️ Blue Compass Microphone Stand&lt;/p&gt;
&lt;h1 id=&#34;software&#34;&gt;
  Software
  &lt;a class=&#34;heading-link&#34; href=&#34;#software&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;macOS&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;iTerm2 (oh-my-zsh &amp;amp; starship)&lt;/li&gt;
&lt;li&gt;Neovim&lt;/li&gt;
&lt;li&gt;Firefox&lt;/li&gt;
&lt;li&gt;Apple Mail&lt;/li&gt;
&lt;li&gt;Tweetbot&lt;/li&gt;
&lt;li&gt;Notion&lt;/li&gt;
&lt;li&gt;1Password&lt;/li&gt;
&lt;li&gt;Reeder&lt;/li&gt;
&lt;li&gt;Infuse&lt;/li&gt;
&lt;li&gt;Apple Pro Apps for A/V editing&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;iPhone&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Apple Mail&lt;/li&gt;
&lt;li&gt;WaterMinder&lt;/li&gt;
&lt;li&gt;Overcast&lt;/li&gt;
&lt;li&gt;Duolingo&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Resume</title>
      <link>http://localhost:1313/resume.html</link>
      <pubDate>Wed, 12 Oct 2022 12:22:42 +0800</pubDate>
      
      <guid>http://localhost:1313/resume.html</guid>
      <description>&lt;h1 id=&#34;professional-skills&#34;&gt;
  Professional Skills
  &lt;a class=&#34;heading-link&#34; href=&#34;#professional-skills&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Go&lt;/li&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;li&gt;Node.js&lt;/li&gt;
&lt;li&gt;Web: React.js / ES6 / HTML / CSS&lt;/li&gt;
&lt;li&gt;Databases
&lt;ul&gt;
&lt;li&gt;RDBS: PostgreSQL / MySQL&lt;/li&gt;
&lt;li&gt;NoSQL: MongoDB&lt;/li&gt;
&lt;li&gt;KV: Redis / BoltDB&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;GIS
&lt;ul&gt;
&lt;li&gt;PostGIS&lt;/li&gt;
&lt;li&gt;OpenStreetMap&lt;/li&gt;
&lt;li&gt;Vector tiles / Web maps&lt;/li&gt;
&lt;li&gt;Visualization&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;experience&#34;&gt;
  Experience
  &lt;a class=&#34;heading-link&#34; href=&#34;#experience&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://nextbillion.ai&#34;&gt;NextBillion.ai&lt;/a&gt;, 2020~present&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Software engineer, working on map SDK, live traffic systems, and in-house OSM eco-system building&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://grab.com&#34;&gt;Grab&lt;/a&gt;, 2017~2020&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Software engineer manager, geo team&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2015~2017&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Software engineer, API, real-time A/V web and service team&lt;/p&gt;
&lt;h1 id=&#34;education&#34;&gt;
  Education
  &lt;a class=&#34;heading-link&#34; href=&#34;#education&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Beijing International Studies University, 2012~2015&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Master of aesthetics&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Beijing International Studies University, 2006~2010&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Bechelor of Spanish&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Minikube With Podman on Apple Silicon</title>
      <link>http://localhost:1313/posts/minikube-podman-on-m1-apple-silicon.html</link>
      <pubDate>Mon, 29 Aug 2022 11:38:55 +0800</pubDate>
      
      <guid>http://localhost:1313/posts/minikube-podman-on-m1-apple-silicon.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://minikube.sigs.k8s.io/docs/&#34;&gt;Minikube&lt;/a&gt; has been a go-to environment for running a single-node cluster to test out the Kubernetes features on a local platform. For macOS computers with an Apple Silicon, a.k.a. M1 or M2, minikube provides an ARM64 version and can be installed with &lt;a href=&#34;https://formulae.brew.sh/formula/minikube&#34;&gt;Homebrew&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;However when it comes to start minikube after successfully installed it, it would require Docker as the default driver. Here comes my problem. As a matter of fact, Docker on macOS has long been released under the name of &amp;ldquo;Docker Desktop&amp;rdquo;, which contains a huge pile of Electron based applications and UI. It starts slow too. I don&amp;rsquo;t ever want to install such a &lt;strong&gt;monstrous&lt;/strong&gt; thing in my system. So I have to give up the default driver and look for alternatives.&lt;/p&gt;
&lt;p&gt;At the time of writing, minikube supports various kinds of drivers, such as Docker, Hyperkit, Hyper-V, KVM, Parallels, Podman, VirtualBox, and VMware Fusion/Workstation. After an hour of struggling and testing, Podman stood out. It&amp;rsquo;s backed by a QEMU virtual machine, supports Docker API and Docker-based tools, and can be intsalled in a very smooth fasion.&lt;/p&gt;
&lt;p&gt;So I&amp;rsquo;m going to record the steps to initialize and maintain a minikube cluster with Podman.&lt;/p&gt;
&lt;h1 id=&#34;installation&#34;&gt;
  Installation
  &lt;a class=&#34;heading-link&#34; href=&#34;#installation&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;With the help of the &lt;a href=&#34;https://minikube.sigs.k8s.io/docs/start/&#34;&gt;Get Started&lt;/a&gt; documentation for minikube, just pick an installation option that works. Mine was &lt;code&gt;brew install minikube&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Then the Podman installation done with &lt;code&gt;brew install podman&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Simple enough.&lt;/p&gt;
&lt;h1 id=&#34;start-up&#34;&gt;
  Start Up
  &lt;a class=&#34;heading-link&#34; href=&#34;#start-up&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Create a Podman machine with the following command, giving it 2 CPU cores and 8Gi memory.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;podman machine init --cpus 2 --memory 8192 --disk-size 80
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;podman machine start
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;podman system connection default podman-machine-default-root
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now Podman should be running in the background. One can check out the information with &lt;code&gt;podman info&lt;/code&gt; command, or find out its running stats with &lt;code&gt;podman stats&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;To start minikube, follow the step below. By default, minikube uses Docker as the driver. One should pass a &lt;code&gt;--driver&lt;/code&gt; argument to change that.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;minikube start --driver=podman --container-runtime=cri-o
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;One should see the output similar to the following logs:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;❯ minikube start --driver=podman --container-runtime=cri-o
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;😄  minikube v1.26.1 on Darwin 12.5.1 (arm64)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;✨  Using the podman (experimental) driver based on existing profile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;👍  Starting control plane node minikube in cluster minikube
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;🚜  Pulling base image ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;E0829 11:34:04.822031   11181 cache.go:203] Error downloading kic artifacts:  not yet implemented, see issue #8426
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;🔄  Restarting existing podman container for &amp;#34;minikube&amp;#34; ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;🎁  Preparing Kubernetes v1.24.3 on CRI-O 1.24.1 ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;E0829 11:34:09.704438   11181 start.go:129] Unable to get host IP: RoutableHostIPFromInside is currently only implemented for linux
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;🔗  Configuring CNI (Container Networking Interface) ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;🔎  Verifying Kubernetes components...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ▪ Using image kubernetesui/dashboard:v2.6.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ▪ Using image kubernetesui/metrics-scraper:v1.0.8
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;🌟  Enabled addons: storage-provisioner, default-storageclass, dashboard
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;🏄  Done! kubectl is now configured to use &amp;#34;minikube&amp;#34; cluster and &amp;#34;default&amp;#34; namespace by default
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Alternative to explicitly passing the &lt;code&gt;--driver&lt;/code&gt; argument, one can change the defautl driver with this command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;minikube config set driver podman
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;stop--restart&#34;&gt;
  Stop / Restart
  &lt;a class=&#34;heading-link&#34; href=&#34;#stop--restart&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;To stop the minikube + Podman system, follow these commands:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;minikube stop
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;podman machine stop
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;To restart the system, simply run &lt;code&gt;start&lt;/code&gt; respectively (note the sequence, &lt;code&gt;podman&lt;/code&gt; should go first as &lt;code&gt;minikube&lt;/code&gt; depends on it):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;podman machine start
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;minikube start --driver&lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt;podman --container-runtime&lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt;cri-o
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;# or with the default driver changed to podman:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;minikube start
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;anything-else&#34;&gt;
  Anything Else?
  &lt;a class=&#34;heading-link&#34; href=&#34;#anything-else&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Q&lt;/strong&gt;: If there are multiple clusters to manage, including but not limited to GKE (by Google Cloud) and EKS (by AWS) etc., how to manage and switch from these clusters?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;: This can be configured through &lt;code&gt;~/.kube/config&lt;/code&gt; easily as Kubernetes has the concept of &amp;ldquo;Context&amp;rdquo;, which basically means different clusters. Upon minikube successfully starting, a new context called &lt;code&gt;minikube&lt;/code&gt; shall be inserted automatically to this config file. One can list and switch to a certain context using the following commands (switching to minikube for example):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl config get-contexts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl config set current-context minikube
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Q&lt;/strong&gt;: How to test out a named &lt;code&gt;StorageClass&lt;/code&gt; in a PVC object with minikube?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;: By default, minikube comes with a built-in SC named &lt;code&gt;standard&lt;/code&gt;. It provides dynamic storage provisioning when one creates a PVC with non-named storage class. One should create a storage class with the customized name before creating the PVC with a named storage class to enable auto-creation of PV and PVC. First, create the named SC like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;apiVersion&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt; storage.k8s.io/v1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt; StorageClass
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#81a1c1&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt; your-custom-name
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#81a1c1&#34;&gt;annotations&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1&#34;&gt;storageclass.kubernetes.io/is-default-class&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#34;false&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;provisioner&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt; k8s.io/minikube-hostpath
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It&amp;rsquo;s important to set the provisioner field to &lt;code&gt;k8s.io/minikube-hostpath&lt;/code&gt;, otherwise no auto-creation would happen. After the SC has been successfully created, when applying the following PVC object, one should observe that a PV being automatically created and the PVC gets instantly fulfilled:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;kind&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt; PersistentVolumeClaim
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;apiVersion&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt; v1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;metadata&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#81a1c1&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt; {{ .Name }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#81a1c1&#34;&gt;namespace&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt; {{ .Namespace }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;spec&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#81a1c1&#34;&gt;accessModes&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#34;ReadWriteOnce&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#81a1c1&#34;&gt;storageClassName&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt; your-custom-name
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#81a1c1&#34;&gt;volumeMode&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt; Filesystem
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#81a1c1&#34;&gt;resources&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1&#34;&gt;requests&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#81a1c1&#34;&gt;storage&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt; {{ .DiskSize }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You&amp;rsquo;ll find this article helpful with understanding &lt;a href=&#34;https://platform9.com/blog/tutorial-dynamic-provisioning-of-persistent-storage-in-kubernetes-with-minikube/&#34;&gt;dynamic provisioning of persistent storage with minikube&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://localhost:1313/about.html</link>
      <pubDate>Tue, 23 Mar 2021 12:32:03 +0800</pubDate>
      
      <guid>http://localhost:1313/about.html</guid>
      <description>&lt;p&gt;I&amp;rsquo;m Yun Wang, using the handle of @&lt;a href=&#34;https://twitter.com/mogita&#34;&gt;mogita&lt;/a&gt; (nearly) everywhere. I&amp;rsquo;ve worked as a software engineer since 2015. Before that, I wrote programs as a self-taught amateur. You can see my &lt;a href=&#34;http://localhost:1313/resume.html&#34;&gt;resume &lt;/a&gt;here.&lt;/p&gt;
&lt;p&gt;I believe in many things: open source, remote working (one &lt;a href=&#34;https://www.amazon.com/Remote-Office-Not-Required/dp/0804137501&#34;&gt;book&lt;/a&gt; that I recommend), RSS, cats dominate the human, Neo was The One, the Harry Potter folks do exist, and all those heavenly beautiful things from Michael Jackson&amp;rsquo;s songs.&lt;/p&gt;
&lt;p&gt;You can also find a &lt;a href=&#34;http://localhost:1313/uses.html&#34;&gt;list&lt;/a&gt; of devices and softwares that I use most of the time.&lt;/p&gt;
&lt;p&gt;This site was created with &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; and a &lt;a href=&#34;https://github.com/mogita/otaku-blog/blob/master/static/css/ezhil-custom.css&#34;&gt;customized&lt;/a&gt; version of &lt;a href=&#34;https://github.com/vividvilla/ezhil&#34;&gt;ezhil&lt;/a&gt;, without any trackers*. It contains my non-tech posts from my infant time in which you don&amp;rsquo;t want to be interested. This is my personal website. Opinions are my own.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;* You can use &lt;a href=&#34;https://privacybadger.org&#34;&gt;Privacy Badger&lt;/a&gt; to block Disqus comments automatically.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;bio&#34;&gt;
  Bio
  &lt;a class=&#34;heading-link&#34; href=&#34;#bio&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;🦋 Fanfouer&lt;br /&gt;
🧑‍💻 Software engineer&lt;br /&gt;
🎧 &lt;a href=&#34;https://space.bilibili.com/70342&#34;&gt;Drummer&lt;/a&gt;, bedroom &lt;a href=&#34;https://soundcloud.com/mogita&#34;&gt;producer&lt;/a&gt;&lt;br /&gt;🇸🇬 Located in Singapore&lt;br /&gt;
🇨🇳 汉语 🇬🇧 English 🇯🇵 日本語で数えることができる 🇪🇸 A veces leo en español&lt;/p&gt;
&lt;h1 id=&#34;contact&#34;&gt;
  Contact
  &lt;a class=&#34;heading-link&#34; href=&#34;#contact&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Quick contact through &lt;a href=&#34;https://t.me/mogita&#34;&gt;Telegram&lt;/a&gt;. Or seriously, write an Email.&lt;br /&gt;
&lt;a href=&#34;mailto:me@mogita.com&#34;&gt;me@mogita.com&lt;/a&gt;&lt;br /&gt;
PGP: &lt;a href=&#34;https://keybase.io/mogita/pgp_keys.asc?fingerprint=6db72fe720f619f710cdb4c9a0aa1b9c57a48ecf&#34;&gt;&lt;code&gt;6DB7 2FE7 20F6 19F7 10CD B4C9 A0AA 1B9C 57A4 8ECF&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Feel like talking? Block my calendar here &lt;a href=&#34;https://cal.com/mogita&#34;&gt;https://cal.com/mogita&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;portkeys-supa-hrefhttpsharrypotterfandomcomwikiportkey-target_blankasup&#34;&gt;
  Portkeys &lt;sup&gt;&lt;a href=&#34;https://harrypotter.fandom.com/wiki/Portkey&#34; target=&#34;_blank&#34;&gt;?&lt;/a&gt;&lt;/sup&gt;
  &lt;a class=&#34;heading-link&#34; href=&#34;#portkeys-supa-hrefhttpsharrypotterfandomcomwikiportkey-target_blankasup&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.yocson.com&#34;&gt;配信中&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://archeanz.com&#34;&gt;Archean&amp;rsquo;s Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rockneko.xyz&#34;&gt;Rock Neko&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;netizenship&#34;&gt;
  Netizenship
  &lt;a class=&#34;heading-link&#34; href=&#34;#netizenship&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gitlab.com/mogita&#34;&gt;GitLab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mogita&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/mogita&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lobste.rs/u/mogita&#34;&gt;Lobsters&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;projects&#34;&gt;
  Projects
  &lt;a class=&#34;heading-link&#34; href=&#34;#projects&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mogita/go-fanfou&#34;&gt;Go Fanfou&lt;/a&gt; - A Fanfou API library for Go&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mogita/vue-zydialog&#34;&gt;Vue Zydialog&lt;/a&gt; - A dialog component for Vue.js&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mastodon.social/@yocat&#34;&gt;YoCat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://soundmono.com&#34;&gt;Soundmono&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fanstafou.mogita.com&#34;&gt;FanstaFou&lt;/a&gt; (Retired)&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>The Tracking Pixels in Your Emails</title>
      <link>http://localhost:1313/posts/the-tracking-pixels-in-your-emails.html</link>
      <pubDate>Fri, 12 Mar 2021 12:41:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/the-tracking-pixels-in-your-emails.html</guid>
      <description>&lt;h1 id=&#34;what-is-a-tracking-pixel&#34;&gt;
  What Is A Tracking Pixel
  &lt;a class=&#34;heading-link&#34; href=&#34;#what-is-a-tracking-pixel&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;A Tracking Pixel is a technique found these days in Email marketing, promotions, newsletters and even casual notifications contents of Email campaign services. It inserts a transparent &lt;code&gt;1px x 1px&lt;/code&gt; image to the mail body that is invisible to human eyes and uses the good-old Web technology to send information to whoever&amp;rsquo;s on the other end collecting as many aspects as they want about the person who reads the Email:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Operating system&lt;/li&gt;
&lt;li&gt;Device model&lt;/li&gt;
&lt;li&gt;Type of the Email client&lt;/li&gt;
&lt;li&gt;The reader&amp;rsquo;s screen resolution&lt;/li&gt;
&lt;li&gt;When and how many times the Email was read or website visited&lt;/li&gt;
&lt;li&gt;Activities on the website in a session&lt;/li&gt;
&lt;li&gt;The IP address of the reader (this gives away the ISP information and even location based on some extremely precise GeoIP databases that are very easy to get)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A sample tracking pixel snippet from &lt;a href=&#34;https://github.com/apparition47/MailTrackerBlocker&#34;&gt;MailTrackerBlocker&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;a style=&amp;#34;color: #770506;&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &amp;lt;img src=&amp;#34;http://cdn.website.com/newsletter/logo.png&amp;#34; width=&amp;#34;438&amp;#34; height=&amp;#34;42&amp;#34; border=&amp;#34;0&amp;#34; style=&amp;#34;max-width: 90%; height: auto&amp;#34; alt=&amp;#34;logo.png&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/a&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;br&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;a href=&amp;#34;https://website.us5.list-manage.com/unsubscribe?u=abdef&amp;#34;&amp;gt;Click here to unsubscribe&amp;lt;/a&amp;gt; or &amp;lt;a href=&amp;#34;https://website.us5.list-manage.com/profile?u=abdef&amp;#34;&amp;gt;Update subscription preferences&amp;lt;/a&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#bf616a&#34;&gt;- &amp;lt;img width=&amp;#34;0&amp;#34; height=&amp;#34;0&amp;#34; class=&amp;#34;mailtrack-img&amp;#34; alt=&amp;#34;&amp;#34; style=&amp;#34;display:flex&amp;#34; src=&amp;#34;https://mailtrack.io/trace/mail/0eabccbe98c98e9b8e9a8b89eab89ce9ab89e8bc.png?u=1234567&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that the highlighted line of code inserts the invisible pixel of image to the mail body.&lt;/p&gt;
&lt;p&gt;Actually very few people ever noticed that their behaviours were tracked (or to say harvested) by the people who sent the Emails. But as soon as one realises it, bad feelings come pouring in: you don&amp;rsquo;t know which Emails have tracking pixels; you can never &amp;ldquo;opt-out&amp;rdquo; a tracking pixel; you don&amp;rsquo;t know exactly what information were collected by the trackers and what they plan to do with it.&lt;/p&gt;
&lt;h1 id=&#34;how-to-avoid-being-tracked&#34;&gt;
  How to avoid being tracked?
  &lt;a class=&#34;heading-link&#34; href=&#34;#how-to-avoid-being-tracked&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;If you are using a macOS computer, check out the open-source project &lt;a href=&#34;https://github.com/apparition47/MailTrackerBlocker&#34;&gt;MailTrackerBlocker&lt;/a&gt;. It&amp;rsquo;s a plug-in for the Apple Mail app. Actually the list above was sorted out using this plug-in.&lt;/p&gt;
&lt;p&gt;Alternatively you can choose an Email service that provides tracking pixel blocking natively, like &lt;a href=&#34;https://hey.com&#34;&gt;Hey&lt;/a&gt; (paid). In fact the makers of Hey mail made this website to stand up against tracking pixels: &lt;a href=&#34;https://notospypixels.com&#34;&gt;https://notospypixels.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For blocking tracking pixels on other platforms, applications or Email providers, you can &lt;a href=&#34;mailto:me@mogita.com?subject=%5BOtaku%20Blog%5D%20Avoid%20Tracking%20Pixels&#34;&gt;write to me&lt;/a&gt; and tell me your method or tools. I&amp;rsquo;d be happy to add them here.&lt;/p&gt;
&lt;h1 id=&#34;who-are-tracking-me&#34;&gt;
  Who Are Tracking Me
  &lt;a class=&#34;heading-link&#34; href=&#34;#who-are-tracking-me&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;To name just a few Email senders I&amp;rsquo;ve caught embedding the tracking pixels, here&amp;rsquo;s a list:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Sender&lt;/th&gt;
&lt;th&gt;From Address&lt;/th&gt;
&lt;th&gt;Tracking Pixel Service Provider&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Sony PlayStation&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:reply@txn-email.playstation.com&#34;&gt;reply@txn-email.playstation.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Salesforce&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Adobe&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:mail@mail.adobe.com&#34;&gt;mail@mail.adobe.com&lt;/a&gt;&lt;br /&gt;&lt;a href=&#34;mailto:message@adobe.com&#34;&gt;message@adobe.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Adobe&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IFTTT&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:alerts@ifttt.com&#34;&gt;alerts@ifttt.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Customer.io&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Nintendo&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:nintendo-noreply@ccg.nintendo.com&#34;&gt;nintendo-noreply@ccg.nintendo.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;(Self-owned Tracker)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LinkedIn&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:messages-noreply@linkedin.com&#34;&gt;messages-noreply@linkedin.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;LinkedIn&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Duolingo&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:hello@duolingo.com&#34;&gt;hello@duolingo.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Amazon SES&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Flickr&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:flickrteam@arrow.flickr.com&#34;&gt;flickrteam@arrow.flickr.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SparkPost&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lark Suite (a.k.a Feishu)&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:support@service.larksuite.com&#34;&gt;support@service.larksuite.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bedroom Producers Blog&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:tomislav@bedroomproducersblog.com&#34;&gt;tomislav@bedroomproducersblog.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;MailerLite&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Trello&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:taco@trello.com&#34;&gt;taco@trello.com&lt;/a&gt;&lt;br /&gt;&lt;a href=&#34;mailto:do-not-reply@trello.com&#34;&gt;do-not-reply@trello.com&lt;/a&gt;&lt;br /&gt;&lt;a href=&#34;mailto:invitation-do-not-reply@trello.com&#34;&gt;invitation-do-not-reply@trello.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Atlassian&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dropbox&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:no-reply@dropbox.com&#34;&gt;no-reply@dropbox.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;(Self-owned Tracker)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CodeSandbox&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:hello@codesandbox.io&#34;&gt;hello@codesandbox.io&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Mailgun&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Mapbox&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:newsletter@mapbox.com&#34;&gt;newsletter@mapbox.com&lt;/a&gt;&lt;br /&gt;&lt;a href=&#34;mailto:billing@mapbox.com&#34;&gt;billing@mapbox.com&lt;/a&gt;&lt;br /&gt;&lt;a href=&#34;mailto:sales@mapbox.com&#34;&gt;sales@mapbox.com&lt;/a&gt;&lt;br /&gt;&lt;a href=&#34;mailto:community@mapbox.com&#34;&gt;community@mapbox.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Customer.io&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MapTiler&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:news@maptiler.com&#34;&gt;news@maptiler.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Google&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Mapillary&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:support@mapillary.com&#34;&gt;support@mapillary.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Apple App Store&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:no_reply@email.apple.com&#34;&gt;no_reply@email.apple.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Apple&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;iCloud (GCBD)&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:no_reply@iCloud.gzdata.com.cn&#34;&gt;no_reply@iCloud.gzdata.com.cn&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;(Self-owned Tracker)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Apple iTunes Connect&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:do_not_reply@email.apple.com&#34;&gt;do_not_reply@email.apple.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;(Self-owned Tracker)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Apple Developer&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:developer@insideapple.apple.com&#34;&gt;developer@insideapple.apple.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Apple&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Be My Eyes&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:account@bemyeyes.com&#34;&gt;account@bemyeyes.com&lt;/a&gt;&lt;br /&gt;&lt;a href=&#34;mailto:onboarding@bemyeyes.com&#34;&gt;onboarding@bemyeyes.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Postmark&lt;br /&gt;Mixpanel&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Goodreads&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:no-reply@mail.goodreads.com&#34;&gt;no-reply@mail.goodreads.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Amazon SES&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Foursquare&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:noreply@foursquare.com&#34;&gt;noreply@foursquare.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Baidu&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:no-reply-bce@baidu.com&#34;&gt;no-reply-bce@baidu.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;(Self-owned Tracker)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GitHub&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:notifications@github.com&#34;&gt;notifications@github.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;GitHub&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Microsoft&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:Microsoft365@mail.microsoft365.com&#34;&gt;Microsoft365@mail.microsoft365.com&lt;/a&gt;&lt;br /&gt;&lt;a href=&#34;mailto:msa@communication.microsoft.com&#34;&gt;msa@communication.microsoft.com&lt;/a&gt;&lt;br /&gt;&lt;a href=&#34;mailto:azure@email.microsoft.com&#34;&gt;azure@email.microsoft.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Microsoft&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cloudflare&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:newsletter@cloudflare.com&#34;&gt;newsletter@cloudflare.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;(Self-owned Tracker)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sentry&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:webinars@sentry.io&#34;&gt;webinars@sentry.io&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Hubspot&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Upwork&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:donotreply@upwork.com&#34;&gt;donotreply@upwork.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Upwork&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AWS&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:no-reply@marketplace.aws&#34;&gt;no-reply@marketplace.aws&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Amazon SES&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Facebook&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:security@facebookmail.com&#34;&gt;security@facebookmail.com&lt;/a&gt;&lt;br /&gt;&lt;a href=&#34;mailto:notification@facebookmail.com&#34;&gt;notification@facebookmail.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Facebook&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Instagram&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:security@mail.instagram.com&#34;&gt;security@mail.instagram.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Facebook&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Paypal&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:service@intl.paypal.com&#34;&gt;service@intl.paypal.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;(Self-owned Tracker)&lt;br /&gt;Return Path&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Stripe&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:receipts+masked@stripe.com&#34;&gt;receipts+masked@stripe.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;(Self-owned Tracker)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Auth0&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:no-reply@emails.auth0.com&#34;&gt;no-reply@emails.auth0.com&lt;/a&gt;&lt;br /&gt;&lt;a href=&#34;mailto:no-reply-support@auth0.com&#34;&gt;no-reply-support@auth0.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SendGrid&lt;br /&gt;Mandrill&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Airbnb&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:automated@airbnb.com&#34;&gt;automated@airbnb.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;(Self-owned Tracker)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Coursera&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:no-reply@m.mail.coursera.org&#34;&gt;no-reply@m.mail.coursera.org&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SparkPost&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Console.dev&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:weekly@console.dev&#34;&gt;weekly@console.dev&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Mailchimp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AudioThing&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:news@audiothing.net&#34;&gt;news@audiothing.net&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Mailchimp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BugSnag&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:bugsnagmarketing@bugsnag.com&#34;&gt;bugsnagmarketing@bugsnag.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;(Self-owned Tracker)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Slite&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:marc@slite.com&#34;&gt;marc@slite.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GOG&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:newsletter@email2.gog.com&#34;&gt;newsletter@email2.gog.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;del&gt;Google&lt;/del&gt;&lt;br /&gt;GetResponse&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IMDB&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:do-not-reply@imdb.com&#34;&gt;do-not-reply@imdb.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Amazon SES&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CloudApp&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:no-reply@getcloudapp.com&#34;&gt;no-reply@getcloudapp.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Customer.io&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PreSonus&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:presonus@e.presonus.com&#34;&gt;presonus@e.presonus.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;(Self-owned Tracker)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Internet Archive&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:info@archive.org&#34;&gt;info@archive.org&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Mailchimp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Box&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:boxteam@customer.box.com&#34;&gt;boxteam@customer.box.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;spmailtechnol&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IHG (A hospitality company)&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:IHGRewards@mc.ihg.com&#34;&gt;IHGRewards@mc.ihg.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;(Self-owned Tracker, more than 1 per mail)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TuringBook.com&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:ebook@turingbook.com&#34;&gt;ebook@turingbook.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Mailchimp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Raycast&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:thomas@raycast.com&#34;&gt;thomas@raycast.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RescueTime&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:notifications@rescuetime.com&#34;&gt;notifications@rescuetime.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Customer.io&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Chatra&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:support@chatra.com&#34;&gt;support@chatra.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Postmark&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bandcamp&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:noreply@bandcamp.com&#34;&gt;noreply@bandcamp.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;(Self-owned Tracker)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Craft.do&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:team@craft.do&#34;&gt;team@craft.do&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;(Self-owned Tracker)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Journal&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:hello@usejournal.com&#34;&gt;hello@usejournal.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Mockaroo&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:no-reply@mockaroo.com&#34;&gt;no-reply@mockaroo.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Mailchimp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ghost.org (A blogging software)&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:hello@ghost.org&#34;&gt;hello@ghost.org&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;(Self-owned Tracker)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Asana&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:no-reply@asana.com&#34;&gt;no-reply@asana.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;(Self-owned Tracker)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Remove.bg&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:noreply@remove.bg&#34;&gt;noreply@remove.bg&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;(Self-owned Tracker)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;uTalk&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:hello@offers2.utalk.com&#34;&gt;hello@offers2.utalk.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;(Self-owned Tracker)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Envato&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:do-not-reply@market.envato.com&#34;&gt;do-not-reply@market.envato.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Mandrillapp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RapidAPI&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:support@rapidapi.com&#34;&gt;support@rapidapi.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Mailchimp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BundleHunt&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:support@bundlehunt.com&#34;&gt;support@bundlehunt.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Mailchimp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TIDAL&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:account@info.tidal.com&#34;&gt;account@info.tidal.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ClickUp&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:katie@clickup.com&#34;&gt;katie@clickup.com&lt;/a&gt;&lt;br /&gt;&lt;a href=&#34;mailto:success@clickup.com&#34;&gt;success@clickup.com&lt;/a&gt;&lt;br /&gt;&lt;a href=&#34;mailto:help@clickup.com&#34;&gt;help@clickup.com&lt;/a&gt;&lt;br /&gt;&lt;a href=&#34;mailto:clickupdates@clickup.com&#34;&gt;clickupdates@clickup.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Close&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clubhouse.io&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:support@clubhouse.io&#34;&gt;support@clubhouse.io&lt;/a&gt;&lt;br /&gt;&lt;a href=&#34;mailto:mayrelease@splash.events&#34;&gt;mayrelease@splash.events&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Intercom&lt;br /&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Postman.com&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:postman-team@notifications.postman.com&#34;&gt;postman-team@notifications.postman.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Fastic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Taiga&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:peter@mail.taiga.io&#34;&gt;peter@mail.taiga.io&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Koingo Software&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:appdeals@koingo.com&#34;&gt;appdeals@koingo.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Lobe.ai&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:lobe@e-mail.microsoft.com&#34;&gt;lobe@e-mail.microsoft.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Salesforce&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Native Instruments&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:newsletter@news.native-instruments.com&#34;&gt;newsletter@news.native-instruments.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;(Self-owned Tracker)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Atlassian&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:info@e.atlassian.com&#34;&gt;info@e.atlassian.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Return Path&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Twitch&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:no-reply@twitch.tv&#34;&gt;no-reply@twitch.tv&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;(Self-owned Tracker)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JustFont&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:su.weihsiang@justfont.com&#34;&gt;su.weihsiang@justfont.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Google&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JFrog&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:team@go.jfrog.com&#34;&gt;team@go.jfrog.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;(Self-owned Tracker)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NameSilo&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:abnous@namesilo.com&#34;&gt;abnous@namesilo.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;MailerLite&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Riot Games&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:noreply@mail.accounts.riotgames.com&#34;&gt;noreply@mail.accounts.riotgames.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NASA Mars&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:no-reply-mars@jpl.nasa.gov&#34;&gt;no-reply-mars@jpl.nasa.gov&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;iContact&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Zeplin&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:hi@zeplin.io&#34;&gt;hi@zeplin.io&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Mailchimp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Pipedream&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:sacerdoti@pipedream.com&#34;&gt;sacerdoti@pipedream.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Google Payments&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:payments-noreply@google.com&#34;&gt;payments-noreply@google.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Google&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Google Workspace&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:google-workspace-alerts-noreply@google.com&#34;&gt;google-workspace-alerts-noreply@google.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Google&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Google Cloud Platform&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:CloudPlatform-noreply@google.com&#34;&gt;CloudPlatform-noreply@google.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Google&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Climb App&lt;/td&gt;
&lt;td&gt;(hidden due to Apple Login)&lt;/td&gt;
&lt;td&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;China Merchants Bank&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:95555ad@message.cmbchina.com&#34;&gt;95555ad@message.cmbchina.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;(Self-owned Tracker)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Magoosh&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:help@magoosh.com&#34;&gt;help@magoosh.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Todoist&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:no-reply@todoist.com&#34;&gt;no-reply@todoist.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MuseScore&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:no-reply@musescore.com&#34;&gt;no-reply@musescore.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;(Self-owned Tracker)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GitGuardian&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:support@gitguardian.com&#34;&gt;support@gitguardian.com&lt;/a&gt;&lt;br /&gt;&lt;a href=&#34;mailto:security@mail.gitguardian.com&#34;&gt;security@mail.gitguardian.com&lt;/a&gt;&lt;br /&gt;&lt;a href=&#34;mailto:contact@gitguardian.com&#34;&gt;contact@gitguardian.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SendGrid&lt;br /&gt;Mailgun&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Speed Dial 2&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:hello@speeddial2.com&#34;&gt;hello@speeddial2.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Postmark&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sococo&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:noreply@sococo.net&#34;&gt;noreply@sococo.net&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Mandrill&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Chamaileon&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:hello@chamaileon.io&#34;&gt;hello@chamaileon.io&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Sendy&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Browserstack Team&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:news@browserstack.com&#34;&gt;news@browserstack.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Mailchimp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ultimate Guitar&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:no_reply@ultimate-guitar.com&#34;&gt;no_reply@ultimate-guitar.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Mailtrain&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bunny Studio&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:support@bunnystudio.com&#34;&gt;support@bunnystudio.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Waymo&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:noreply@waymo.com&#34;&gt;noreply@waymo.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Google&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;数码荔枝 lizhi.io&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:hi@tongxun.lizhi.io&#34;&gt;hi@tongxun.lizhi.io&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Mailchimp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Three Dots Labs&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:contact@threedotslabs.com&#34;&gt;contact@threedotslabs.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Mailchimp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Vercel&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:ship@vercel.com&#34;&gt;ship@vercel.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Guitar Pro&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:contact@arobas-music.com&#34;&gt;contact@arobas-music.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Mailchimp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Loom&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:welcome@loom.com&#34;&gt;welcome@loom.com&lt;/a&gt;&lt;br /&gt;&lt;a href=&#34;mailto:team@loom.com&#34;&gt;team@loom.com&lt;/a&gt;&lt;br /&gt;&lt;a href=&#34;mailto:no-reply@loom.com&#34;&gt;no-reply@loom.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Intercom&lt;br /&gt;Mandrill&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Opstree&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:riya@opstree.com&#34;&gt;riya@opstree.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Hubspot&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WeTransfer&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:noreply@wetransfer.com&#34;&gt;noreply@wetransfer.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Flim&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:hello@flim.ai&#34;&gt;hello@flim.ai&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Mailjet&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Grab&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:corpsupport.sg@grab.com&#34;&gt;corpsupport.sg@grab.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Amazon SES&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Pusher&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:team@pusher.com&#34;&gt;team@pusher.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Customer.io&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Chess.com&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:hello@chess.com&#34;&gt;hello@chess.com&lt;/a&gt;&lt;br /&gt;&lt;a href=&#34;mailto:alert@chess.com&#34;&gt;alert@chess.com&lt;/a&gt;&lt;br /&gt;&lt;a href=&#34;mailto:receipt@chess.com&#34;&gt;receipt@chess.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Fastic&lt;br /&gt;SendGrid&lt;br /&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Soundtoys&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:news@soundtoys.com&#34;&gt;news@soundtoys.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Mailchimp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;italki&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:noreply@italki.com&#34;&gt;noreply@italki.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Amazon SES&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Codecov&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:hello@codecov.io&#34;&gt;hello@codecov.io&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;(Self-owned Tracker)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Wurkr&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:helena@wurkr.io&#34;&gt;helena@wurkr.io&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Hubspot&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Coinbase&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:info@cb.mail.coinbase.com&#34;&gt;info@cb.mail.coinbase.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Fastic&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Zapier&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:billing@zapier.com&#34;&gt;billing@zapier.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Litmus&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;HBO Max&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:HBOMax@mail.hbomax.com&#34;&gt;HBOMax@mail.hbomax.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Malaysia Kini&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:newslab@malaysiakini.com&#34;&gt;newslab@malaysiakini.com&lt;/a&gt;&lt;br /&gt;&lt;a href=&#34;mailto:membership@malaysiakini.com&#34;&gt;membership@malaysiakini.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Amazon SES&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Book Depository&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:reply@support.bookdepository.com&#34;&gt;reply@support.bookdepository.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Litmus&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Anytype&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:hello@anytype.io&#34;&gt;hello@anytype.io&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Change.org&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:change@a.change.org&#34;&gt;change@a.change.org&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;(Self-owned Tracker)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Flo&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:legal@floemail.com&#34;&gt;legal@floemail.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Medium&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:noreply@medium.com&#34;&gt;noreply@medium.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LingQ&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:ana.rivera@lingq.com&#34;&gt;ana.rivera@lingq.com&lt;/a&gt;&lt;br /&gt;&lt;a href=&#34;mailto:support@lingq.com&#34;&gt;support@lingq.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WordPress&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:comment-reply@wordpress.com&#34;&gt;comment-reply@wordpress.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;WordPress&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Leanpub&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:news@leanpub.com&#34;&gt;news@leanpub.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Mailchimp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Pocket Casts&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:noreply@pocketcasts.com&#34;&gt;noreply@pocketcasts.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Mandrill&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Amazon Web Services&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:aws-cn-marketing-email-replies@amazon.com&#34;&gt;aws-cn-marketing-email-replies@amazon.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Amazon SES&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Spotify&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:no-reply@spotify.com&#34;&gt;no-reply@spotify.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles Valley Collage&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:LAVCstudentsupport@laccd.edu&#34;&gt;LAVCstudentsupport@laccd.edu&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;iContact&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;StarWind&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:brooke.johnson@starwind.com&#34;&gt;brooke.johnson@starwind.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Hubspot&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Product Hunt&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:hello@team.producthunt.com&#34;&gt;hello@team.producthunt.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Mailjet&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Gengo Translator Team&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:no-reply@gengo.com&#34;&gt;no-reply@gengo.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Robinhood Snacks&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:noreply@robinhood.com&#34;&gt;noreply@robinhood.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Live2D&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:support@live2d.com&#34;&gt;support@live2d.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Mailchimp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JetBrains&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:news@jetbrains.com&#34;&gt;news@jetbrains.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Adobe&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Docker&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:no-reply@notify.docker.com&#34;&gt;no-reply@notify.docker.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Mailgun&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Discord&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:noreply@discord.com&#34;&gt;noreply@discord.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Skillshare&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:hello@skillshare.com&#34;&gt;hello@skillshare.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Kickstarter&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:no-reply@kickstarter.com&#34;&gt;no-reply@kickstarter.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MakeML&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:alexander@makeml.app&#34;&gt;alexander@makeml.app&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Roboflow&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:hello@roboflow.com&#34;&gt;hello@roboflow.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Customer.io&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Unity&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:accounts@unity3d.com&#34;&gt;accounts@unity3d.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Otoy&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:help@otoy.com&#34;&gt;help@otoy.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Mailchimp&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Memrise&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:hello@mail.memrise.com&#34;&gt;hello@mail.memrise.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Clozemaster&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:hello@clozemaster.com&#34;&gt;hello@clozemaster.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;SendGrid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Descript&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:mail@descript.com&#34;&gt;mail@descript.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Customer.io&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Heroku&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;mailto:noreply@mail.salesforce.com&#34;&gt;noreply@mail.salesforce.com&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Salesforce&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;It can go very long as more and more services I use. And I was tracked all the way long.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Update 2021-03-22: It appears that many of the &amp;ldquo;Self-owned Trackers&amp;rdquo; are not owned by the business owners. They don&amp;rsquo;t reveal the actual vendor by using the custom domain names. Certain tracing was done to discover the actual campaign Email sender and the tracker, which showed a certain pattern of how the custom domain names are formed. E.g. &lt;code&gt;http://url1234.mail.some-service.io&lt;/code&gt; (certain parts were masked with dummy characters) points to the IP address that resolves to be in possession of SendGrid. Oh my they use the &lt;code&gt;http&lt;/code&gt; that scatters people&amp;rsquo;s information all around the web un-encrypted while relentlessly collecting them.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Reading Digest (Aug 2018)</title>
      <link>http://localhost:1313/posts/reading-digest-aug-2018.html</link>
      <pubDate>Thu, 16 Aug 2018 17:21:30 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/reading-digest-aug-2018.html</guid>
      <description>&lt;h1 id=&#34;go&#34;&gt;
  Go
  &lt;a class=&#34;heading-link&#34; href=&#34;#go&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;Accessing the database with Go needs the &lt;code&gt;database/sql&lt;/code&gt; package. Apart from reading the official docs, this web site makes it even clearer on &amp;ldquo;how to&amp;rdquo; and &amp;ldquo;what not to do&amp;rdquo; matters. Learn idiomatic operations on it as well.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://go-database-sql.org/index.html&#34;&gt;Go database/sql Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;While designing the inforcement for our data security, I came across an article which explained briefly and clearly on SQL injection and how to avoid it in Go.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.calhoun.io/what-is-sql-injection-and-how-do-i-avoid-it-in-go/&#34;&gt;What is SQL injection and how do I avoid it in Go?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It&amp;rsquo;s also worth a while reading this article, also on the topic of SQL injection in Go. In fact it belongs to a big collection of articles on Go application building.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://astaxie.gitbooks.io/build-web-application-with-golang/en/09.4.html&#34;&gt;9.4 SQL injection&lt;/a&gt; (from the collection of &lt;a href=&#34;https://astaxie.gitbooks.io/build-web-application-with-golang/en/&#34;&gt;Build web application with Golang&lt;/a&gt; )&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;webassembly&#34;&gt;
  WebAssembly
  &lt;a class=&#34;heading-link&#34; href=&#34;#webassembly&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;As &lt;a href=&#34;https://webassembly.github.io/spec/core/index.html&#34;&gt;WebAssembly Specification&lt;/a&gt; draft goes 1.0 yesterday, it&amp;rsquo;s time to take a closer look at the essential ideas of WebAssembly. Currently it supports C, C++ and Rust. Which one to take? Hmm&amp;hellip;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.logrocket.com/webassembly-how-and-why-559b7f96cd71&#34;&gt;WebAssembly: How and why&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;metabase&#34;&gt;
  Metabase
  &lt;a class=&#34;heading-link&#34; href=&#34;#metabase&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;This isn&amp;rsquo;t a reading item actually lol. The &lt;a href=&#34;https://github.com/metabase/metabase&#34;&gt;Metabase&lt;/a&gt; is a tool that is &lt;code&gt;The simplest, fastest way to get business intelligence and analytics to everyone in your company&lt;/code&gt;. In short, it&amp;rsquo;s an open-source BI software.&lt;/p&gt;
&lt;p&gt;One of our QA team member showed me this the other day. It supports running as a Java jar package, a docker image, on AWS and some other options. The setup process was even easier than setting up a new WordPress instance.&lt;/p&gt;
&lt;p&gt;The Metabase astonished me with its simplicity of design, both on the workflow and the UI. I &amp;ldquo;ask&amp;rdquo; it questions, it shows me the answers. That&amp;rsquo;s it.&lt;/p&gt;
&lt;p&gt;Digging deeper, I can gather the answers and make a dashboard to visualize the data. Or I can see the SQL it generates if I want to.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s a screenshot from its repo:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/metabase-product-screenshot.png&#34; alt=&#34;metabase screenshot&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Reading Digest (Jun 2018)</title>
      <link>http://localhost:1313/posts/reading-digest-jun-2018.html</link>
      <pubDate>Mon, 18 Jun 2018 18:24:49 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/reading-digest-jun-2018.html</guid>
      <description>&lt;p&gt;I was playing with RPG Maker MV recently. It supports iOS/Android packaging with Cordova. Here&amp;rsquo;s the collection of articles on the topic.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.phonegap.com/displaying-a-phonegap-app-correctly-on-the-iphone-x-c4a85664c493&#34;&gt;Displaying a PhoneGap App Correctly on the iPhone X&lt;/a&gt;
A walkthrough of fitting the status bar and bottom area on an iPhone X.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/46232812/cordova-app-not-displaying-correctly-on-iphone-x-simulator&#34;&gt;Cordova app not displaying correctly on iPhone X (Simulator)&lt;/a&gt;
Q&amp;amp;A on making a right &lt;code&gt;config.xml&lt;/code&gt; and styles.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/the-web-tub/supporting-iphone-x-for-mobile-web-cordova-app-using-onsen-ui-f17a4c272fcd&#34;&gt;Supporting iPhone X for mobile web &amp;amp; Cordova app using Onsen UI&lt;/a&gt;
A detailed guide on how to make the web app looks and behaves more like a native app.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On the Go based micro-service, gRPC is a must-know technology.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://speakerdeck.com/cecyc/from-monolith-to-microservice-building-apis-with-grpc-and-golang&#34;&gt;From Monolith to Microservice: Building APIs with gRPC &amp;amp; golang&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Case study &amp;amp; tutorial on how to break up a legacy monolith codebase into microservices using gRPC + Protobuf + golang + the language of your choice!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://grpc.io/docs/guides/&#34;&gt;What is gRPC&lt;/a&gt;
The official portal for gRPC knowledge.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://medium.com/full-stack-tips/dependency-injection-in-go-99b09e2cc480&#34;&gt;Dependency Injection In Go&lt;/a&gt;
A basic tutorial on how and why for DI in the Go language.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>React 状态管理</title>
      <link>http://localhost:1313/posts/managing-react-state.html</link>
      <pubDate>Tue, 27 Mar 2018 00:02:38 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/managing-react-state.html</guid>
      <description>&lt;p&gt;React 中的 &lt;code&gt;state&lt;/code&gt;（状态）是简单的 JavaScript 对象，用于管理组件内的状态。请牢记：只有用在渲染（render）过程中的数据才保存在状态里。&lt;/p&gt;
&lt;h2 id=&#34;什么是状态state&#34;&gt;
  什么是状态（State）
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e4%bb%80%e4%b9%88%e6%98%af%e7%8a%b6%e6%80%81state&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;React 组件用状态来保存相关数据，它本身就是一个简单的对象。状态和普通对象的区别在于，React 会监视状态的属性，并在它更新时触发组件重新渲染。&lt;/p&gt;
&lt;p&gt;状态更新会触发重新渲染，因此可以只用它来保存渲染所需的数据。换句话说，虽与组件相关但不用于 &lt;code&gt;render&lt;/code&gt; 方法的变量就无需保存在状态里了，使用实例变量即可。&lt;/p&gt;
&lt;p&gt;同时，你还可以认为状态就是组件的私有数据，只有在组件内才能读取或更新状态。我们不能在它的父组件或子组件里访问状态。&lt;/p&gt;
&lt;h2 id=&#34;与属性props的区别&#34;&gt;
  与属性（Props）的区别
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e4%b8%8e%e5%b1%9e%e6%80%a7props%e7%9a%84%e5%8c%ba%e5%88%ab&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;和 &lt;code&gt;props&lt;/code&gt; 类似，状态就是一个用于触发组件重新渲染的对象。区别在于 &lt;code&gt;props&lt;/code&gt; 来自父组件，状态是组件的内部数据。&lt;/p&gt;
&lt;p&gt;我们无法在组件内更新 &lt;code&gt;props&lt;/code&gt;。因为它是来自外部的数据，组件不能对其进行操作。状态处于组件内部，组件对它有完全操作的能力。&lt;/p&gt;
&lt;p&gt;如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/state_vs_props.png&#34; alt=&#34;state vs props&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;初始化状态&#34;&gt;
  初始化状态
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%88%9d%e5%a7%8b%e5%8c%96%e7%8a%b6%e6%80%81&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;我们有多种方式来初始化组件的状态：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;getInitialState&lt;/code&gt; 方法&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;constructor&lt;/code&gt; 方法内初始化&lt;/li&gt;
&lt;li&gt;以类属性的方式初始化&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;使用-getinitialstate-方法&#34;&gt;
  使用 &lt;code&gt;getInitialState&lt;/code&gt; 方法
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e4%bd%bf%e7%94%a8-getinitialstate-%e6%96%b9%e6%b3%95&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;使用 &lt;code&gt;React.createClass&lt;/code&gt; 来定义组件时，可以使用 &lt;code&gt;getInitialState&lt;/code&gt; 方法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;import&lt;/span&gt; React from &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;const&lt;/span&gt; ExampleComponent &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; React&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;createClass&lt;span style=&#34;color:#eceff4&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  getInitialState &lt;span style=&#34;color:#eceff4&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      someKey&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;someValue&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#eceff4&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#eceff4&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  render&lt;span style=&#34;color:#eceff4&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#eceff4&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;&amp;gt;{&lt;/span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;state&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;someKey&lt;span style=&#34;color:#eceff4&#34;&gt;}&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;default&lt;/span&gt; ExampleComponent&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;在-constructor-方法内初始化&#34;&gt;
  在 &lt;code&gt;constructor&lt;/code&gt; 方法内初始化
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%9c%a8-constructor-%e6%96%b9%e6%b3%95%e5%86%85%e5%88%9d%e5%a7%8b%e5%8c%96&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;当你使用 &lt;code&gt;ES6&lt;/code&gt; 的 Class 关键字定义组件时，可以在 &lt;code&gt;constructor&lt;/code&gt; 方法里初始化状态：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;import&lt;/span&gt; React from &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;class&lt;/span&gt; ExampleComponent &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;extends&lt;/span&gt; React&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;Component &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  constructor&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;props&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;super&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;props&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;state &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      someKey&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;someValue&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#eceff4&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  render&lt;span style=&#34;color:#eceff4&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#eceff4&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;&amp;gt;{&lt;/span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;state&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;someKey&lt;span style=&#34;color:#eceff4&#34;&gt;}&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;default&lt;/span&gt; ExampleComponent&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;请不要忘记调用 &lt;code&gt;super()&lt;/code&gt; 方法，否则在 &lt;code&gt;constructor&lt;/code&gt; 内将无法使用 &lt;code&gt;this&lt;/code&gt;。不要漏掉了 &lt;code&gt;super&lt;/code&gt; 方法里的 &lt;code&gt;props&lt;/code&gt; 参数。&lt;/p&gt;
&lt;h4 id=&#34;以类属性的方式初始化&#34;&gt;
  以类属性的方式初始化
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e4%bb%a5%e7%b1%bb%e5%b1%9e%e6%80%a7%e7%9a%84%e6%96%b9%e5%bc%8f%e5%88%9d%e5%a7%8b%e5%8c%96&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;同样在使用 &lt;code&gt;ES6&lt;/code&gt; 的 Class 关键字时，我们还可以用类属性的方式初始化状态。这种写法可以节省几行代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;import&lt;/span&gt; React from &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;react&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;class&lt;/span&gt; ExampleComponent &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;extends&lt;/span&gt; React&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;Component &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  state &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt; someKey&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;someValue&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  render&lt;span style=&#34;color:#eceff4&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#eceff4&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;&amp;gt;{&lt;/span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;state&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;someKey&lt;span style=&#34;color:#eceff4&#34;&gt;}&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;default&lt;/span&gt; ExampleComponent&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;更新状态&#34;&gt;
  更新状态
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e6%9b%b4%e6%96%b0%e7%8a%b6%e6%80%81&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;更新状态时，需要留意如下规则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不要直接修改状态的属性值&lt;/li&gt;
&lt;li&gt;警告：&lt;code&gt;setState&lt;/code&gt; 是一个异步方法&lt;/li&gt;
&lt;li&gt;状态更新会合并操作&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;不要直接修改状态的属性值&#34;&gt;
  不要直接修改状态的属性值
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e4%b8%8d%e8%a6%81%e7%9b%b4%e6%8e%a5%e4%bf%ae%e6%94%b9%e7%8a%b6%e6%80%81%e7%9a%84%e5%b1%9e%e6%80%a7%e5%80%bc&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;第一条规则就是「不要向任何人提起状态更新」，恩不对，好像进错片场了。第一条规则是：不要直接修改状态的属性值。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// 不要这样做
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;state&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;someValueInState &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;NEW VALUE&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们只能在初始化状态时直接写入状态，比如在 &lt;code&gt;constructor&lt;/code&gt; 里进行定义。&lt;/p&gt;
&lt;p&gt;除了初始化之外，我们只能使用 &lt;code&gt;this.setState&lt;/code&gt; 方法来更新状态：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;setState&lt;span style=&#34;color:#eceff4&#34;&gt;({&lt;/span&gt;someValueInState&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;NEW VALUE&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;警告setstate-是一个异步方法&#34;&gt;
  警告：&lt;code&gt;setState&lt;/code&gt; 是一个异步方法
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e8%ad%a6%e5%91%8asetstate-%e6%98%af%e4%b8%80%e4%b8%aa%e5%bc%82%e6%ad%a5%e6%96%b9%e6%b3%95&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;请留意 &lt;code&gt;setState&lt;/code&gt; 的两个关键点：第一，在计算下一个状态时不能依赖 &lt;code&gt;this.state&lt;/code&gt; 和 &lt;code&gt;this.props&lt;/code&gt;，它们可能会被异步更新：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// 不要这样做
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;setState&lt;span style=&#34;color:#eceff4&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  counter&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;state&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;counter &lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;props&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;increment&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在这种情况下，用 &lt;code&gt;function&lt;/code&gt; 作为 &lt;code&gt;setState&lt;/code&gt; 的第一个参数即可：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;setState&lt;span style=&#34;color:#eceff4&#34;&gt;((&lt;/span&gt;prevState&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; props&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  counter&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; prevState&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;counter &lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt; props&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;increment
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;}));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;第二，由于 &lt;code&gt;setState&lt;/code&gt; 是异步执行的，因此我们不能依赖 &lt;code&gt;this.setState&lt;/code&gt; 之后马上取得的 &lt;code&gt;this.state&lt;/code&gt; 值。&lt;/p&gt;
&lt;p&gt;如果你要在状态真正完成更新时执行代码，请使用 &lt;code&gt;this.setState&lt;/code&gt; 的第二个参数，回调函数：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;setState&lt;span style=&#34;color:#eceff4&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    someKey&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;someValue&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#eceff4&#34;&gt;},&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// 只有在状态完成更新后，才会执行这里的代码
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;state-更新会合并操作&#34;&gt;
  &lt;code&gt;state&lt;/code&gt; 更新会合并操作
  &lt;a class=&#34;heading-link&#34; href=&#34;#state-%e6%9b%b4%e6%96%b0%e4%bc%9a%e5%90%88%e5%b9%b6%e6%93%8d%e4%bd%9c&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;当我们调用 &lt;code&gt;setState&lt;/code&gt; 方法时，React 将把参数传递的对象合并到当前的状态中。我们不必担心会出现属性覆盖的情况。&lt;/p&gt;
&lt;p&gt;假设我们在 &lt;code&gt;constructor&lt;/code&gt; 中定义了一个状态：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;constructor&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;props&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;super&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;props&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;state &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    someKey&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;someValue&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    someOtherKey&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;someOtherValue&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#eceff4&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;之后，我们可以用 &lt;code&gt;setState&lt;/code&gt; 分别更新这两个属性：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;setState&lt;span style=&#34;color:#eceff4&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  someKey&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;someNewValue&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在上面的代码里，&lt;code&gt;this.state.someOtherKey&lt;/code&gt; 就不会被覆盖。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hasta La Vista 2017</title>
      <link>http://localhost:1313/posts/hasta-la-vista-2017.html</link>
      <pubDate>Wed, 03 Jan 2018 00:18:48 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/hasta-la-vista-2017.html</guid>
      <description>&lt;p&gt;网易云音乐在 2018 的第二个工作日告诉我了去年的年度专辑，原来的确是&lt;a href=&#34;http://music.163.com/artist?id=16605&#34;&gt;伊藤サチコ&lt;/a&gt;。以及在日亚购买了《&lt;a href=&#34;https://www.amazon.co.jp/gp/product/B0056YEEL6/ref=oh_aui_detailpage_o00_s00?ie=UTF8&amp;amp;psc=1&#34;&gt;ジブリを聴きながら、上を向いて歩こう&lt;/a&gt;》。&lt;/p&gt;
&lt;h2 id=&#34;技术&#34;&gt;
  技术
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e6%8a%80%e6%9c%af&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;深入接触了 Vue.js + Vuex，延续了 Node.js + MongoDB 的路子。年底加入了 &lt;a href=&#34;https://www.grab.com&#34;&gt;Grab&lt;/a&gt;，开始使用 React 和 Go 的技术栈。&lt;/p&gt;
&lt;p&gt;年中用 Vue.js + Electron 的方案启动了一个饭否客户端项目，到年末完成度依然不高。遇到问题会被卡很久的毛病在这个项目中被体现得淋漓尽致。用 DOM 的方式控制视图也有难以逾越的「鸿坑」。总之，许多不起眼的地方都带着一层厚厚的 Hack，甚至让人想要学习使用 &lt;a href=&#34;better-xcode-2018.jpg&#34;&gt;Xcode&lt;/a&gt; 做原生应用了！&lt;/p&gt;
&lt;p&gt;夏季和@&lt;a href=&#34;https://github.com/LitoMore&#34;&gt;饭小默&lt;/a&gt;参加了一个 Beary Chat 的线下活动，现场开发机器人的环节热情高涨却没能拿到奖项，看来并没能「有 bear 来」。&lt;/p&gt;
&lt;p&gt;把老项目里开发的一个对话框组件 &lt;a href=&#34;https://github.com/mogita/vue-zydialog&#34;&gt;Vue ZyDialog&lt;/a&gt; 做成了一个独立的轮子，几乎没有任何观众。2017 年最后一个月下载量仅 18 次，估计 17.9 次都是爬虫吧😂&lt;/p&gt;
&lt;p&gt;年底开发了一个饭否机器人@&lt;a href=&#34;https://fanfou.com/yocat&#34;&gt;有猫&lt;/a&gt;，基于 &lt;a href=&#34;https://cloud.google.com/vision/&#34;&gt;Google Vision API&lt;/a&gt; 识别公共时间线上的猫图并转发。炸出一票饭否猫奴。并在上线 2 个月后 fo 数超过了我，目前仍在超慢速地上涨。&lt;/p&gt;
&lt;h2 id=&#34;游戏&#34;&gt;
  游戏
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e6%b8%b8%e6%88%8f&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Steam 收藏进入正轨，开始像一个普通的 Steamer 有事没事喜加一（我的 id 是 &lt;a href=&#34;http://steamcommunity.com/id/mogita/&#34;&gt;&lt;code&gt;mogita&lt;/code&gt;&lt;/a&gt;）。在心愿单里最久的游戏是 &lt;a href=&#34;http://store.steampowered.com/app/730/CounterStrike_Global_Offensive/&#34;&gt;Counter-Strike: Global Offensive&lt;/a&gt;；价格最贵的游戏是&lt;a href=&#34;http://store.steampowered.com/app/571260/THE_KING_OF_FIGHTERS_XIV_STEAM_EDITION/&#34;&gt;拳皇 14&lt;/a&gt;；进度最远的游戏是 &lt;a href=&#34;http://store.steampowered.com/app/359310/Evoland_2/&#34;&gt;Evoland 2&lt;/a&gt;；周目最多的游戏是 &lt;a href=&#34;http://store.steampowered.com/app/12120/Grand_Theft_Auto_San_Andreas/&#34;&gt;Grand Theft Auto: San Andreas&lt;/a&gt;；最喜欢的游戏是 &lt;a href=&#34;http://store.steampowered.com/app/266010/LYNE/&#34;&gt;LYNE&lt;/a&gt;、&lt;a href=&#34;http://store.steampowered.com/app/375820/Human_Resource_Machine/&#34;&gt;Human Resource Machine&lt;/a&gt;、&lt;a href=&#34;http://store.steampowered.com/app/413150/Stardew_Valley/&#34;&gt;Stardew Valley&lt;/a&gt;。买了还没开始玩的（这可能才是 Steam 的哲学）的游戏有 &lt;a href=&#34;http://store.steampowered.com/app/107100/Bastion/&#34;&gt;Bastion&lt;/a&gt;、&lt;a href=&#34;http://store.steampowered.com/app/203160/Tomb_Raider/&#34;&gt;Tomb Raider&lt;/a&gt;、&lt;a href=&#34;http://store.steampowered.com/app/495890/Montaro/&#34;&gt;Montaro&lt;/a&gt;、&lt;a href=&#34;http://store.steampowered.com/app/553640/ICEY/&#34;&gt;ICEY&lt;/a&gt;、&lt;a href=&#34;http://store.steampowered.com/app/322330/Dont_Starve_Together/&#34;&gt;Don&amp;rsquo;t Starve Together&lt;/a&gt;、&lt;a href=&#34;http://store.steampowered.com/app/339200/Oceanhorn_Monster_of_Uncharted_Seas/&#34;&gt;Oceanhorn: Monster of Uncharted Seas&lt;/a&gt; 等。&lt;/p&gt;
&lt;p&gt;年中进了 Minecraft 的碗，并买了个美团云架了私服。目前这个服务器主要在帮我跑自建 GitLab 的 CI 任务，而 Minecraft 也好久没登录了。&lt;/p&gt;
&lt;p&gt;年底在网易魔兽开了个死骑账号，充了一个月的游戏时间后发现已经不是按在线时间扣点了，玩与不玩剩余时间都会随着日子变少。大脚插件官方提取了核心组件，拷贝到 &lt;code&gt;AddOns&lt;/code&gt; 目录下就能被魔兽读取，不过 Windows 用户仍然享受安装包的雨露。&lt;/p&gt;
&lt;h2 id=&#34;音乐&#34;&gt;
  音乐
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e9%9f%b3%e4%b9%90&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;没有创造什么新东西。尝试了一段人声采样和 Wobble Bass 风格的东西，目前工程停滞中。&lt;/p&gt;
&lt;p&gt;几乎不再使用 ES61 了，一方面桌子太小，多数时间要让给开发工作，另一方面因为新买了 MPK mini，更适合玩玩音色小敲小打。&lt;/p&gt;
&lt;h2 id=&#34;2018&#34;&gt;
  2018
  &lt;a class=&#34;heading-link&#34; href=&#34;#2018&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;这些成就待达成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;做出一项公司产品&lt;/li&gt;
&lt;li&gt;完成饭否客户端项目&lt;/li&gt;
&lt;li&gt;完成人声 + Wobble 工程&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;新的故事，总得翻开的。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>如何在自建 GitLab 中启用 CI Runner</title>
      <link>http://localhost:1313/posts/how-to-setup-gitlab-ci-runner.html</link>
      <pubDate>Mon, 23 Oct 2017 11:43:50 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/how-to-setup-gitlab-ci-runner.html</guid>
      <description>&lt;p&gt;GitLab 内置了 CI/CD 功能，在任何自建的 &lt;a href=&#34;https://about.gitlab.com/installation/&#34;&gt;GitLab CE&lt;/a&gt; 服务器上都可以启用。对于中小型项目而言，这套内置的 CI/CD 工具足够用来完成测试、构建和部署自动化工作。&lt;/p&gt;
&lt;p&gt;本文以前一个端开发项目为例，简单介绍 GitLab Runner 的搭建和使用流程。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;什么是 GitLab Runner？&lt;/p&gt;
&lt;p&gt;GitLab Runner 是独立于 GitLab 的开源项目（采用 Go 语言编写），用来执行自动化任务，并能够与 GitLab 互传数据。它是 GitLab 官方采用的 CI 工具。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;安装和启用&#34;&gt;
  安装和启用
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%ae%89%e8%a3%85%e5%92%8c%e5%90%af%e7%94%a8&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;你可以直接查阅 &lt;a href=&#34;https://docs.gitlab.com/runner/&#34;&gt;GitLab Runner 入门页面&lt;/a&gt;来了解完整的安装步骤，这里仅作概括。&lt;/p&gt;
&lt;p&gt;建议使用独立于 GitLab 所在的服务器来安装 GitLab Runner，我所在的公司目前使用一台 2 核 4GB 的主机来运行所有项目的 CI 任务。同时，建议使用 Docker 作为任务运行环境，确保每个任务的执行环境相对干净独立。&lt;/p&gt;
&lt;p&gt;登录到要安装 GitLab Runner 的服务器，执行下列操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.docker.com/engine/installation/&#34;&gt;安装 Docker&lt;/a&gt;（Docker 版本不低于 &lt;code&gt;1.5.0&lt;/code&gt;）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo curl -sSL https://get.docker.com/ &lt;span style=&#34;color:#eceff4&#34;&gt;|&lt;/span&gt; sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看 GitLab 版本&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cat /opt/gitlab/version-manifest.txt &lt;span style=&#34;color:#eceff4&#34;&gt;|&lt;/span&gt;grep gitlab-ce&lt;span style=&#34;color:#eceff4&#34;&gt;|&lt;/span&gt;awk &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;{print $2}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装 GitLab Runner 软件源&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;# RHEL/CentOS/Fedora 系统&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -s https://packages.gitlab.com/install/repositories/runner/gitlab-ci-multi-runner/script.rpm.sh &lt;span style=&#34;color:#eceff4&#34;&gt;|&lt;/span&gt; sudo bash
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;# Debian/Ubuntu/Mint 系统&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -s https://packages.gitlab.com/install/repositories/runner/gitlab-ci-multi-runner/script.deb.sh &lt;span style=&#34;color:#eceff4&#34;&gt;|&lt;/span&gt; sudo bash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;安装 GitLab Runner&lt;/p&gt;
&lt;p&gt;若 GitLab 版本低于或等于 8，要安装 GitLab Runner 1.11 版，新旧版 GitLab Runner 的 API 互不兼容&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;# RHEL/CentOS/Fedora 系统&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo yum install gitlab-ci-multi-runner-1.11.2-1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;# Debian/Ubuntu/Mint 系统&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get install gitlab-ci-multi-runner-1.11.2-1
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;GitLab 9 或以上版本，直接安装 GitLab Runner 包即可&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;# RHEL/CentOS/Fedora 系统&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo yum install gitlab-ci-multi-runner
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;# Debian/Ubuntu/Mint 系统&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get install gitlab-ci-multi-runner
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;注册 GitLab Runner&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gitlab-runner register
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;跟着提示填写所需信息，其中要填写和 GitLab 对应的 Token 和 URL，用于连接 GitLab 和 GitLab Runner&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在哪里查找 Token 和 URL？&lt;/p&gt;
&lt;p&gt;如果你有 GitLab 管理员权限：
进入 Admin Area，打开 Overview - Runners 页面，可以找到 Token 和 URL。&lt;/p&gt;
&lt;p&gt;如果你没有 GitLab 管理员权限：
进入 GitLab 的任一项目，点击右上角的功能菜单选择 Runners（GitLab 8），或左侧的 Settings 菜单（GitLab &amp;gt; 8）选择 CI/CD，可以找到 Token 和 URL。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;在项目中使用-gitlab-ci&#34;&gt;
  在项目中使用 GitLab CI
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%9c%a8%e9%a1%b9%e7%9b%ae%e4%b8%ad%e4%bd%bf%e7%94%a8-gitlab-ci&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;假设我们要启用 CI 的项目叫做 &lt;code&gt;fe-project&lt;/code&gt;，在项目根目录创建一个 &lt;code&gt;.gitlab-ci.yml&lt;/code&gt; 文件，注意文件名开头的点字符。&lt;/p&gt;
&lt;p&gt;GitLab CI 包含三个常用的步骤（&lt;code&gt;stage&lt;/code&gt;），分别是 &lt;code&gt;test&lt;/code&gt;、&lt;code&gt;build&lt;/code&gt; 和 &lt;code&gt;deploy&lt;/code&gt;，用于执行测试、构建和部署任务。&lt;/p&gt;
&lt;p&gt;首先添加一段测试脚本：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;the_unit_test&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#81a1c1&#34;&gt;stage&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt; test
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#81a1c1&#34;&gt;script&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - npm install
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - npm run test
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;第一行是这段任务的名称，用于查阅和区分。第二行指定这段脚本要在 &lt;code&gt;test&lt;/code&gt; 阶段执行。第三行是脚本数组，即这个任务具体执行的命令。具体测试命令可根据你的项目实际情况修改，以上给出的是比较常见的测试命令。&lt;/p&gt;
&lt;p&gt;然后，提交代码并推到远程仓库。现在进入 &lt;code&gt;fe-project&lt;/code&gt; 项目的 Pipelines 页面，即可看到当前正在运行刚刚添加的测试任务。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;任务未运行或显示 Pending？&lt;/p&gt;
&lt;p&gt;进入项目的 Runners 页面，检查是否已启用 Runner&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果运行过程中有报错（或任务本身执行失败、不通过等），可以点击任务 ID 查看详细的运行日志，查看命令行回显的错误内容并进行修正。&lt;/p&gt;
&lt;p&gt;接下来在测试脚本下方添加构建脚本：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;build_the_project&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#81a1c1&#34;&gt;stage&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt; build
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#81a1c1&#34;&gt;script&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - npm install
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - npm build
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#81a1c1&#34;&gt;artifacts&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1&#34;&gt;expire_in&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#b48ead&#34;&gt;1&lt;/span&gt; week
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1&#34;&gt;paths&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - dist
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这段脚本与测试脚本结构相似，其中新增了一段 &lt;code&gt;artifacts&lt;/code&gt; 配置，用来指定构建出来的文件存放位置、过期时间等，供稍后的部署脚本使用。&lt;/p&gt;
&lt;p&gt;提交代码并推到远程仓库，进入 Pipelines 页面查看一下日志，如果没有问题则可以进入下一步部署。通常构建阶段比较耗时，根据 &lt;code&gt;script&lt;/code&gt; 执行的时长可能需要 3-5 分钟，具体耗时受项目本身的影响。&lt;/p&gt;
&lt;p&gt;最后，当测试和构建都通过时，就可以执行部署任务了，新代码将被上传到部署服务器。&lt;/p&gt;
&lt;h4 id=&#34;初次执行部署任务前的准备工作&#34;&gt;
  初次执行部署任务前的准备工作
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%88%9d%e6%ac%a1%e6%89%a7%e8%a1%8c%e9%83%a8%e7%bd%b2%e4%bb%bb%e5%8a%a1%e5%89%8d%e7%9a%84%e5%87%86%e5%a4%87%e5%b7%a5%e4%bd%9c&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;初次部署之前，你需要做这样几件事：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在生产服务器上配置好项目所需的服务，例如 Nginx、数据库等&lt;/li&gt;
&lt;li&gt;在生产服务器上创建一个 &lt;code&gt;gitlab&lt;/code&gt; 用户（用户名可以自拟）用于远程连接，并让项目所在的目录对这个用户可读写&lt;/li&gt;
&lt;li&gt;为这个用户创建一对 SSH 密钥，存放在此用户的 &lt;code&gt;.ssh&lt;/code&gt; 目录下，并拷贝私钥
&lt;ul&gt;
&lt;li&gt;注意：确保 &lt;code&gt;authorized_keys&lt;/code&gt; 文件权限 &lt;code&gt;chmod 600 authorized_keys&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;注意：确保 &lt;code&gt;.ssh&lt;/code&gt; 目录的权限 &lt;code&gt;chmod 700 ~/.ssh&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;进入项目的 GitLab 页面，并进入 Variables 页面（GitLab &amp;gt; 9 版本在 &lt;code&gt;Settings - CI/CD - Secret Variables&lt;/code&gt; 下），添加一个名为 &lt;code&gt;CI_PRIVATE_KEY&lt;/code&gt; 的变量，并将上一步拷贝的私钥粘贴在 Value 框内&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;提交部署脚本&#34;&gt;
  提交部署脚本
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e6%8f%90%e4%ba%a4%e9%83%a8%e7%bd%b2%e8%84%9a%e6%9c%ac&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;在构建脚本的下方添加部署脚本，关键信息已用注释标出：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;deploy_to_server&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;# 使用最小 Linux 发行版 Alpine 作为部署执行环境的镜像&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#81a1c1&#34;&gt;image&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt; alpine:3.6
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#81a1c1&#34;&gt;stage&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt; deploy
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#81a1c1&#34;&gt;script&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;# 使用教育网 apk 镜像&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - echo &amp;#34;http://mirrors.ustc.edu.cn/alpine/v3.6/main/&amp;#34; &amp;gt; /etc/apk/repositories
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;# 安装 rsync 和 openssh 包&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - apk add --no-cache rsync openssh
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;# 创建 ssh 密钥，用来登录到生产服务器&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - mkdir -p ~/.ssh
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - echo &amp;#34;$CI_PRIVATE_KEY&amp;#34; &amp;gt;&amp;gt; ~/.ssh/id_dsa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - chmod 600 ~/.ssh/id_dsa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - echo -e &amp;#34;Host *\n\tStrictHostKeyChecking no\n\n&amp;#34; &amp;gt; ~/.ssh/config
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;# 用准备工作中创建的用户登录到生产服务器，指定在 Nginx 中配置的项目路径&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;# 注意请将 0.0.0.0 换成实际的 IP 地址&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - rsync -av --progress --delete dist/ gitlab@0.0.0.0:/var/www/fe-project/dist/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;# 在生产服务器进行一次代码备份，其中 CI_BUILD_REF 是 GitLab CI 的内置变量，表示构建任务的 ID 哈希值，用来区分不同构建的产出物，便于部署发现问题时立即将线上代码切换为任一可用版本&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - rsync -av --progress --delete dist/ gitlab@0.0.0.0:/var/www/fe-project/dist-$CI_BUILD_REF/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;提交代码并推送到远程仓库，并观察 Pipelines 页面的日志。若测试、构建和部署都通过，再次访问网站的线上地址时，就可以看到最新的改动了。&lt;/p&gt;
&lt;h2 id=&#34;结束&#34;&gt;
  结束
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e7%bb%93%e6%9d%9f&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;本文以最简洁的方式介绍了 GitLab CI 的配置和使用，在现实开发中你可能需要根据项目性质的不同来编排&lt;a href=&#34;https://docs.gitlab.com/runner/configuration/advanced-configuration.html&#34;&gt;更加复杂的 CI 脚本&lt;/a&gt;。此外，你还可以使用 GitLab 自带的 Webhooks、Services 来连接 Slack、&lt;a href=&#34;https://integram.org/&#34;&gt;Telegram&lt;/a&gt; 等外部服务，实时知晓 CI 的运行状况和结果。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>构建 Vue.js 工程时 .vue 文件解析报错</title>
      <link>http://localhost:1313/posts/vue-js-doesn-t-export-content.html</link>
      <pubDate>Mon, 10 Apr 2017 00:00:51 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/vue-js-doesn-t-export-content.html</guid>
      <description>&lt;p&gt;在一台 CentOS 6 服务器上构建 Vue.js 项目时，&lt;code&gt;.vue&lt;/code&gt; 文件大量报错：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xxx.vue doesn&amp;#39;t export content
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个错误的原因之一可能是 &lt;code&gt;node-sass&lt;/code&gt; 安装不正常。也就是说，在 &lt;code&gt;.vue&lt;/code&gt; 文件报错日志的最上方，或许能够看到 &lt;code&gt;node-sass&lt;/code&gt; 模块的相关出错信息。&lt;/p&gt;
&lt;p&gt;如果你能看到这个出错信息，可以参考一下我的解决方法。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;检查 &lt;code&gt;node-sass&lt;/code&gt; 包是否正确安装和编译，以及在 &lt;code&gt;node-sass&lt;/code&gt; 包目录下生成 &lt;code&gt;vendor&lt;/code&gt; 文件夹。如果没有正确生成，需检查工程所在目录的读写或执行权限。&lt;/li&gt;
&lt;li&gt;编译环境中 &lt;code&gt;gcc&lt;/code&gt; 版本要在 4.9 或以上。我原先的版本是 4.8.8，它导致 &lt;code&gt;webpack&lt;/code&gt; 在构建 Vue.js 工程时报错：&lt;code&gt;Error: /usr/lib64/libstdc++.so.6: version CXXABI_1.3.5&#39; not found&lt;/code&gt;。你需要更新 gcc 版本。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更新 &lt;code&gt;gcc&lt;/code&gt; 方法参考：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;先安装 gcc 4.9&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;cd&lt;/span&gt; /etc/yum.repos.d
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget http://linuxsoft.cern.ch/cern/scl/slc6-scl.repo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yum -y --nogpgcheck install devtoolset-3-gcc devtoolset-3-gcc-c++
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;然后修改 &lt;code&gt;.bashrc&lt;/code&gt; 设置 gcc 的执行路径&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vi ~/.bashrc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;修改或插入 PATH 变量&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PATH=/opt/rh/devtoolset-3/root/usr/bin/:$PATH
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;进入工程目录，执行 &lt;code&gt;rm -rf node_modules/node-sass/ &amp;amp;&amp;amp; yarn add node-sass&lt;/code&gt; 再次安装并编译。如果安装过程无误，这次会由 gcc 4.9 进行编译。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;编译完成后，执行 &lt;code&gt;yarn build&lt;/code&gt; 或你的工程定义的构建命令来进行构建，应该不会再看到文章开头的错误了。&lt;/p&gt;
&lt;h2 id=&#34;20170601-更新&#34;&gt;
  20170601 更新
  &lt;a class=&#34;heading-link&#34; href=&#34;#20170601-%e6%9b%b4%e6%96%b0&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;CentOS 7 系统请参考这个 &lt;a href=&#34;https://gist.github.com/mogita/c3528c5229479c8e02d85bc3f96010ef&#34;&gt;gist&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Remove Nth Node From End of List 数组实现</title>
      <link>http://localhost:1313/posts/remove-nth-node-from-end-of-list-with-array.html</link>
      <pubDate>Tue, 07 Feb 2017 01:54:30 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/remove-nth-node-from-end-of-list-with-array.html</guid>
      <description>&lt;h2 id=&#34;原题&#34;&gt;
  原题
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%8e%9f%e9%a2%98&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Given a linked list, remove the nth node from the end of list and return its head.&lt;/p&gt;
&lt;p&gt;For example,&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Given linked list: 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5, and n = 2.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;After removing the second node from the end, the linked list becomes 1-&amp;gt;2-&amp;gt;3-&amp;gt;5.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Given n will always be valid.&lt;/p&gt;
&lt;p&gt;Try to do this in one pass.&lt;/p&gt;
&lt;h2 id=&#34;数组方式解答&#34;&gt;
  数组方式解答
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e6%95%b0%e7%bb%84%e6%96%b9%e5%bc%8f%e8%a7%a3%e7%ad%94&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;思路：先遍历整个链表，存成一个数组。然后删除从末尾起第 n 个元素（或从头起的第 &lt;code&gt;length - n + 1&lt;/code&gt; 个元素）。然后遍历数组建立新的链表，然后返回此链表，结束程序。&lt;/p&gt;
&lt;p&gt;我选择了从头算个数的方式，由于 Array 下标从 0 开始，因此传入的位置需要减 1，即最终传入 &lt;code&gt;length - n&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;var&lt;/span&gt; removeNthFromEnd &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;head&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; n&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;let&lt;/span&gt; arrayBridge &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;[];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;let&lt;/span&gt; currentNode &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; head&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  	&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// first pass: get the length
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;currentNode&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        arrayBridge&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;push&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;currentNode&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;val&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        currentNode &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; currentNode&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;next&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  	
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  	&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// for an edge situation where head has only 1 node
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;  	&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// leetcode expects an [] as an empty ListNode object
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;n &lt;span style=&#34;color:#81a1c1&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#b48ead&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; n &lt;span style=&#34;color:#81a1c1&#34;&gt;===&lt;/span&gt; arrayBridge&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;length&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;[];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    arrayBridge&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;splice&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;arrayBridge&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;length &lt;span style=&#34;color:#81a1c1&#34;&gt;-&lt;/span&gt; n&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#b48ead&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;let&lt;/span&gt; list &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; curr &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;new&lt;/span&gt; ListNode&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;arrayBridge&lt;span style=&#34;color:#eceff4&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#b48ead&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;let&lt;/span&gt; count &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#b48ead&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;count &lt;span style=&#34;color:#81a1c1&#34;&gt;&amp;lt;&lt;/span&gt; arrayBridge&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;length&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        curr&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;next &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;new&lt;/span&gt; ListNode&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;arrayBridge&lt;span style=&#34;color:#eceff4&#34;&gt;[&lt;/span&gt;count&lt;span style=&#34;color:#eceff4&#34;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        curr &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; curr&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;next&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        count&lt;span style=&#34;color:#81a1c1&#34;&gt;++&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;return&lt;/span&gt; list&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此解已是一个可获得 Accepted 的答案，但离题目要求的「只用一通」颇有差距，最坏的情况需要几乎两通的时间。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>8 个 ES6 实用特性</title>
      <link>http://localhost:1313/posts/es6-handy-features.html</link>
      <pubDate>Thu, 19 Jan 2017 10:45:49 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/es6-handy-features.html</guid>
      <description>&lt;h2 id=&#34;模板字符串template-string&#34;&gt;
  模板字符串（Template String）
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e6%a8%a1%e6%9d%bf%e5%ad%97%e7%ac%a6%e4%b8%b2template-string&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;var&lt;/span&gt; block &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;`&amp;lt;div&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;    &amp;lt;p&amp;gt;hello&amp;lt;/p&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;lt;/div&amp;gt;`&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;block&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#eceff4&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;&amp;gt;&lt;/span&gt;hello&lt;span style=&#34;color:#eceff4&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;箭头函数&#34;&gt;
  箭头函数
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e7%ae%ad%e5%a4%b4%e5%87%bd%e6%95%b0&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;解决父级作用域无法被回调函数访问的问题。例如下列 ES5 代码，必须在回调函数后添加 &lt;code&gt;.bind(this)&lt;/code&gt; 才可以正确运行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;var&lt;/span&gt; obj &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    names&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;mogita&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;me&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;zhiyi&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    domain&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;mogita.com&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    method&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;var&lt;/span&gt; mapEmail &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;item&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;return&lt;/span&gt; item &lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;@&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;domain&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;}.&lt;/span&gt;bind&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;names&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;map&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;mapEmail&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;obj&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;method&lt;span style=&#34;color:#eceff4&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;mogita@mogita.com&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;me@mogita.com&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;zhiyi@mogita.com&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;es6-用箭头函数替代&#34;&gt;
  ES6 用箭头函数替代
  &lt;a class=&#34;heading-link&#34; href=&#34;#es6-%e7%94%a8%e7%ae%ad%e5%a4%b4%e5%87%bd%e6%95%b0%e6%9b%bf%e4%bb%a3&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;var&lt;/span&gt; obj &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    names&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;mogita&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;me&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;zhiyi&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    domain&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;mogita.com&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    method&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;names&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;map&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;item &lt;span style=&#34;color:#eceff4&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;${&lt;/span&gt;item&lt;span style=&#34;color:#a3be8c&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;this&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;domain&lt;span style=&#34;color:#a3be8c&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;obj&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;method&lt;span style=&#34;color:#eceff4&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;mogita@mogita.com&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;me@mogita.com&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;zhiyi@mogita.com&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;class-语法糖&#34;&gt;
  Class 语法糖
  &lt;a class=&#34;heading-link&#34; href=&#34;#class-%e8%af%ad%e6%b3%95%e7%b3%96&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Javascript 中并没有真正的「类」，一直以来多用原型扩展的方式来构建一个类，如下列 ES5 代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt; Obj&lt;span style=&#34;color:#eceff4&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;Obj constructed&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Obj&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;prototype&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;method &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;This is Obj\&amp;#39;s method&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;About to construct&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;var&lt;/span&gt; obj &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;new&lt;/span&gt; Obj&lt;span style=&#34;color:#eceff4&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;obj&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;method&lt;span style=&#34;color:#eceff4&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;About to construct
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Obj constructed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;This is Obj&amp;#39;s method
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;es6-的-class-语法糖&#34;&gt;
  ES6 的 Class 语法糖
  &lt;a class=&#34;heading-link&#34; href=&#34;#es6-%e7%9a%84-class-%e8%af%ad%e6%b3%95%e7%b3%96&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;class&lt;/span&gt; Obj &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    constructor&lt;span style=&#34;color:#eceff4&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;Obj constructed&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    method&lt;span style=&#34;color:#eceff4&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;This is Obj\&amp;#39;s method&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;About to construct&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;var&lt;/span&gt; obj &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;new&lt;/span&gt; Obj&lt;span style=&#34;color:#eceff4&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;obj&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;method&lt;span style=&#34;color:#eceff4&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;About to construct
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Obj constructed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;This is Obj&amp;#39;s method
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;模块&#34;&gt;
  模块
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e6%a8%a1%e5%9d%97&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;方便在不同 &lt;code&gt;js&lt;/code&gt; 文件之间共用代码，使项目模块化。&lt;/p&gt;
&lt;h4 id=&#34;导入模块&#34;&gt;
  导入模块
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%af%bc%e5%85%a5%e6%a8%a1%e5%9d%97&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;import&lt;/span&gt; something from &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;framework&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;*&lt;/span&gt; as something from &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;framework&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;matchedProp&lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt; from &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;framework&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;导出接口&#34;&gt;
  导出接口
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%af%bc%e5%87%ba%e6%8e%a5%e5%8f%a3&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;default&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt; something &lt;span style=&#34;color:#eceff4&#34;&gt;{}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;var&lt;/span&gt; value &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;var&lt;/span&gt; another &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;another&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;var&lt;/span&gt; matchedProp &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;matched&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;反构造destructure&#34;&gt;
  反构造（Destructure）
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%8f%8d%e6%9e%84%e9%80%a0destructure&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Angular 等现代前端框架是用 TypeScript（ES6 的一个超集）编写的，反构造在导入语句中很常见，它可以用来选择所需的具体模块。&lt;/p&gt;
&lt;p&gt;例如 ES6 代码，只引用对象的若干选定属性：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;var&lt;/span&gt; obj &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    a&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#b48ead&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    b&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#b48ead&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    c&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#b48ead&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;a&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; c&lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; obj&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;a&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; c&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1 3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;剩余参数&#34;&gt;
  剩余参数
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%89%a9%e4%bd%99%e5%8f%82%e6%95%b0&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;如果最后一个命名了的参数前面加了三个点，该参数将含有该位置以及向后的所有传入参数。例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt; hello&lt;span style=&#34;color:#eceff4&#34;&gt;(...&lt;/span&gt;numbers&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    numbers&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;forEach&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;item&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;item&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#eceff4&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hello&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#b48ead&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#b48ead&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#b48ead&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#b48ead&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;铺展操作符&#34;&gt;
  铺展操作符
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e9%93%ba%e5%b1%95%e6%93%8d%e4%bd%9c%e7%ac%a6&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;铺展操作符可以视为「剩余参数」的反向概念，用来动态扩展参数。例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt; print&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;x&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; y&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; z&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;x &lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt; y &lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt; z&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;var&lt;/span&gt; params &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#b48ead&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#b48ead&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#b48ead&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print&lt;span style=&#34;color:#eceff4&#34;&gt;(...&lt;/span&gt;params&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;6
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;对象字面量语法糖&#34;&gt;
  对象字面量语法糖
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%af%b9%e8%b1%a1%e5%ad%97%e9%9d%a2%e9%87%8f%e8%af%ad%e6%b3%95%e7%b3%96&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;可以让对象属性名由变量组成。例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;var&lt;/span&gt; obj &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#eceff4&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;var_&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#b48ead&#34;&gt;42&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;life&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;obj&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;var_42&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;life
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>11 条提升工作效率的 npm 命令</title>
      <link>http://localhost:1313/posts/npm-useful-quick-tips.html</link>
      <pubDate>Sun, 04 Sep 2016 09:55:11 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/npm-useful-quick-tips.html</guid>
      <description>&lt;p&gt;Npm 是个容易上手但不易深入的工具，因为内置了数不尽的功能。如果要挨个学习和尝试，不知何年何月能够全部学完。&lt;/p&gt;
&lt;p&gt;以我自身为例，学会了一条 &lt;code&gt;npm prune&lt;/code&gt;（即本文第四节）之后，才明白如果项目里某些模块不再需要了，根本不必手动删除 &lt;code&gt;node_modules&lt;/code&gt; 目录再重新执行 &lt;code&gt;npm install&lt;/code&gt;。这个过程着实令人头痛。&lt;/p&gt;
&lt;p&gt;我们总结了 11 条易用的 npm 命令，能够帮你在任何工程中提升效率。&lt;/p&gt;
&lt;h2 id=&#34;打开模块的主页&#34;&gt;
  打开模块的主页
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e6%89%93%e5%bc%80%e6%a8%a1%e5%9d%97%e7%9a%84%e4%b8%bb%e9%a1%b5&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;执行：&lt;/strong&gt;&lt;code&gt;npm home &amp;lt;package&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;执行 &lt;code&gt;home&lt;/code&gt; 命令会打开 &lt;code&gt;package&lt;/code&gt; 指定包的主页。比如输入 &lt;code&gt;lodash&lt;/code&gt; 会打开 Lodash 的网站首页。无论这个包是否已被全局安装或工程内安装，都可以直接使用。&lt;/p&gt;
&lt;h2 id=&#34;打开模块的-github-仓库&#34;&gt;
  打开模块的 GitHub 仓库
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e6%89%93%e5%bc%80%e6%a8%a1%e5%9d%97%e7%9a%84-github-%e4%bb%93%e5%ba%93&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;执行：&lt;/strong&gt;&lt;code&gt;npm repo &amp;lt;package&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;和 &lt;code&gt;home&lt;/code&gt; 命令类似，&lt;code&gt;repo&lt;/code&gt; 命令会打开指定包的 GitHub 仓库页面。例如输入 &lt;code&gt;express&lt;/code&gt; 将打开 Express 的官方仓库页面。和 &lt;code&gt;home&lt;/code&gt; 一样，未安装的包也可以打开。&lt;/p&gt;
&lt;h2 id=&#34;检查需更新的依赖&#34;&gt;
  检查需更新的依赖
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e6%a3%80%e6%9f%a5%e9%9c%80%e6%9b%b4%e6%96%b0%e7%9a%84%e4%be%9d%e8%b5%96&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;执行：&lt;/strong&gt;&lt;code&gt;npm outdated&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;你可以在工程里执行 &lt;code&gt;outdated&lt;/code&gt; 命令，npm 会检查哪些包已陈旧，需要更新。结果会展现在一张表格里，显示当前版本、所需版本和最新版本。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ chatroom git:&lt;span style=&#34;color:#81a1c1&#34;&gt;(&lt;/span&gt;master&lt;span style=&#34;color:#81a1c1&#34;&gt;)&lt;/span&gt; npm outdated
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Package    Current  Wanted  Latest  Location
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;express     4.13.4  4.13.4  4.14.0  chatroom
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;socket.io    1.4.6   1.4.6   1.4.8  chatroom
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;检查未被-packagejson-声明的包&#34;&gt;
  检查未被 package.json 声明的包
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e6%a3%80%e6%9f%a5%e6%9c%aa%e8%a2%ab-packagejson-%e5%a3%b0%e6%98%8e%e7%9a%84%e5%8c%85&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;执行：&lt;/strong&gt;&lt;code&gt;npm prune&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;当你执行 &lt;code&gt;prune&lt;/code&gt; 时，npm 会检查 &lt;code&gt;package.json&lt;/code&gt; 里的依赖列表，并对比工程的 &lt;code&gt;node_modules&lt;/code&gt; 目录。它会打印出未被 &lt;code&gt;package.json&lt;/code&gt; 声明却已存在的包。你可以评估一下哪些包是真正需要的（比如说通过 &lt;code&gt;npm install&lt;/code&gt; 安装却未加 &lt;code&gt;--save&lt;/code&gt; 参数的包），并可以将它们删除。&lt;/p&gt;
&lt;h2 id=&#34;锁定依赖版本&#34;&gt;
  锁定依赖版本
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e9%94%81%e5%ae%9a%e4%be%9d%e8%b5%96%e7%89%88%e6%9c%ac&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;执行：&lt;/strong&gt;&lt;code&gt;npm shrinkwrap&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;执行 &lt;code&gt;shrinkwrap&lt;/code&gt; 命令将生成 &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; 文件。它能将安装在 &lt;code&gt;node_modules&lt;/code&gt; 目录中的依赖锁定在一个特定的版本。当 &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; 文件存在时，&lt;code&gt;npm install&lt;/code&gt; 将遵守其中的版本号，而不再使用 &lt;code&gt;package.json&lt;/code&gt; 里的更高版本号。&lt;/p&gt;
&lt;p&gt;如果你想检查 &lt;code&gt;package.json&lt;/code&gt;、&lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; 以及 &lt;code&gt;node_modules&lt;/code&gt; 中依赖版本的一致性，请尝试使用 &lt;a href=&#34;https://github.com/uber/npm-shrinkwrap&#34;&gt;npm-shrinkwrap&lt;/a&gt; 包。&lt;/p&gt;
&lt;h2 id=&#34;使用-npm-v3-和-nodejs-v4-lts&#34;&gt;
  使用 npm v3 和 Node.js v4 LTS
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e4%bd%bf%e7%94%a8-npm-v3-%e5%92%8c-nodejs-v4-lts&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;执行：&lt;/strong&gt;&lt;code&gt;npm install -g npm@3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;用 npm 全局安装 &lt;code&gt;npm@3&lt;/code&gt; 将把 v2 版的 npm 升级到 v3 版，甚至在 Node.js v4 LTS（Argon）上也可以这样做。这样，你的 v4 LTS 运行环境里就可以使用最新稳定版的 npm v3 了。&lt;/p&gt;
&lt;h2 id=&#34;让-npm-install--g-不再请求-sudo&#34;&gt;
  让 &lt;code&gt;npm install -g&lt;/code&gt; 不再请求 &lt;code&gt;sudo&lt;/code&gt;
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e8%ae%a9-npm-install--g-%e4%b8%8d%e5%86%8d%e8%af%b7%e6%b1%82-sudo&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;执行：&lt;/strong&gt;&lt;code&gt;npm config set prefix &amp;lt;dir&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;执行这个命令时，需要在 &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; 参数指定新的全局安装模块的目录，这样你就可以避免全局安装时要输入密码的情况了。指定的目录将成为新的全局 bin 目录。需要注意的是，新指定的目录必须对你的当前用户提供写权限，可以使用例如 &lt;code&gt;chown -R &amp;lt;USER&amp;gt; &amp;lt;dir&amp;gt;&lt;/code&gt; 的命令来修改权限。&lt;/p&gt;
&lt;h2 id=&#34;修改工程里的保存前缀&#34;&gt;
  修改工程里的保存前缀
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e4%bf%ae%e6%94%b9%e5%b7%a5%e7%a8%8b%e9%87%8c%e7%9a%84%e4%bf%9d%e5%ad%98%e5%89%8d%e7%bc%80&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;执行：&lt;/strong&gt;&lt;code&gt;npm config set save-prefix ~&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在安装新模块并用 &lt;code&gt;--save&lt;/code&gt; 或 &lt;code&gt;--save-dev&lt;/code&gt; 保存时，波浪号 &lt;code&gt;~&lt;/code&gt; 比 npm 默认的 &lt;code&gt;^&lt;/code&gt; 号保守。波浪号会把依赖锁定在当前小版本号，也就是说可以通过 &lt;code&gt;npm update&lt;/code&gt; 来安装 patch 发行版。而 &lt;code&gt;^&lt;/code&gt; 代表锁定在大版本号，通过 &lt;code&gt;npm update&lt;/code&gt; 安装的是 minor 发行版。&lt;/p&gt;
&lt;h2 id=&#34;上线前去掉工程里的-devdependencies&#34;&gt;
  上线前去掉工程里的 &lt;code&gt;devDependencies&lt;/code&gt;
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e4%b8%8a%e7%ba%bf%e5%89%8d%e5%8e%bb%e6%8e%89%e5%b7%a5%e7%a8%8b%e9%87%8c%e7%9a%84-devdependencies&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;当你的项目准备上线进入生产环境时，请无比在安装模块时加上 &lt;code&gt;--production&lt;/code&gt; 标记。这个标记将只安装 &lt;code&gt;dependencies&lt;/code&gt;，忽略 &lt;code&gt;devDependencies&lt;/code&gt;。这就保证了线上版本的代码库里不含有调试用的工具包等。&lt;/p&gt;
&lt;p&gt;其实，你可以在 &lt;code&gt;NODE_ENV&lt;/code&gt; 环境变量中设置 &lt;code&gt;production&lt;/code&gt;，从而保障线上工程的 &lt;code&gt;devDependencies&lt;/code&gt; 永远不被安装。&lt;/p&gt;
&lt;h2 id=&#34;使用-npmignore-时需谨慎&#34;&gt;
  使用 &lt;code&gt;.npmignore&lt;/code&gt; 时需谨慎
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e4%bd%bf%e7%94%a8-npmignore-%e6%97%b6%e9%9c%80%e8%b0%a8%e6%85%8e&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;如果你尚未使用过 &lt;code&gt;.npmignore&lt;/code&gt;，其默认值还是很安全的。&lt;/p&gt;
&lt;p&gt;一旦你在工程里添加了 &lt;code&gt;.npmignore&lt;/code&gt; 文件，那么 &lt;code&gt;.gitignore&lt;/code&gt; 里的规则就会被无视了。结局就是你必须保持这两个文件内容的同步，否则有可能在发布时泄漏敏感信息。&lt;/p&gt;
&lt;h2 id=&#34;设置-npm-init-的默认值&#34;&gt;
  设置 &lt;code&gt;npm init&lt;/code&gt; 的默认值
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e8%ae%be%e7%bd%ae-npm-init-%e7%9a%84%e9%bb%98%e8%ae%a4%e5%80%bc&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;当你在新工程里执行 &lt;code&gt;npm init&lt;/code&gt; 时，会从头到尾走一遍设置流程，最后生成 &lt;code&gt;package.json&lt;/code&gt;。如果你想要设定一些可以让 &lt;code&gt;npm init&lt;/code&gt; 一直使用的默认值，可以执行 &lt;code&gt;config set&lt;/code&gt; 命令，执行方法如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm config &lt;span style=&#34;color:#81a1c1&#34;&gt;set&lt;/span&gt; init.author.name &amp;lt;name&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm config &lt;span style=&#34;color:#81a1c1&#34;&gt;set&lt;/span&gt; init.author.email &amp;lt;email&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者你想要直接修改初始化脚本文件，做一些自定的初始化逻辑，那么请执行下面的命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm config &lt;span style=&#34;color:#81a1c1&#34;&gt;set&lt;/span&gt; init-module ~/.npm-init.js&lt;span style=&#34;color:#a3be8c&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;下面是个脚本范例，它会提问一些私人问题，并在需要时创建 GitHub 仓库。请修改默认的 GitHub 用户名 &lt;code&gt;YOUR_GITHUB_USERNAME&lt;/code&gt;，作为 GitHub 用户名的默认参数。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;var&lt;/span&gt; cp &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;child_process&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;var&lt;/span&gt; priv&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;var&lt;/span&gt; USER &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; process&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;env&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;GITHUB_USERNAME &lt;span style=&#34;color:#81a1c1&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;YOUR_GITHUB_USERNAME&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;module&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;exports &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  name&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; prompt&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; basename &lt;span style=&#34;color:#81a1c1&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;package&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;name&lt;span style=&#34;color:#eceff4&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  version&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;0.0.1&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;private&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; prompt&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;private&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;val&lt;span style=&#34;color:#eceff4&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;return&lt;/span&gt; priv &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;typeof&lt;/span&gt; val &lt;span style=&#34;color:#81a1c1&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;boolean&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;?&lt;/span&gt; val &lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;!!&lt;/span&gt;val&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;match&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#eceff4&#34;&gt;}),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  create&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; prompt&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;create github repo&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;yes&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;val&lt;span style=&#34;color:#eceff4&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    val &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; val&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;indexOf&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;!==&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#b48ead&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;if&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;val&lt;span style=&#34;color:#eceff4&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;enter github password:&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      cp&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;execSync&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#34;curl -u &amp;#39;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt;USER&lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#34;&amp;#39; https://api.github.com/user/repos -d &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#34;&amp;#39;{\&amp;#34;name\&amp;#34;: \&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt;basename&lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#34;\&amp;#34;, \&amp;#34;private\&amp;#34;: &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;((&lt;/span&gt;priv&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;true&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;false&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt;  &lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#34;}&amp;#39; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      cp&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;execSync&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;git remote add origin &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;https://github.com/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt;USER&lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt; basename &lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;.git&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;undefined&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#eceff4&#34;&gt;}),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  main&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; prompt&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;entry point&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;index.js&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  repository&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    type&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;git&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    url&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;git://github.com/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt;USER&lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt; basename &lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;.git&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  bugs&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt; url&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;https://github.com/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt;USER&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt; basename &lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;/issues&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  homepage&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#34;https://github.com/&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt;USER&lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt; basename&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  keywords&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; prompt&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;s&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;return&lt;/span&gt; s&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;split&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ebcb8b&#34;&gt;/\s+/&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;}),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  license&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;MIT&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  cleanup&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;cb&lt;span style=&#34;color:#eceff4&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cb&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;undefined&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;最后的话&#34;&gt;
  最后的话
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e6%9c%80%e5%90%8e%e7%9a%84%e8%af%9d&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;如果你还想了解更多关于 npm、Node.js、JavaScript、Docker、Kubernetes 和 Electron 等的话题，请关注 &lt;a href=&#34;https://twitter.com/nodesource&#34;&gt;@NodeSource&lt;/a&gt; 的 Twitter 账号。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hexo 博客写作快速指南</title>
      <link>http://localhost:1313/posts/hexo-blog-hands-on.html</link>
      <pubDate>Fri, 02 Sep 2016 19:57:24 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/hexo-blog-hands-on.html</guid>
      <description>&lt;p&gt;今天把博客更新到了 &lt;a href=&#34;https://hexo.io/&#34;&gt;Hexo&lt;/a&gt;，取代了之前的 &lt;a href=&#34;http://wordpress.org&#34;&gt;WordPress&lt;/a&gt; 网站。WordPress 是个十足优秀的博客程序，但 &lt;a href=&#34;https://daringfireball.net/projects/markdown/&#34;&gt;Markdown&lt;/a&gt; 已经成为了我日常工作中的主要文档书写方式。&lt;/p&gt;
&lt;h2 id=&#34;快速指南&#34;&gt;
  快速指南
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%bf%ab%e9%80%9f%e6%8c%87%e5%8d%97&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;因为是快速指南，所以操作细节会比较简略。如果你对任何细节有疑惑，请参考&lt;a href=&#34;https://hexo.io/docs/index.html&#34;&gt;官方文档&lt;/a&gt;，这里有详尽的讲解。&lt;/p&gt;
&lt;h4 id=&#34;什么是-hexo&#34;&gt;
  什么是 Hexo？
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e4%bb%80%e4%b9%88%e6%98%af-hexo&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;Hexo 是一个基于 &lt;code&gt;Node.js&lt;/code&gt; 的静态博客生成器。换成简单的说法就是：Hexo 是个命令行软件，可以把你的 &lt;code&gt;Markdown&lt;/code&gt; 文件转换成一组漂亮的 &lt;code&gt;html&lt;/code&gt; 页面构成的网站，把这个网站上传（部署）到 GitHub 或 FTP 服务器，就可以让读者访问你的博客了。&lt;/p&gt;
&lt;h4 id=&#34;如何使用&#34;&gt;
  如何使用？
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%a6%82%e4%bd%95%e4%bd%bf%e7%94%a8&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;既然 Hexo 是个软件，那么在使用之前就需要安装它。打开你的终端程序，执行下面的命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm install -g hexo-cli
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;什么是 &lt;a href=&#34;https://docs.npmjs.com/getting-started/installing-node&#34;&gt;npm&lt;/a&gt;？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;接下来，用 Hexo 命令来创建一个全新的博客吧。非常简单，执行下面的命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hexo init &amp;lt;folder&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;用你想要的名称替换 &lt;code&gt;&amp;lt;folder&amp;gt;&lt;/code&gt; 即可。这个命令会在当前所在的目录创建一个文件夹，里面装着一套 Hexo 博客的基本文件内容。当然现在它还是个尚未装修的毛坯房，你需要先对它进行一些敲敲打打。执行下面两条命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;cd&lt;/span&gt; &amp;lt;folder&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上述命令将切换到博客所在的文件夹，并让 &lt;code&gt;npm&lt;/code&gt; 自动安装所需的依赖。&lt;/p&gt;
&lt;p&gt;然后，用你喜欢的文本编辑器打开 &lt;code&gt;_config.yml&lt;/code&gt; 文件，这是 Hexo 博客的全部配置所在，比如网站域名、博客名称、作者昵称等。设置项的名称指明了它的作用，如果想要深入挖掘配置方法，请参考&lt;a href=&#34;https://hexo.io/docs/configuration.html&#34;&gt;此页文档&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;写文章&#34;&gt;
  写文章
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%86%99%e6%96%87%e7%ab%a0&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;首先，你需要知道文章都保存在哪里（事实上你不用手动创建 &lt;code&gt;.md&lt;/code&gt; 文件，但仍需要知道在哪里能找到它们）。进入 &lt;code&gt;/&amp;lt;folder&amp;gt;/source/_posts&lt;/code&gt; 文件夹，就能看到所有文章了，一篇文章对应一个 &lt;code&gt;.md&lt;/code&gt; 文件。&lt;/p&gt;
&lt;p&gt;怎样创建文章呢？执行下面的命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hexo new &lt;span style=&#34;color:#81a1c1&#34;&gt;[&lt;/span&gt;layout&lt;span style=&#34;color:#81a1c1&#34;&gt;]&lt;/span&gt; &amp;lt;name&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其中 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 是文章的文件名，不用附加 &lt;code&gt;.md&lt;/code&gt; 后缀。&lt;code&gt;layout&lt;/code&gt; 参数可以填入 &lt;code&gt;post&lt;/code&gt;（文章）或 &lt;code&gt;page&lt;/code&gt;（页面）。忽略 &lt;code&gt;layout&lt;/code&gt; 默认创建文章。如果创建的是文章，&lt;code&gt;.md&lt;/code&gt; 文件位于 &lt;code&gt;/&amp;lt;folder&amp;gt;/source/_posts&lt;/code&gt;，如果创建的是页面，则在 &lt;code&gt;/&amp;lt;folder&amp;gt;/source/&amp;lt;name&amp;gt;/index.md&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;然后，用你喜欢的 &lt;a href=&#34;http://www.williamlong.info/archives/4319.html&#34;&gt;Markdown 编辑器&lt;/a&gt;编辑文章吧。我正在使用的是 &lt;a href=&#34;http://typora.io/&#34;&gt;Typora&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;生成网站&#34;&gt;
  生成网站
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e7%94%9f%e6%88%90%e7%bd%91%e7%ab%99&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;文章写完了，需要先生成网站。也就是把 &lt;code&gt;.md&lt;/code&gt; 文件全部转换成 &lt;code&gt;html&lt;/code&gt; 等静态 Web 文件，同时自动套用主题、插件等。注意，虽然这里也提到了「主题」、「插件」这样的字眼，但与 WordPress 的主题和插件有着本质的不同，静态 Web 站不需要像 WordPress 那样运行服务端脚本，插件等扩展功能都是在生成时一步到位，网站访问者请求的是一个货真价实的纯 &lt;code&gt;html&lt;/code&gt; 网站。还有什么比直接访问 &lt;code&gt;html&lt;/code&gt; 文件更快的呢？&lt;/p&gt;
&lt;p&gt;执行下面的命令生成网站：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hexo generate
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;部署&#34;&gt;
  部署
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e9%83%a8%e7%bd%b2&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;所谓部署，对于静态 Web 站而言，就是「上传」了。无论是 GitHub 托管，还是通过 FTP 上传到自建网站，都需要把生成好的 &lt;code&gt;html&lt;/code&gt; 文件等资源上传到服务端。&lt;/p&gt;
&lt;p&gt;部署的配置方法已在官方文档中有详细的描述，比如 &lt;a href=&#34;https://hexo.io/docs/deployment.html#Git&#34;&gt;Git&lt;/a&gt; 方式，或 &lt;a href=&#34;https://hexo.io/docs/deployment.html#FTPSync&#34;&gt;FTP&lt;/a&gt; 方式。我的选择是 &lt;code&gt;FTP&lt;/code&gt;，因为我已经有一台虚拟主机了。&lt;/p&gt;
&lt;p&gt;执行下面的命令就可以开始部署了：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hexo deploy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果没有出错，就可以去访问你的新博客了。&lt;/p&gt;
&lt;h4 id=&#34;一步部署命令&#34;&gt;
  一步部署命令
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e4%b8%80%e6%ad%a5%e9%83%a8%e7%bd%b2%e5%91%bd%e4%bb%a4&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;使用下面的命令，可以在执行完生成后，自动执行部署命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hexo generate --deploy
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;# 甚至更简略的命令，功能同上
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hexo g -d
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;文章编辑小贴士&#34;&gt;
  文章编辑小贴士
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e6%96%87%e7%ab%a0%e7%bc%96%e8%be%91%e5%b0%8f%e8%b4%b4%e5%a3%ab&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Hexo 文章除了支持基本的 &lt;code&gt;Markdown&lt;/code&gt; 语法外，还额外支持一系列特殊标签，下面摘抄一些比较常用的标签。通过这些标签可以自动生成漂亮的排版元素。&lt;/p&gt;
&lt;h4 id=&#34;块引用&#34;&gt;
  块引用
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%9d%97%e5%bc%95%e7%94%a8&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{% quote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Every interaction is both precious and an opportunity to delight.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{% endquote %}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;效果&lt;/p&gt;
&lt;p&gt;{% quote Seth Godin &lt;a href=&#34;http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html&#34;&gt;http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html&lt;/a&gt; Welcome to Island Marketing %}
Every interaction is both precious and an opportunity to delight.
{% endquote %}&lt;/p&gt;
&lt;h4 id=&#34;代码块&#34;&gt;
  代码块
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e4%bb%a3%e7%a0%81%e5%9d%97&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;可以使用 &lt;code&gt;Markdown&lt;/code&gt; 的 &lt;code&gt;Code fence&lt;/code&gt; 语法，也可以使用下面的标签：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{% code Array.map %}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;array.map(callback[, thisArg])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{% endcode %}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;效果&lt;/p&gt;
&lt;p&gt;{% code Array.map %}
array.map(callback[, thisArg])
{% endcode %}&lt;/p&gt;
&lt;h3 id=&#34;gist&#34;&gt;
  Gist
  &lt;a class=&#34;heading-link&#34; href=&#34;#gist&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{% gist gist_id [filename] %}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;插入图片和附件&#34;&gt;
  插入图片和附件
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e6%8f%92%e5%85%a5%e5%9b%be%e7%89%87%e5%92%8c%e9%99%84%e4%bb%b6&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;在 &lt;code&gt;Markdown&lt;/code&gt; 文章里插入图片的方法十分简单，使用下面的语法就可以了：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;![&lt;span style=&#34;color:#81a1c1&#34;&gt;Image of Yaktocat&lt;/span&gt;](&lt;span style=&#34;color:#8fbcbb&#34;&gt;https://octodex.github.com/images/yaktocat.png&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果你想要有序地管理所有图片，可以使用 Hexo 的&lt;a href=&#34;https://hexo.io/docs/asset-folders.html#Post-Asset-Folder&#34;&gt;资源文件夹&lt;/a&gt;特性。首先需要在 &lt;code&gt;_config.yml&lt;/code&gt; 文件中进行如下配置：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;post_asset_folder: true
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样，每次执行 &lt;code&gt;hexo new [layout] &amp;lt;name&amp;gt;&lt;/code&gt; 时会自动创建 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 同名的文件夹，把文章所需的图片放入该文件夹即可。用下面的语法即可插入图片：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{% asset_img slug [title] %}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// 举例
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{% asset_img example.jpg This is an example image %}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{% asset_img &amp;#34;spaced asset.jpg&amp;#34; &amp;#34;spaced title&amp;#34; %}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其实，自动创建的 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 同名文件夹不仅可以用来存放图片，它本质上是一个「资源」文件夹，你还可以把其他类型的文件放在里面。比如，想要让读者下载一个 &lt;code&gt;PDF&lt;/code&gt; 文件的话，你可以把文件放进资源文件夹，然后在文章中这样引用它：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{% asset_link file.pdf My PDF File %}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;结尾&#34;&gt;
  结尾
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e7%bb%93%e5%b0%be&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Hexo 是一款基于 &lt;code&gt;Node.js&lt;/code&gt; 的静态博客生成器，你可以用 &lt;code&gt;Markdown&lt;/code&gt; 语法和 Hexo 的扩展标签来编写文章内容和进行排版、插入图片或附件等。完成编写后，需要生成并部署网站资源，可以部署到 &lt;code&gt;GitHub&lt;/code&gt; 通过 &lt;code&gt;GitHub Page&lt;/code&gt; 来访问你的静态网站，也可以部署到 &lt;code&gt;FTP&lt;/code&gt; 服务器。公开域名，就可以开始欢迎你的第一批访问者了！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>理解 JavaScript Promises：上、背景和基础</title>
      <link>http://localhost:1313/posts/understanding-javascript-promise-part-1.html</link>
      <pubDate>Mon, 18 Jul 2016 15:34:24 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/understanding-javascript-promise-part-1.html</guid>
      <description>&lt;h2 id=&#34;许诺之地&#34;&gt;
  许诺之地
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e8%ae%b8%e8%af%ba%e4%b9%8b%e5%9c%b0&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;ES2015 带来的最大变化之一就是&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&#34;&gt;原生的 Promise&lt;/a&gt;（即「许诺」，下同）特性，用来解决各种回调问题，让开发者写出同步风格的异步代码。&lt;/p&gt;
&lt;p&gt;讲道理来说，Promise 和 Generator 代表着异步的新标准。无论你是否使用它们，都应该了解一下。&lt;/p&gt;
&lt;p&gt;Promise 特性由很简单的 API 构成，但学习曲线稍显陡峭。初学者或许会感到它的概念十分艰涩，需要一个了解的过程和充分的示例。&lt;/p&gt;
&lt;p&gt;读完本文后，你将能做到：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;明白为什么会有 Promise，以及它们能解决什么问题；&lt;/li&gt;
&lt;li&gt;解释什么是 Promise，包括它们的实现以及应用；&lt;/li&gt;
&lt;li&gt;将常见的回调设计用 Promise 进行重写&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意，文中示例均以 Node 环境为前提，你可以手动拷贝代码，也可以 &lt;a href=&#34;https://github.com/Peleke/promises/&#34;&gt;clone 我的代码&lt;/a&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/Peleke/promises/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git checkout Part_1-Basics
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;下面是本文的整体框架：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;回调的问题&lt;/li&gt;
&lt;li&gt;Promise：定义以及 A+ 规范&lt;/li&gt;
&lt;li&gt;Promise 和反控制反转&lt;/li&gt;
&lt;li&gt;用 Promise 控制流程&lt;/li&gt;
&lt;li&gt;理解 &lt;code&gt;then&lt;/code&gt;、&lt;code&gt;reject&lt;/code&gt; 和 &lt;code&gt;resolve&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;异步式&#34;&gt;
  异步式
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%bc%82%e6%ad%a5%e5%bc%8f&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;任何写过一些 JavaScript 代码的开发者都知道，它是「非阻塞」或「异步执行」的。这究竟是什么意思？&lt;/p&gt;
&lt;h4 id=&#34;同步和异步&#34;&gt;
  同步和异步
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%90%8c%e6%ad%a5%e5%92%8c%e5%bc%82%e6%ad%a5&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;同步代码&lt;/strong&gt;会逐行运行，前行执行完了才执行后行。同步代码的近义词是阻塞执行，因为一行代码的执行会阻塞下面代码的执行，直到这行代码执行完毕。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// readfile_sync.js
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#34;use strict&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// This example uses Node, and so won&amp;#39;t run in the browser. 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;const&lt;/span&gt; filename &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;text.txt&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            fs &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;fs&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;Reading file . . . &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// readFileSync BLOCKS execution until it returns. 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;//   The program will wait to execute anything else until this operation finishes. 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;const&lt;/span&gt; file &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; fs&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;readFileSync&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;${&lt;/span&gt;__dirname&lt;span style=&#34;color:#a3be8c&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;${&lt;/span&gt;filename&lt;span style=&#34;color:#a3be8c&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// This will ALWAYS print after readFileSync returns. . . 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;Done reading file.&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// . . . And this will ALWAYS print the contents of &amp;#39;file&amp;#39;.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;`Contents: &lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;${&lt;/span&gt;file&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;toString&lt;span style=&#34;color:#eceff4&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/1.png&#34; alt=&#34;1&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;异步代码&lt;/strong&gt;正好相反：当前正在执行的这行代码不会阻止接下来的代码，就算它正在执行需要较长时间的操作，例如 I/O 或网络请求。这就是「非阻塞代码」。下面是用异步方式模拟上面的代码段：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// readfile_async.js
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#34;use strict&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// This example uses Node, so it won&amp;#39;t run in the browser.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;const&lt;/span&gt; filename      &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;text.txt&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            fs      &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;fs&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        getContents &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt; printContent &lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;file&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;return&lt;/span&gt; file&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;toString&lt;span style=&#34;color:#eceff4&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;TypeError&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;return&lt;/span&gt; file&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;Reading file . . . &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#34;=&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;repeat&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#b48ead&#34;&gt;76&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// readFile executes ASYNCHRONOUSLY. 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;//   The program will continue to execute past LINE A while 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;//   readFile does its business. We&amp;#39;ll talk about callbacks in detail
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;//   soon -- for now, just pay mind to the the order of the log
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;//   statements.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;let&lt;/span&gt; file&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fs&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;readFile&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;${&lt;/span&gt;__dirname&lt;span style=&#34;color:#a3be8c&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;${&lt;/span&gt;filename&lt;span style=&#34;color:#a3be8c&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; contents&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  file &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; contents&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;`Uh, actually, now I&amp;#39;m done. Contents are: &lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;${&lt;/span&gt; getContents&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;file&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;});&lt;/span&gt; &lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// LINE A
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// These will ALWAYS print BEFORE the file read is complete.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// Well, that&amp;#39;s both misleading and useless.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;`Done reading file. Contents are: &lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;${&lt;/span&gt;getContents&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;file&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#34;=&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;repeat&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#b48ead&#34;&gt;76&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/2.png&#34; alt=&#34;2&#34;&gt;&lt;/p&gt;
&lt;p&gt;同步代码最大的好处在于可读，便于理解。同步代码自上而下顺序执行，与我们读书的方式相同。第 n 行的代码一定比第 n+1 行代码先执行完。&lt;/p&gt;
&lt;p&gt;但同步代码的坏处在于执行慢。比如，用户点击按钮后，浏览器要在完成一个 2 秒的网络请求之后，再继续响应用户操作，这种体验是无法接受的。&lt;/p&gt;
&lt;p&gt;这个例子也正好说明为什么 JavaScript 是非阻塞型的。&lt;/p&gt;
&lt;h4 id=&#34;异步式带来的挑战&#34;&gt;
  异步式带来的挑战
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%bc%82%e6%ad%a5%e5%bc%8f%e5%b8%a6%e6%9d%a5%e7%9a%84%e6%8c%91%e6%88%98&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;异步代码带来了速度上的提升，但不再具有线性特征。即使上例中琐碎的代码段也是如此。请注意：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无法知道 &lt;code&gt;file&lt;/code&gt; 什么时候可用，除非将控制权交给 &lt;code&gt;readFile&lt;/code&gt; 并让它在准备好的时刻通知我们&lt;/li&gt;
&lt;li&gt;我们的代码不再按照它的书写顺序来执行，理解起来会不那么直观&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这几点问题将成为本文接下来讨论的中心。&lt;/p&gt;
&lt;h2 id=&#34;回调和回退&#34;&gt;
  回调和回退
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%9b%9e%e8%b0%83%e5%92%8c%e5%9b%9e%e9%80%80&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;我们来精简一下异步 &lt;code&gt;readFile&lt;/code&gt; 代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#34;use strict&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;const&lt;/span&gt; filename &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;throwaway.txt&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      fs       &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;fs&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;let&lt;/span&gt; file&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; useless&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;useless &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; fs&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;readFile&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;${&lt;/span&gt;__dirname&lt;span style=&#34;color:#a3be8c&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;${&lt;/span&gt;filename&lt;span style=&#34;color:#a3be8c&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt; callback &lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;error&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; contents&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  file &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; contents&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;`Got it. Contents are: &lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;${&lt;/span&gt;contents&lt;span style=&#34;color:#a3be8c&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;`. . . But useless is still &lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;${&lt;/span&gt;useless&lt;span style=&#34;color:#a3be8c&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;.`&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// Thanks to Rava for catching an error in this line.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;`File is &lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;${&lt;/span&gt;useless&lt;span style=&#34;color:#a3be8c&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;, but that&amp;#39;ll change soon.`&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;由于 &lt;code&gt;readFile&lt;/code&gt; 是非阻塞的，它不得不立即返回，以便代码继续往下执行。而「立即返回」也就意味着它没有足够的时间来完成 I/O 操作，它除了返回 &lt;code&gt;undefined&lt;/code&gt; 之外也别无他法。但我们需要的是在 &lt;code&gt;readFile&lt;/code&gt; 方法真正地读完文件。&lt;/p&gt;
&lt;p&gt;问题来了，我们怎么知道读取已经完成？&lt;/p&gt;
&lt;p&gt;答案也很简单：无法预知。但是，&lt;code&gt;readFile&lt;/code&gt; 方法可以。上面的代码段中，我们向&lt;code&gt;readFile&lt;/code&gt; 方法传递了两个参数：文件名，以及一个函数，这个函数就叫&lt;strong&gt;回调函数&lt;/strong&gt;。在文件读取完成的时刻，它就会被执行。&lt;/p&gt;
&lt;p&gt;把这段代码换成白话就是：「&lt;code&gt;readFile&lt;/code&gt;，请查看一下 &lt;code&gt;${__dirname}/${filename}&lt;/code&gt;这个路径里面有什么内容，这个过程需要一点时间。你查看完之后，请调用 &lt;code&gt;callback&lt;/code&gt; 方法，传入 &lt;code&gt;contents&lt;/code&gt;，如果有错误请让我知道 &lt;code&gt;error&lt;/code&gt; 是什么。」&lt;/p&gt;
&lt;p&gt;其要点就是我们无法获知读取文件的完成时间，只有 readFile 方法自己知道。这就是为什么我们要给它传递一个回调函数，并且信任 &lt;code&gt;readFile&lt;/code&gt; 会对这个函数做正确的事情。&lt;/p&gt;
&lt;p&gt;这便是以往人们使用异步方法的基本方式：用参数调用它，并传递一个回调函数来处理结果。&lt;/p&gt;
&lt;p&gt;回调是一种异步解决方案，但它们并不完美。两个比较大的问题在于：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;控制反转&lt;/li&gt;
&lt;li&gt;复杂的错误处理方式&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;控制反转&#34;&gt;
  控制反转
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e6%8e%a7%e5%88%b6%e5%8f%8d%e8%bd%ac&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;首先是关于信任的问题。&lt;/p&gt;
&lt;p&gt;当我们向 &lt;code&gt;readFile&lt;/code&gt; 传递回调函数时，我们&lt;strong&gt;相信&lt;/strong&gt;它会执行这个回调。然而，事实上它却从没保证过它会执行这个回调。就算它确实会被调用，也没人保证传递给这个回调函数的参数将一定正确，或者顺序一定正确，又或者执行的次数也一定正确。&lt;/p&gt;
&lt;p&gt;现实当中，这倒不是什么致命的问题：我们已经写了 20 多年回调，从未让网络崩坏。在此基础之上，我们觉得，把控制权直接交给 Node 核心代码应该也是安全的。&lt;/p&gt;
&lt;p&gt;但是，把一个应用中最关键的部分交给第三方去管理，总感觉有点冒险，过去已经造成了无数个难以捕捉的 &lt;a href=&#34;https://en.wikipedia.org/wiki/Heisenbug&#34;&gt;Heisenbug&lt;/a&gt;。&lt;/p&gt;
&lt;h4 id=&#34;显式错误处理&#34;&gt;
  显式错误处理
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e6%98%be%e5%bc%8f%e9%94%99%e8%af%af%e5%a4%84%e7%90%86&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;在同步式编程中，我们可以用 &lt;code&gt;try&lt;/code&gt;/&lt;code&gt;catch&lt;/code&gt;/&lt;code&gt;finally&lt;/code&gt; 来把握错误处理。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#34;use strict&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// This example uses Node, and so won&amp;#39;t run in the browser. 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;const&lt;/span&gt; filename &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;text.txt&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       fs        &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;fs&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;Reading file . . . &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;let&lt;/span&gt; file&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// Wrong filename. D&amp;#39;oh!
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;  file &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; fs&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;readFileSync&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;${&lt;/span&gt;__dirname&lt;span style=&#34;color:#a3be8c&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;${&lt;/span&gt;filename &lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;`Got it. Contents are: &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;${&lt;/span&gt;file&lt;span style=&#34;color:#a3be8c&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;`&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;`There was a/n &lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;${&lt;/span&gt;err&lt;span style=&#34;color:#a3be8c&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;: file is &lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;${&lt;/span&gt;file&lt;span style=&#34;color:#a3be8c&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;Catching errors, like a bo$$.&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;而在异步式编程中，还想这么写的话，就走远了：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#34;use strict&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// This example uses Node, and so won&amp;#39;t run in the browser. 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;const&lt;/span&gt; filename &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;throwaway.txt&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        fs       &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;fs&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;Reading file . . . &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;let&lt;/span&gt; file&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;try&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// Wrong filename. D&amp;#39;oh!
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;  fs&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;readFile&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;${&lt;/span&gt;__dirname&lt;span style=&#34;color:#a3be8c&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;${&lt;/span&gt;filename &lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; contents&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    file &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; contents&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#eceff4&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// This shouldn&amp;#39;t run if file is undefined
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;  console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;`Got it. Contents are: &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;${&lt;/span&gt;file&lt;span style=&#34;color:#a3be8c&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;`&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;catch&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// In this case, catch should run, but it never will.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;//   This is because readFile passes errors to the callback -- it does /not/
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;//   throw them.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;  console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;`There was a/n &lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;${&lt;/span&gt;err&lt;span style=&#34;color:#a3be8c&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;: file is &lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;${&lt;/span&gt;file&lt;span style=&#34;color:#a3be8c&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;`&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这段代码根本不会以设想的方式执行。因为 &lt;code&gt;try&lt;/code&gt; 语句块包含 &lt;code&gt;readFile&lt;/code&gt; 方法，后者永远会成功地返回一个 &lt;code&gt;undefined&lt;/code&gt; 值。也就是说，&lt;code&gt;try&lt;/code&gt; 永远会成功完成，而不会发生任何意外。&lt;/p&gt;
&lt;p&gt;要捕获 &lt;code&gt;readFile&lt;/code&gt; 产生的错误的方式只有一种，就是给它传递一个回调函数，并在这个回调中获得错误信息，然后再来处理错误。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#34;use strict&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// This example uses Node, and so won&amp;#39;t run in the browser. 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;const&lt;/span&gt; filename &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;throwaway.txt&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        fs       &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;fs&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;Reading file . . . &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fs&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;readFile&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;${&lt;/span&gt;__dirname&lt;span style=&#34;color:#a3be8c&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;${&lt;/span&gt;filename &lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; contents&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// catch
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;    console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;`There was a/n &lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;${&lt;/span&gt;err&lt;span style=&#34;color:#a3be8c&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;.`&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;else&lt;/span&gt;   &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// try
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;    console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;`Got it. File contents are: &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;${&lt;/span&gt;file&lt;span style=&#34;color:#a3be8c&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;`&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个例子的代码还不算太糟糕，但是工程量足够大时，这些问题会后患无穷。&lt;/p&gt;
&lt;p&gt;Promise 则一下解决了这两个问题等一系列不足之处，通过「反控制反转」，和「同步化」异步代码，来实现我们更熟悉的错误处理。&lt;/p&gt;
&lt;h2 id=&#34;promise-机制&#34;&gt;
  Promise 机制
  &lt;a class=&#34;heading-link&#34; href=&#34;#promise-%e6%9c%ba%e5%88%b6&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;假设你从 O’Reilly 订购了全套「&lt;a href=&#34;https://github.com/getify/You-Dont-Know-JS/blob/master/README.md#you-dont-know-js-book-series&#34;&gt;You Don’t Know JS&lt;/a&gt;」丛书。你把辛苦搬砖挣来的钞票给了他们，他们发给你一张收据，声明你将在下周一收到一套崭新的图书。在那之前，你都并未拥有这套图书。但你可以相信，一定会收到，因为他们保证过（promised）一定会寄送。&lt;/p&gt;
&lt;p&gt;基于这种 Promise，在图书送达之前，你就可以计划好每天要阅读多少本，计划借给朋友哪几本，甚至给老板请好一周的休假来奋力读书。在制定这些计划的时候，你其实都处于并未拥有这套图书的状态，你仅仅是知道你会拥有。&lt;/p&gt;
&lt;p&gt;当然，O’Reilly 可能过几天之后告诉你，由于七七八八的原因，订单无法完成了。到那时，你可以取消每日阅读计划，告诉你朋友他们不用等了（因为你自己都拿不到书），然后告诉老板，下周你会照常上班。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Promise&lt;/strong&gt;，就像这张收据一样，是替一个还未就绪的值占位的对象，但稍后一定会就绪。换句话说，一个未来的值。你可以把 Promise 当成一个你正在等待的值，并在假设你已获得它的前提下编写代码。&lt;/p&gt;
&lt;p&gt;如果在事件过程中出现岔子，Promise 会在自身内部流程去处理中断的地方，并且让你用一个特殊的 &lt;code&gt;catch&lt;/code&gt; 关键词来处理错误。这和同步式的代码有点不一样，但至少比异步处理一堆错误要舒服。&lt;/p&gt;
&lt;p&gt;并且，由于 Promise 会在一个值准备就绪时将其传递给你，你就可以决定要如何使用这个值。这就解决了控制反转的问题：你自己来直接掌握应用的逻辑，无需把控制权转交给第三方。&lt;/p&gt;
&lt;h4 id=&#34;promise-的生命周期状态states简介&#34;&gt;
  Promise 的生命周期：状态（States）简介
  &lt;a class=&#34;heading-link&#34; href=&#34;#promise-%e7%9a%84%e7%94%9f%e5%91%bd%e5%91%a8%e6%9c%9f%e7%8a%b6%e6%80%81states%e7%ae%80%e4%bb%8b&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;假设你用 Promise 进行了一次 API 调用。&lt;/p&gt;
&lt;p&gt;由于服务器不可能立即发回响应，Promise 是不可能立即获得最终值的，也不可能立即报告错误。这个状态下的 Promise 被称为 &lt;strong&gt;Pending&lt;/strong&gt;（等候中），好比你在等待订购的那套新书。&lt;/p&gt;
&lt;p&gt;一旦服务器发回了响应，就会产生两种可能：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Promise 得到了它期待的值，这个状态被称为 &lt;strong&gt;Fulfilled&lt;/strong&gt;（已满足）。好比你收到了那套书。&lt;/li&gt;
&lt;li&gt;请求事件中出现了错误，这时 Promise 的状态被称为 &lt;strong&gt;Rejected&lt;/strong&gt;（被拒绝）。这就好比你收到通知，购书订单无法完成了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这三个状态就是 Promise 的所有可能状态。一旦 Promise 变成了 Fulfilled 或 Rejected，则无法再转化为任何其他状态了。&lt;/p&gt;
&lt;p&gt;关于概念的阐释就说这么远，下面我们来看看究竟怎样应用这些东西。&lt;/p&gt;
&lt;h2 id=&#34;promise-的基础方法&#34;&gt;
  Promise 的基础方法
  &lt;a class=&#34;heading-link&#34; href=&#34;#promise-%e7%9a%84%e5%9f%ba%e7%a1%80%e6%96%b9%e6%b3%95&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;引用 &lt;a href=&#34;https://promisesaplus.com/&#34;&gt;Promises/A+ 标准&lt;/a&gt;的一段话：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Promise 代表一个异步操作的最终结果。与 Promise 进行交互的主要方式，是使用它的 &lt;code&gt;then&lt;/code&gt; 方法。该方法会注册回调函数，接收 Promise 的最终值，或 Promise 无法被满足的原因。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;接下来的部分，我们将对 Promise 的基本用法进行详细介绍：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用构造器创建 Promise&lt;/li&gt;
&lt;li&gt;用 &lt;code&gt;resolve&lt;/code&gt; 处理成功事件&lt;/li&gt;
&lt;li&gt;用 &lt;code&gt;rejected&lt;/code&gt; 处理错误事件&lt;/li&gt;
&lt;li&gt;用 &lt;code&gt;then&lt;/code&gt; 和 &lt;code&gt;catch&lt;/code&gt; 来建立控制流程&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在这个例子中，我们将使用 Promise 来搞定上边 &lt;code&gt;fs.readFile&lt;/code&gt; 的遗留代码。&lt;/p&gt;
&lt;h2 id=&#34;创建-promise&#34;&gt;
  创建 Promise
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%88%9b%e5%bb%ba-promise&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;最基本的 Promise 创建方法就是通过构造器直接创建。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;use strict&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;const&lt;/span&gt; fs &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;fs&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;const&lt;/span&gt; text &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;Promise&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;resolve&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; reject&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// Does nothing
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#eceff4&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意，我们向 Promise 构造器传递了一个函数作为参数。在这里我们将告诉 Promise 怎样执行异步操作、得到期待值后需要做什么，以及出错了怎么办。细说起来就是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Resolve&lt;/code&gt; 参数也是一个函数，里面包含当获得&lt;strong&gt;期待值&lt;/strong&gt;的时候我们想要做的事。当我们得到了期待值 &lt;code&gt;val&lt;/code&gt; 的时候，我们这样调用：&lt;code&gt;resolve(val)&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Reject&lt;/code&gt;参数也是一个函数，代表得到&lt;strong&gt;错误&lt;/strong&gt;的时候我们要怎么做。如果有错误&lt;code&gt;err&lt;/code&gt;，则要这样调用：&lt;code&gt;reject(err)&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;最后，我们传递给 Promise 构造器的函数将处理异步代码本身。如果它按期待返回了，我们就调用 &lt;code&gt;resolve&lt;/code&gt; 并传入获得的返回值。如果抛出错误，我们就调用&lt;code&gt;reject&lt;/code&gt; 并传入错误。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我们的示例需要把 &lt;code&gt;fs.readFile&lt;/code&gt; 封装成一个 Promise。那么，应该怎样写 &lt;code&gt;resolve&lt;/code&gt; 和&lt;code&gt;reject&lt;/code&gt; 呢？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在成功的事件中，我们用 &lt;code&gt;console.log&lt;/code&gt; 打印文件内容&lt;/li&gt;
&lt;li&gt;在错误的事件中，我们做一样的事：用 &lt;code&gt;console.log&lt;/code&gt; 打印错误信息&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;也就是这样：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// constructor.js
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;const&lt;/span&gt; resolve &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      reject &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; console&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;log&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接下来，我们需要把传递给构造器的函数补充完整。记住，我们的任务是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;读取一个文件&lt;/li&gt;
&lt;li&gt;如果成功，&lt;code&gt;resolve&lt;/code&gt;（解决）内容&lt;/li&gt;
&lt;li&gt;否则，&lt;code&gt;reject&lt;/code&gt;（拒绝）并给出错误&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;因此：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// constructor.js
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;const&lt;/span&gt; text &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;Promise&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;resolve&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; reject&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// Normal fs.readFile call, but inside Promise constructor . . . 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;    fs&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;readFile&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;text.txt&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; text&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// . . . Call reject if there&amp;#39;s an error . . . 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        reject&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// . . . And call resolve otherwise.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;      &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// We need toString() because fs.readFile returns a buffer.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;        resolve&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;text&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;toString&lt;span style=&#34;color:#eceff4&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#eceff4&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#eceff4&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样，我们就算完成工作了。这段代码会创建一个 Promise，它会严格执行我们想要的逻辑。但是，当你运行这段代码的时候，什么都不会打印出来。&lt;/p&gt;
&lt;h2 id=&#34;她做出了承诺然后&#34;&gt;
  她做出了承诺，然后…
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%a5%b9%e5%81%9a%e5%87%ba%e4%ba%86%e6%89%bf%e8%af%ba%e7%84%b6%e5%90%8e&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;原因是，我们写了 &lt;code&gt;resolve&lt;/code&gt; 和 &lt;code&gt;reject&lt;/code&gt; 方法，却并没有把它们传递给 Promise！怎么传？很简单，利用 Promise 的流程控制方法 &lt;code&gt;then&lt;/code&gt; 来完成。&lt;/p&gt;
&lt;p&gt;每个 Promise 对象都有一个叫做 &lt;code&gt;then&lt;/code&gt; 的方法，它仅接受两个参数：&lt;code&gt;resolve&lt;/code&gt; 和&lt;code&gt;reject&lt;/code&gt;，且要保证顺序一致。调用 Promise 的 &lt;code&gt;then&lt;/code&gt; 方法并传递这些函数，才能使构造器里的回调函数访问这两个函数。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// constructor.js
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;const&lt;/span&gt; text &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;Promise&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;resolve&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; reject&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    fs&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;readFile&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;text.txt&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; text&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        reject&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        resolve&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;text&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;toString&lt;span style=&#34;color:#eceff4&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#eceff4&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#eceff4&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;then&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;resolve&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; reject&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样，我们的 Promise 会读取文件，在成功时调用 &lt;code&gt;resolve&lt;/code&gt; 方法。&lt;/p&gt;
&lt;p&gt;有个很关键的点值得注意，&lt;strong&gt;then 方法永远会返回一个 Promise 对象&lt;/strong&gt;。这就是说，你可以用多个 &lt;code&gt;then&lt;/code&gt; 来构造复杂的、同步风格的流程控制，以此控制一串异步操作。在下一篇文章中我们会深入这个话题，接下来我们先用 &lt;code&gt;catch&lt;/code&gt; 范例来领略一下链式调用的风采。&lt;/p&gt;
&lt;h2 id=&#34;捕获错误的语法糖&#34;&gt;
  捕获错误的语法糖
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e6%8d%95%e8%8e%b7%e9%94%99%e8%af%af%e7%9a%84%e8%af%ad%e6%b3%95%e7%b3%96&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;我们向 &lt;code&gt;then&lt;/code&gt; 传递了两个方法：&lt;code&gt;resolve&lt;/code&gt;，用于成功事件；&lt;code&gt;reject&lt;/code&gt; 用于错误的事件。&lt;/p&gt;
&lt;p&gt;Promise 还暴露了一个类似于 &lt;code&gt;then&lt;/code&gt; 的方法，&lt;code&gt;catch&lt;/code&gt;。它只接受一个参数，那就是&lt;strong&gt;reject&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;由于 &lt;code&gt;then&lt;/code&gt; 总是返回一个 Promise，在上面的例子中，我们可以只给 &lt;code&gt;then&lt;/code&gt; 传递一个&lt;code&gt;resolve&lt;/code&gt;，然后紧接着用 &lt;code&gt;catch&lt;/code&gt; 来处理 reject。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;const&lt;/span&gt; text &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;Promise&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;resolve&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; reject&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    fs&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;readFile&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;tex.txt&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; text&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        reject&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        resolve&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;text&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;toString&lt;span style=&#34;color:#eceff4&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#eceff4&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#eceff4&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;then&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;resolve&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;catch&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;reject&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最后，必须要记住，&lt;code&gt;catch(reject)&lt;/code&gt; 只是 &lt;code&gt;then(undefined, reject)&lt;/code&gt; 的语法糖。即，我们也可以这样写：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;const&lt;/span&gt; text &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;Promise&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;resolve&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; reject&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    fs&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;readFile&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;tex.txt&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; text&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        reject&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;err&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        resolve&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;text&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;toString&lt;span style=&#34;color:#eceff4&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#eceff4&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#eceff4&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;then&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;resolve&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;then&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;undefined&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; reject&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但显然还是使用了语法糖的代码更易读。&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;
  总结
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e6%80%bb%e7%bb%93&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Promise 是异步编程中不可或缺的一个工具。初学时，它们显得有些可怕，但这仅仅是由于你对它还不够熟悉：多用几次，你就能像使用 &lt;code&gt;if&lt;/code&gt;/&lt;code&gt;else&lt;/code&gt; 一样使用它了。&lt;/p&gt;
&lt;p&gt;下篇文章，我们来实践一下，把基于回调的传统代码用 Promise 进行重构。然后调研一个 Promise 库：&lt;a href=&#34;https://github.com/kriskowal/q&#34;&gt;Q&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;你还可以阅读一下 Domenic Denicola 的「&lt;a href=&#34;https://github.com/domenic/promises-unwrapping/blob/master/docs/states-and-fates.md&#34;&gt;States and Fates（状态与命运）&lt;/a&gt;」来全面掌握术语，以及先前我们订购的丛书中 Kyle Simpson 关于 &lt;a href=&#34;https://github.com/getify/You-Dont-Know-JS/blob/master/async%20%26%20performance/ch3.md&#34;&gt;Promises&lt;/a&gt; 的章节。&lt;/p&gt;
&lt;p&gt;照例，如果你有问题，请在下边进行评论，或者在 Twitter 上直接找我（&lt;a href=&#34;http://www.twitter.com/PelekeS&#34;&gt;@PelekeS&lt;/a&gt;）。我保证（Promise）会回复！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>解决 AS3 推流无法发送 MetaData 的问题</title>
      <link>http://localhost:1313/posts/flash-as3-rtmp-metadata-sending-issue.html</link>
      <pubDate>Mon, 18 Jul 2016 13:55:08 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/flash-as3-rtmp-metadata-sending-issue.html</guid>
      <description>&lt;p&gt;在学习 ActionScript 3 推流的过程中遇到了一个棘手的问题，用 &lt;code&gt;ns.publish()&lt;/code&gt; 方法可以正常推流，但无法发送任何 MetaData。&lt;/p&gt;
&lt;p&gt;在 RTMP/FMS 服务器配置正确的情况下，可以检查一下是否有如下代码：&lt;/p&gt;
&lt;p&gt;在初始化 NetConnection 实例后，添加一行 &lt;code&gt;nc.objectEncoding = 0&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;这样，就可以正常收发 onMetaData 事件了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>用 gulp 压缩 CSS 和 JavaScript</title>
      <link>http://localhost:1313/posts/compress-css-and-js-with-gulp.html</link>
      <pubDate>Tue, 03 May 2016 19:44:10 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/compress-css-and-js-with-gulp.html</guid>
      <description>&lt;p&gt;最近接触前端工作比较多，所以需要学习一些自动化的工作方式。今天的学习内容是 &lt;a href=&#34;http://gulpjs.com/&#34;&gt;gulp&lt;/a&gt;。本文直接以 CSS 和 JavaScript 文件压缩作为入门范例，这两种自动化处理也是最常见的处理之一，能对前端页面字节精简，缩短用户的页面载入等待，也能减少数据流量消耗。&lt;/p&gt;
&lt;h2 id=&#34;安装-gulp&#34;&gt;
  安装 gulp
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%ae%89%e8%a3%85-gulp&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;在安装 gulp 之前，本机必须已安装 &lt;a href=&#34;https://nodejs.org/en/&#34;&gt;npm&lt;/a&gt;，一个随 Node.js 安装包一起安装的包管理器。&lt;/p&gt;
&lt;p&gt;首先，全局安装 gulp。在命令行中执行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm install --global gulp-cli
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后进入工程根目录，在工程中安装 gulp，执行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm install --save-dev gulp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意：若工程未进行 npm 初始化，请在安装 gulp 之前执行 &lt;code&gt;npm init&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;接下来，创建 &lt;code&gt;gulpfile.js&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;var&lt;/span&gt; gulp &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;gulp&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gulp&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;task&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// place code for your default task here
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最后，执行 gulp：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gulp
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们会在终端看到「default」任务的执行结果。当然，目前是不会有任何动作，因为我们的「default」任务里没有代码。&lt;/p&gt;
&lt;h2 id=&#34;sass-自动编译&#34;&gt;
  Sass 自动编译
  &lt;a class=&#34;heading-link&#34; href=&#34;#sass-%e8%87%aa%e5%8a%a8%e7%bc%96%e8%af%91&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;当保存好一个 .scss 文件后，通常我们需要用 sass 命令来将其编译成 .css 文件。&lt;/p&gt;
&lt;p&gt;通过 gulp，把这个处理放入自动流程就可以了。&lt;/p&gt;
&lt;p&gt;进入工程根目录，安装 &lt;a href=&#34;https://www.npmjs.com/package/gulp-sass&#34;&gt;gulp-sass&lt;/a&gt; 包：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm install gulp-sass --save-dev
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意：如果需要安装 sass，请根据&lt;a href=&#34;http://sass-lang.com/install&#34;&gt;官方文档&lt;/a&gt;进行安装。&lt;/p&gt;
&lt;p&gt;编辑 &lt;code&gt;gulpfile.js&lt;/code&gt; 文件，加入对 gulp-sass 的引用，并添加 styles 任务（任务名可以随意起）。完整代码如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;var&lt;/span&gt; gulp &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;gulp&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sass &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;gulp-sass&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gulp&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;task&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;styles&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;return&lt;/span&gt; gulp&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;src&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;src/styles/*.scss&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;pipe&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;sass&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;sync&lt;span style=&#34;color:#eceff4&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            outputStyle&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;expanded&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;}))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;pipe&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;gulp&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;dest&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;dest/styles/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后在工程根目录执行 &lt;code&gt;gulp styles&lt;/code&gt;，即可看到生成的普通 css 文件。&lt;/p&gt;
&lt;h2 id=&#34;autoprefixer-支持浏览器特定的-css-前缀&#34;&gt;
  Autoprefixer 支持浏览器特定的 CSS 前缀
  &lt;a class=&#34;heading-link&#34; href=&#34;#autoprefixer-%e6%94%af%e6%8c%81%e6%b5%8f%e8%a7%88%e5%99%a8%e7%89%b9%e5%ae%9a%e7%9a%84-css-%e5%89%8d%e7%bc%80&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;或许我们看到过（或者每天都要写）这样的 CSS 代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-css&#34; data-lang=&#34;css&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1&#34;&gt;-webkit-&lt;/span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;border-radius&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#b48ead&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;px&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;border-radius&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#b48ead&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;px&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以看到，除了 &lt;code&gt;border-radius&lt;/code&gt; 之外，还有一行 &lt;code&gt;-webkit-border-radius&lt;/code&gt;，这个就是为 webkit 内核准备的 CSS 前缀。如果使用 PhpStorm 这样的 IDE，它或许会为我们自动补充所需的前缀。但只写不带前缀的语句，能够提高 CSS 代码的可读性，只需把添加前缀的工作交给 gulp 来执行即可。&lt;/p&gt;
&lt;p&gt;首先，还是安装 gulp-autoprefixer 依赖：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm install gulp-autoprefixer --save-dev
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后在 &lt;code&gt;gulpfile.js&lt;/code&gt; 文件中引用它，并添加 pipe。完整代码如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;var&lt;/span&gt; gulp &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;gulp&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sass &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;gulp-sass&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    autoprefixer &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;gulp-autoprefixer&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gulp&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;task&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;styles&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;return&lt;/span&gt; gulp&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;src&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;src/styles/*.scss&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;pipe&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;sass&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;sync&lt;span style=&#34;color:#eceff4&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            outputStyle&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;expanded&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;}))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;pipe&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;autoprefixer&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;last 2 version&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;pipe&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;gulp&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;dest&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;dest/styles/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后在工程根目录执行 &lt;code&gt;gulp styles&lt;/code&gt; 即可。&lt;/p&gt;
&lt;h2 id=&#34;css-压缩&#34;&gt;
  CSS 压缩
  &lt;a class=&#34;heading-link&#34; href=&#34;#css-%e5%8e%8b%e7%bc%a9&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;前端页面优化的重要一环就是文件压缩（minify），以达到节省用户的流量，加速页面载入的目的。下面我们对工程的 CSS 文件进行字节精简，也就是压缩。&lt;/p&gt;
&lt;p&gt;第一步，仍然是安装依赖：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm install gulp-minify-css --save-dev
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;同时，为了遵循压缩版文件在文件名中标明「.min」的惯例，我们需要一个文件改名包：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm install gulp-rename --save-dev
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接下来，仍然是编辑 &lt;code&gt;gulpfile.js&lt;/code&gt; 文件，完整代码如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;var&lt;/span&gt; gulp &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;gulp&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sass &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;gulp-sass&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    autoprefixer &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;gulp-autoprefixer&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    minifycss &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;gulp-minify-css&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    rename &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;gulp-rename&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gulp&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;task&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;styles&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;return&lt;/span&gt; gulp&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;src&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;src/styles/*.scss&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;pipe&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;sass&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;sync&lt;span style=&#34;color:#eceff4&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            outputStyle&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;expanded&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;}))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;pipe&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;autoprefixer&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;last 2 version&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;pipe&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;gulp&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;dest&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;dest/styles/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;pipe&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;rename&lt;span style=&#34;color:#eceff4&#34;&gt;({&lt;/span&gt;suffix&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;.min&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;}))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;pipe&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;minifycss&lt;span style=&#34;color:#eceff4&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;pipe&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;gulp&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;dest&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;dest/styles/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在工程根目录执行一下 &lt;code&gt;gulp styles&lt;/code&gt;，未压缩版和压缩版的 main.css 都已经转换完毕了。&lt;/p&gt;
&lt;h2 id=&#34;javascript-压缩&#34;&gt;
  JavaScript 压缩
  &lt;a class=&#34;heading-link&#34; href=&#34;#javascript-%e5%8e%8b%e7%bc%a9&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;继续页面优化，我们需要把 JS 文件进行「合并（concatenate）」处理，并「丑化（uglify）」，形成一个几乎无法阅读但可以被浏览器执行的压缩版 JS 文件。&lt;/p&gt;
&lt;p&gt;先安装依赖：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm install gulp-uglify --save-dev
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;以及：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm install gulp-concat --save-dev
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后编辑 &lt;code&gt;gulpfile.js&lt;/code&gt; 文件，完整代码如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;var&lt;/span&gt; gulp &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;gulp&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sass &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;gulp-sass&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    autoprefixer &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;gulp-autoprefixer&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    minifycss &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;gulp-minify-css&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    rename &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;gulp-rename&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    concat &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;gulp-concat&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    uglify &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;gulp-uglify&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gulp&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;task&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;styles&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;return&lt;/span&gt; gulp&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;src&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;src/styles/*.scss&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;pipe&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;sass&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;sync&lt;span style=&#34;color:#eceff4&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            outputStyle&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;expanded&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;}))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;pipe&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;autoprefixer&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;last 2 version&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;pipe&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;gulp&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;dest&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;dest/styles/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;pipe&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;rename&lt;span style=&#34;color:#eceff4&#34;&gt;({&lt;/span&gt;suffix&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;.min&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;}))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;pipe&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;minifycss&lt;span style=&#34;color:#eceff4&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;pipe&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;gulp&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;dest&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;dest/styles/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gulp&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;task&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;scripts&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;return&lt;/span&gt; gulp&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;src&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;src/scripts/*.js&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;pipe&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;concat&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;main.js&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;pipe&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;gulp&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;dest&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;dest/scripts/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;pipe&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;rename&lt;span style=&#34;color:#eceff4&#34;&gt;({&lt;/span&gt;suffix&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;.min&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;}))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;pipe&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;uglify&lt;span style=&#34;color:#eceff4&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;pipe&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;gulp&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;dest&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;dest/scripts/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在工程根目录执行一下 &lt;code&gt;gulp scripts&lt;/code&gt;，JS 压缩就完成了。&lt;/p&gt;
&lt;h2 id=&#34;将自动化进行到底&#34;&gt;
  将「自动化」进行到底
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%b0%86%e8%87%aa%e5%8a%a8%e5%8c%96%e8%bf%9b%e8%a1%8c%e5%88%b0%e5%ba%95&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;我们可以利用 gulp 的 &lt;code&gt;watch&lt;/code&gt; 方法，让 gulp 主动监控我们对文件所做的修改，并自动启动所需的处理任务。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;gulpfile.js&lt;/code&gt; 中添加我们的两行 watch 语句，完整代码如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;var&lt;/span&gt; gulp &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;gulp&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sass &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;gulp-sass&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    autoprefixer &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;gulp-autoprefixer&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    minifycss &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;gulp-minify-css&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    rename &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;gulp-rename&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    concat &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;gulp-concat&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    uglify &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;gulp-uglify&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gulp&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;task&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;styles&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;return&lt;/span&gt; gulp&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;src&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;src/styles/*.scss&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;pipe&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;sass&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;sync&lt;span style=&#34;color:#eceff4&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            outputStyle&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;expanded&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;}))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;pipe&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;autoprefixer&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;last 2 version&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;pipe&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;gulp&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;dest&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;dest/styles/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;pipe&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;rename&lt;span style=&#34;color:#eceff4&#34;&gt;({&lt;/span&gt;suffix&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;.min&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;}))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;pipe&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;minifycss&lt;span style=&#34;color:#eceff4&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;pipe&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;gulp&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;dest&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;dest/styles/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gulp&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;task&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;scripts&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;return&lt;/span&gt; gulp&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;src&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;src/scripts/*.js&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;pipe&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;concat&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;main.js&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;pipe&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;gulp&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;dest&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;dest/scripts/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;pipe&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;rename&lt;span style=&#34;color:#eceff4&#34;&gt;({&lt;/span&gt;suffix&lt;span style=&#34;color:#81a1c1&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;.min&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;}))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;pipe&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;uglify&lt;span style=&#34;color:#eceff4&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;pipe&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;gulp&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;dest&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;dest/scripts/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gulp&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;task&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;watch&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    gulp&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;watch&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;src/scripts/*.js&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;scripts&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    gulp&lt;span style=&#34;color:#eceff4&#34;&gt;.&lt;/span&gt;watch&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;src/styles/*.scss&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;styles&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;进入工程根目录，执行 &lt;code&gt;gulp watch&lt;/code&gt;，我们会发现这次执行到「Finished…」之后并没有退出，而是一直挂在这一行。没错，gulp 已经在监视源文件目录了，这时候对&lt;code&gt;src/scripts/&lt;/code&gt; 和 &lt;code&gt;src/styles/&lt;/code&gt; 下的文件进行修改，gulp 就会自动执行处理。&lt;/p&gt;
&lt;h2 id=&#34;结尾&#34;&gt;
  结尾
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e7%bb%93%e5%b0%be&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;以上处理已经能够为我们的工程提供一定的前端页面字节精简了，在 JS、CSS 代码量巨大的工程中，优化效果尤为明显。&lt;/p&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gulpjs/gulp/blob/master/docs/getting-started.md&#34;&gt;https://github.com/gulpjs/gulp/blob/master/docs/getting-started.md&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://community.nitrous.io/tutorials/setting-up-gulp-with-livereload-sass-and-other-tasks&#34;&gt;https://community.nitrous.io/tutorials/setting-up-gulp-with-livereload-sass-and-other-tasks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://tagtree.tv/gulp&#34;&gt;http://tagtree.tv/gulp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>多个域名访问同一个 CodeIgniter 的不同 Controllers</title>
      <link>http://localhost:1313/posts/codeigniter-map-controllers-to-multiple-domains.html</link>
      <pubDate>Mon, 18 Jan 2016 23:03:17 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/codeigniter-map-controllers-to-multiple-domains.html</guid>
      <description>&lt;p&gt;一套 CodeIgniter 部署，可以承载不同的业务：不同的 MVC 模块，用不同的域名访问。严格来讲，要让一个模块独立形成一套 MVC，需使用 wiredesignz 的 &lt;a href=&#34;https://bitbucket.org/wiredesignz/codeigniter-modular-extensions-hmvc&#34;&gt;codeigniter-modular-extensions-hmvc&lt;/a&gt; 扩展。后者则是 CI 自身的路由所提供的特性。&lt;/p&gt;
&lt;p&gt;关于 HMVC 的讲解之后有时间再写。本文只讲如何用不同域名访问不同的 Controllers。&lt;/p&gt;
&lt;h2 id=&#34;配置-nginx&#34;&gt;
  配置 Nginx
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e9%85%8d%e7%bd%ae-nginx&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;我的服务器环境基于 Nginx，所以这里贴出我的代码（需修改自定义部分后才可复用）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;server&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;server_name&lt;/span&gt;     &lt;span style=&#34;color:#a3be8c&#34;&gt;user.example.com&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;admin.example.com&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;root&lt;/span&gt;            &lt;span style=&#34;color:#a3be8c&#34;&gt;/path/to/code/base&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;index&lt;/span&gt;           &lt;span style=&#34;color:#a3be8c&#34;&gt;index.php&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;index.html&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;index.htm&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;location&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;try_files&lt;/span&gt; $uri $uri/ &lt;span style=&#34;color:#a3be8c&#34;&gt;/index.php?&lt;/span&gt;$query_string&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;location&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;~&lt;/span&gt; &lt;span style=&#34;color:#ebcb8b&#34;&gt;\.php($|/)&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;fastcgi_pass&lt;/span&gt;   127.0.0.1&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#b48ead&#34;&gt;9000&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;fastcgi_index&lt;/span&gt;  &lt;span style=&#34;color:#a3be8c&#34;&gt;index.php&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;fastcgi_split_path_info&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;^(.+\.php)(.*)&lt;/span&gt;$&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;fastcgi_param&lt;/span&gt;   &lt;span style=&#34;color:#a3be8c&#34;&gt;PATH_INFO&lt;/span&gt; $fastcgi_path_info&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;fastcgi_param&lt;/span&gt;  &lt;span style=&#34;color:#a3be8c&#34;&gt;SCRIPT_FILENAME&lt;/span&gt;  $document_root$fastcgi_script_name&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;include&lt;/span&gt;        &lt;span style=&#34;color:#a3be8c&#34;&gt;fastcgi_params&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;location&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;~&lt;/span&gt; &lt;span style=&#34;color:#ebcb8b&#34;&gt;/\.ht&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;deny&lt;/span&gt;  &lt;span style=&#34;color:#a3be8c&#34;&gt;all&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意把所有域名放在 &lt;code&gt;server_name&lt;/code&gt; 的同一行，中间用空格分开。&lt;/p&gt;
&lt;p&gt;我们照例使用 &lt;code&gt;try_files&lt;/code&gt; 去除 URL 中的 index.php。&lt;/p&gt;
&lt;h2 id=&#34;部署-codeigniter-并配置-routesphp&#34;&gt;
  部署 CodeIgniter 并配置 routes.php
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e9%83%a8%e7%bd%b2-codeigniter-%e5%b9%b6%e9%85%8d%e7%bd%ae-routesphp&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;部署过程就不细说了，若有问题直接甩评论上来吧。&lt;/p&gt;
&lt;p&gt;仅以演示为目的，我们进入 &lt;code&gt;/application/controllers&lt;/code&gt; 目录，把 CI 自带的&lt;code&gt;Welcome.php&lt;/code&gt; 代码修改成如下内容：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;defined&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;BASEPATH&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;exit&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;No direct script access allowed&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#8fbcbb&#34;&gt;Welcome&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;extends&lt;/span&gt; CI_Controller &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#88c0d0&#34;&gt;index&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;Hello user&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后，复制 &lt;code&gt;Welcome.php&lt;/code&gt;，并命名为 &lt;code&gt;Welcome_admin.php&lt;/code&gt;，并对文件内容也进行相应的修改：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;defined&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;BASEPATH&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;exit&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;No direct script access allowed&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#8fbcbb&#34;&gt;Welcome_admin&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;extends&lt;/span&gt; CI_Controller &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#88c0d0&#34;&gt;index&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;Hello admin&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接着，让魔法在 &lt;code&gt;routes.php&lt;/code&gt; 文件里发生吧。打开 &lt;code&gt;/application/config&lt;/code&gt; 目录中的&lt;code&gt;routes.php&lt;/code&gt;。在已有代码的后面插入下列代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;$_SERVER&lt;span style=&#34;color:#eceff4&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;HTTP_HOST&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;user.example.com&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  $route&lt;span style=&#34;color:#eceff4&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;(:any)&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;welcome&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;elseif&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;$_SERVER&lt;span style=&#34;color:#eceff4&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;HTTP_HOST&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;admin.example.com&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  $route&lt;span style=&#34;color:#eceff4&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;(:any)&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;welcome_admin&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;现在，分别访问 &lt;code&gt;http://user.example.com&lt;/code&gt; 和 &lt;code&gt;http://admin.example.com&lt;/code&gt;，你将看到两个不同的控制器所生成的页面。即达到了多域名访问不同控制器的目的。&lt;/p&gt;
&lt;p&gt;再配合 HMVC 扩展，我们可以将控制器分成一个个独立的模块，与 CI 的基础代码解耦，让开发时条理更加清晰。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CodeIgniter 的多版本 RESTful 接口</title>
      <link>http://localhost:1313/posts/build-versioned-restful-service-with-codeigniter.html</link>
      <pubDate>Sun, 17 Jan 2016 19:55:34 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/build-versioned-restful-service-with-codeigniter.html</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.codeigniter.com/&#34;&gt;CodeIgniter&lt;/a&gt; 是基于 PHP 的框架程序，采用 MVC 式设计。配合 &lt;a href=&#34;https://github.com/chriskacerguis/codeigniter-restserver&#34;&gt;codeigniter-restserver&lt;/a&gt; 能够快速搭建 RESTful 服务。&lt;/p&gt;
&lt;p&gt;本文介绍的是在 Nginx 服务器上搭建多版本 RESTful 服务的例子。即创建 &lt;code&gt;http://api.example.com/v1/user&lt;/code&gt; 这种在 URL 中包含版本号的接口。&lt;/p&gt;
&lt;h2 id=&#34;nginx-配置&#34;&gt;
  Nginx 配置
  &lt;a class=&#34;heading-link&#34; href=&#34;#nginx-%e9%85%8d%e7%bd%ae&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;首先配置 CodeIgniter 的运行环境，在 Nginx 配置中添加如下代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;server&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;# api server definition
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;server_name&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;api.example.com&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;root&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;/your/codeigniter/folder&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;index&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;index.php&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;index.html&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;index.htm&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;location&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;try_files&lt;/span&gt; $uri $uri/ &lt;span style=&#34;color:#a3be8c&#34;&gt;/index.php?&lt;/span&gt;$query_string&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;location&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;~&lt;/span&gt; &lt;span style=&#34;color:#ebcb8b&#34;&gt;\.php($|/)&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;fastcgi_pass&lt;/span&gt; 127.0.0.1&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#b48ead&#34;&gt;9000&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;fastcgi_index&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;index.php&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;fastcgi_split_path_info&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;^(.+\.php)(.*)&lt;/span&gt;$&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;fastcgi_param&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;PATH_INFO&lt;/span&gt; $fastcgi_path_info&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;fastcgi_param&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;SCRIPT_FILENAME&lt;/span&gt; $document_root$fastcgi_script_name&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;include&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;fastcgi_params&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;location&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;~&lt;/span&gt; &lt;span style=&#34;color:#ebcb8b&#34;&gt;/\.ht&lt;/span&gt; &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;deny&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;all&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其中使用 &lt;code&gt;try_files&lt;/code&gt; 指令来重写 URL，去掉 CI 默认 URL 中的 &lt;code&gt;/index.php&lt;/code&gt; 部分。&lt;/p&gt;
&lt;p&gt;部署好 CI 的代码之后，访问域名，就能看到 Welcome 画面了。&lt;/p&gt;
&lt;h2 id=&#34;配置-codeigniter&#34;&gt;
  配置 CodeIgniter
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e9%85%8d%e7%bd%ae-codeigniter&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;下面对 CI 进行以下简单的设置，配合去除 &lt;code&gt;/index.php&lt;/code&gt; 美化 URL 的工作。&lt;/p&gt;
&lt;p&gt;找到 &lt;code&gt;/application/config/config.php&lt;/code&gt; 文件，将 38 行改成如下内容（行号可能因为具体的 CI 版本而不同，我的版本是 3.0.4）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$config&lt;span style=&#34;color:#eceff4&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;index_page&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后找到同文件中的 55 行，确保内容与下面的相同：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$config&lt;span style=&#34;color:#eceff4&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;uri_protocol&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;]&lt;/span&gt;	&lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;REQUEST_URI&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;引入-codeigniter-rest-server&#34;&gt;
  引入 CodeIgniter Rest Server
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%bc%95%e5%85%a5-codeigniter-rest-server&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;下载 &lt;a href=&#34;https://github.com/chriskacerguis/codeigniter-restserver&#34;&gt;codeigniter-restserver&lt;/a&gt; 后，将压缩包里的&lt;code&gt;application/libraries/Format.php&lt;/code&gt;、&lt;code&gt;application/libraries/REST_Controller.php&lt;/code&gt;和 &lt;code&gt;application/config/rest.php&lt;/code&gt; 三个文件分别放进你自己的 CI 部署中的对应文件夹。&lt;/p&gt;
&lt;p&gt;更多 CodeIgniter Rest Server 的使用说明请参考其 readme.md 文件。&lt;/p&gt;
&lt;h2 id=&#34;创建-api-方法和转发规则&#34;&gt;
  创建 API 方法和转发规则
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%88%9b%e5%bb%ba-api-%e6%96%b9%e6%b3%95%e5%92%8c%e8%bd%ac%e5%8f%91%e8%a7%84%e5%88%99&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;我们将通过在 &lt;code&gt;controllers&lt;/code&gt; 目录下创建子目录的方式来实现多版本 API。在本文撰写之前，曾有 &lt;a href=&#34;https://github.com/chriskacerguis/codeigniter-restserver/issues/272#issuecomment-33138531&#34;&gt;issue&lt;/a&gt; 表示 CI 只支持在 &lt;code&gt;controllers&lt;/code&gt; 中创建一层子目录，无法使用多层。而本人实测后，目前版本的 CI 已经支持多层子目录了。下面是创建方法。&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;controllers&lt;/code&gt; 目录下创建文件夹，命名为 &lt;code&gt;api&lt;/code&gt;。然后在 &lt;code&gt;/controllers/api&lt;/code&gt; 下再创建一个文件夹 &lt;code&gt;v1&lt;/code&gt;。在里面创建一个 &lt;code&gt;Example.php&lt;/code&gt; 文件，输入如下代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;defined&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;BASEPATH&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;exit&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;No direct script access allowed&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;require_once&lt;/span&gt; APPPATH &lt;span style=&#34;color:#81a1c1&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;/libraries/REST_Controller.php&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#8fbcbb&#34;&gt;Example&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;extends&lt;/span&gt; REST_Controller
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#88c0d0&#34;&gt;new_get&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $this&lt;span style=&#34;color:#81a1c1&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#8fbcbb&#34;&gt;response&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;([&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;error&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#b48ead&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;data&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;user data from v1&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;],&lt;/span&gt; REST_Controller&lt;span style=&#34;color:#81a1c1&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#8fbcbb&#34;&gt;HTTP_OK&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后，再回到 &lt;code&gt;/controllers/api&lt;/code&gt; 目录，创建文件夹 &lt;code&gt;v2&lt;/code&gt;，在其中创建 &lt;code&gt;Example.php&lt;/code&gt;文件，输入如下代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;defined&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;BASEPATH&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;OR&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;exit&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;No direct script access allowed&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;require_once&lt;/span&gt; APPPATH &lt;span style=&#34;color:#81a1c1&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;/libraries/REST_Controller.php&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#8fbcbb&#34;&gt;Example&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;extends&lt;/span&gt; REST_Controller
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#88c0d0&#34;&gt;new_get&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#eceff4&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $this&lt;span style=&#34;color:#81a1c1&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#8fbcbb&#34;&gt;response&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;([&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;error&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#b48ead&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;data&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;user data from v2&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#eceff4&#34;&gt;],&lt;/span&gt; REST_Controller&lt;span style=&#34;color:#81a1c1&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#8fbcbb&#34;&gt;HTTP_OK&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其实两个 &lt;code&gt;Example.php&lt;/code&gt; 文件的内容大部分相同，唯一的区别是返回的字符串标识出它们来自哪个版本的 API，方便我们测试。&lt;/p&gt;
&lt;p&gt;接下来，就是定义 &lt;code&gt;routes.php&lt;/code&gt; 中的规则了。打开 &lt;code&gt;/config/routes.php&lt;/code&gt; 文件，在最下边添加如下代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$route&lt;span style=&#34;color:#eceff4&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;v(:num)/(:any)/(:any)&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;api/v$1/$2/$3&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这就是版本切换魔法的所在，这一行代码表示把任何形如 &lt;code&gt;http://api.example.com/v1/any_request&lt;/code&gt; 的请求重定向到&lt;code&gt;/controllers/api/v1/any_request&lt;/code&gt; 这个类中。其中，&lt;code&gt;v1&lt;/code&gt; 的数字部分可以替换成任何数字，只要存在该数字对应的 API 版本即可访问。详细点说，等号左边的 &lt;code&gt;(:num)&lt;/code&gt; 和两个 &lt;code&gt;(:any)&lt;/code&gt; 分别对应右边的 $1、$2 和 $3，代表 URL 中的可变部分：$1 为 API 版本号，$2 为类名，$3 为方法名。也就是说，右边的层级实际上反映出文件系统中的目录和类下方法的层级。&lt;/p&gt;
&lt;p&gt;现在，可以直接在浏览器中访问 &lt;code&gt;http://api.example.com/v1/example/new&lt;/code&gt;，你会看到一串 json 内容，&lt;code&gt;data&lt;/code&gt; 部分为「user data from v1」。接着，将 URL 中的 v1 换成 v2，&lt;code&gt;data&lt;/code&gt; 部分就会显示出「user data from v2」。&lt;/p&gt;
&lt;p&gt;这样，对 API 用户而言，切换版本号不会影响到已有的大部分代码。当然，前提是他们没有把版本号写死在自己的代码里。&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;
  总结
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e6%80%bb%e7%bb%93&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;用 CodeIgniter 作为 API 后端的框架是个非常好的选择，官方文档和社区贡献内容都较丰富。除此之外，你也可以考虑使用 Slim 或者 Phalcon 等更加轻便的框架。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Laravel 5 Homestead 日常工作流程</title>
      <link>http://localhost:1313/posts/laravel-homestead-daily-workflow.html</link>
      <pubDate>Mon, 23 Nov 2015 10:51:15 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/laravel-homestead-daily-workflow.html</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;本文是教程的第三步，并假设你已安装好全部所需软件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本章将探索两种 composer 工具：homestead 和 laravel。接下来讲解一种典型的日常工作流程，通过 6 个步骤，来建立一个新的 Laravel 5.1 工程。&lt;/p&gt;
&lt;h2 id=&#34;目录&#34;&gt;
  目录
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e7%9b%ae%e5%bd%95&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#56-homestead-tools&#34;&gt;Homestead 工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#56-homestead-overview&#34;&gt;常用 Homestead 命令概览&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#56-homestead-yaml&#34;&gt;了解 Homestead.yaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#56-homestead-software&#34;&gt;向 Homestead 虚拟机添加软件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#56-daily-workflow&#34;&gt;日常工作流程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#56-6-steps&#34;&gt;六个步骤开启一个全新 Laravel 5.1 工程&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#56-step-1&#34;&gt;第一步 – 创建应用骨架&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;56-step-2&#34;&gt;第二步 – 配置 Web 服务器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;56-step-3&#34;&gt;第三步 – 添加主机记录到 Hosts 文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#56-step-4&#34;&gt;第四步 – NPM 本地安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#56-step-5&#34;&gt;第五步 – 创建应用的数据库&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#56-step-6&#34;&gt;第六步 – 在浏览器中测试&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#56-homestead-tips&#34;&gt;其他 Homestead 小贴士&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#56-recap&#34;&gt;本文回顾&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;homestead-工具&#34;&gt;
  Homestead 工具
  &lt;a class=&#34;heading-link&#34; href=&#34;#homestead-%e5%b7%a5%e5%85%b7&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;什么是控制台&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;每当你需要在控制台里进行一些操作时，你需要搞清楚是哪种控制台。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Homestead 控制台&lt;/strong&gt;是指通过 SSH 连接到 Homestead 虚拟机。在 Windows 系统中，可以是通过 PuTTY 建立的连接（详情请阅读在 Windows 系统建立虚拟机的章节）。在其他操作系统中，在终端执行&lt;code&gt;homestead ssh&lt;/code&gt; 命令就可以进行连接了。在本文中，凡是跟在 &lt;code&gt;$&lt;/code&gt; 后边的命令，都是在 Homestead 终端执行的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;OS 控制台&lt;/strong&gt;是指 Windows 的命令行提示符或者其他你正在使用的终端软件。（本文中 &lt;code&gt;%&lt;/code&gt; 符号后边的命令都是在 OS 控制台中执行的）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在宿主机的控制台中，我们输入 homestead 命令（不带任何参数），就可以轻松查看所有可用的 homestead 参数和命令。&lt;/p&gt;
&lt;h2 id=&#34;homestead-命令&#34;&gt;
  Homestead 命令
  &lt;a class=&#34;heading-link&#34; href=&#34;#homestead-%e5%91%bd%e4%bb%a4&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% homestead
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Laravel Homestead version 2.0.9
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Usage:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[options] command [arguments]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Options:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--help           -h Display this help message.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--quiet          -q Do not output any message.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--verbose        -v|vv|vvv Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--version        -V Display this application version.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--ansi           Force ANSI output.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--no-ansi        Disable ANSI output.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--no-interaction -n Do not ask any interactive question.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Available commands:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;destroy   Destroy the Homestead machine
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;edit      Edit the Homestead.yaml file
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;halt      Halt the Homestead machine
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;help      Displays help for a command
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;init      Create a stub Homestead.yaml file
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;list      Lists commands
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;provision Re-provisions the Homestead machine
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;resume    Resume the suspended Homestead machine
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;run       Run commands through the Homestead machine via SSH
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ssh       Login to the Homestead machine via SSH
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;status    Get the status of the Homestead machine
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;suspend   Suspend the Homestead machine
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;up        Start the Homestead machine
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;update    Update the Homestead machine image
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们每天接触最多的一个命令是 &lt;code&gt;homestead up&lt;/code&gt;，用来启动 Homestead 虚拟机。&lt;/p&gt;
&lt;h2 id=&#34;常用-homestead-命令概览&#34;&gt;
  常用 Homestead 命令概览
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%b8%b8%e7%94%a8-homestead-%e5%91%bd%e4%bb%a4%e6%a6%82%e8%a7%88&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;这里是一系列常用的 Homestead 命令。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;homestead up&lt;/code&gt; 启动 Homestead 虚拟机，或者说「点亮」虚拟机的电源。如果你使用了 provision 选项（&lt;code&gt;homestead up --provision&lt;/code&gt;），则 provision 配置将对所有新增加的站点都生效。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;homestead halt&lt;/code&gt; 停止 Homestead 虚拟机，或者说「关闭」虚拟机的电源。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;homestead suspend&lt;/code&gt; 暂停 Homestead 虚拟机，可以理解为休眠。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;homestead resume&lt;/code&gt; 将暂停的 Homestead 虚拟机恢复运行。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;homestead edit&lt;/code&gt; 编辑 Homestead.yaml 文件。这个命令将使用当前与 YAML 文件格式关联的编辑器软件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;homestead status&lt;/code&gt; 查看 Homestead 虚拟机的当前状态&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;了解-homesteadyaml&#34;&gt;
  了解 Homestead.yaml
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e4%ba%86%e8%a7%a3-homesteadyaml&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Laravel Homestead 的配置都在 Homestead.yaml 文件中。该文件位于你的宿主系统 home 目录中的 &lt;code&gt;.homestead&lt;/code&gt; 目录下。&lt;/p&gt;
&lt;p&gt;查看该文件的内容，大致如下。&lt;/p&gt;
&lt;h4 id=&#34;homesteadyaml-的内容&#34;&gt;
  Homestead.yaml 的内容
  &lt;a class=&#34;heading-link&#34; href=&#34;#homesteadyaml-%e7%9a%84%e5%86%85%e5%ae%b9&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8fbcbb&#34;&gt;---&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;ip&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#34;192.168.10.10&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;memory&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#b48ead&#34;&gt;2048&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;cpus&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#b48ead&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;authorize&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt; ~/.ssh/id_rsa.pub
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;keys&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- ~/.ssh/id_rsa
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;folders&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#81a1c1&#34;&gt;map&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt; ~/Code
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;to&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt; /home/vagrant/Code
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;sites&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#81a1c1&#34;&gt;map&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt; homestead.app
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;to&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt; /home/vagrant/Code/Laravel/public
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;databases&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- homestead
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;variables&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#81a1c1&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt; APP_ENV
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;:&lt;/span&gt; local
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;下面逐一解释各个配置部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ip&lt;/code&gt; 访问虚拟机所用的内网 IP。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;memory&lt;/code&gt; 虚拟机的可用内存。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cpus&lt;/code&gt; 虚拟机的可用 CPU 数目。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;authorize&lt;/code&gt; 此项应该指向你的 SSH 公钥。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;keys&lt;/code&gt; 你的 SSH 私钥。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;folders&lt;/code&gt; 共享文件夹，即宿主机中的文件夹和对应在虚拟机中的文件夹。在 Windows 系统中，&lt;code&gt;~/Code&lt;/code&gt; 目录大致上等同于 &lt;code&gt;C:\Users\YOU\Code&lt;/code&gt; 文件夹。在 OS X 中为&lt;code&gt;/Users/YOU/Code&lt;/code&gt;。在 Linux 中通常是 &lt;code&gt;/home/YOU/Code&lt;/code&gt;。当你在宿主机的这个文件夹里进行文件操作时，虚拟机中的对应目录中也会立即发生改变。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sites&lt;/code&gt; 站点列表（各个域名指向的路径），每当 Homestead 虚拟机启动时将生效。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;databases&lt;/code&gt; Homestead 应该能自动创建的数据库列表。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;variables&lt;/code&gt; 将在 Homestead 环境中生效的变量。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;配置小技巧&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我一般只对一处进行修改，将数据库下边的 homestead 改名为 xhomestead。这样做的目的在于，如果我忘记为新应用创建数据库，就会报错。否则，会使用默认的 homestead 数据库，我却无法察觉。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;那么现在，除了 &lt;strong&gt;database&lt;/strong&gt; 之外，我们不修改任何配置。&lt;/p&gt;
&lt;h4 id=&#34;homestead-虚拟机详细配置&#34;&gt;
  Homestead 虚拟机详细配置
  &lt;a class=&#34;heading-link&#34; href=&#34;#homestead-%e8%99%9a%e6%8b%9f%e6%9c%ba%e8%af%a6%e7%bb%86%e9%85%8d%e7%bd%ae&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;字段&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;值&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Hostname&lt;/td&gt;
&lt;td&gt;homestead&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IP Address&lt;/td&gt;
&lt;td&gt;192.168.10.10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Username&lt;/td&gt;
&lt;td&gt;vagrant&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SU Password&lt;/td&gt;
&lt;td&gt;vagrant&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Database Host&lt;/td&gt;
&lt;td&gt;127.0.0.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Database Port&lt;/td&gt;
&lt;td&gt;33060&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Database Username&lt;/td&gt;
&lt;td&gt;homestead&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Database Password&lt;/td&gt;
&lt;td&gt;secret&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;向-homestead-虚拟机添加软件&#34;&gt;
  向 Homestead 虚拟机添加软件
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%90%91-homestead-%e8%99%9a%e6%8b%9f%e6%9c%ba%e6%b7%bb%e5%8a%a0%e8%bd%af%e4%bb%b6&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;若你需要在 Homestead 虚拟机中安装新的软件，可以使用 Ubuntu 的 &lt;code&gt;apt-get&lt;/code&gt; 命令。&lt;/p&gt;
&lt;p&gt;这是非常简便的两个步骤：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;升级 Ubuntu&lt;/li&gt;
&lt;li&gt;用 apt-get 安装&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下边举例说明，当我们需要 unzip 这个软件时，应该怎样进行安装。&lt;/p&gt;
&lt;h4 id=&#34;升级-ubuntu&#34;&gt;
  升级 Ubuntu
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%8d%87%e7%ba%a7-ubuntu&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;# 将 Ubuntu 软件升级到最新&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vagrant@homestead:~$ sudo apt-get update
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vagrant@homestead:~$ sudo apt-get upgrade
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;选择「Y」来继续安装。如果安装过程中出现什么提示，尽量选择已有的或默认配置。&lt;/p&gt;
&lt;p&gt;升级完 Homestead 虚拟机里的 Ubuntu 系统之后，就可以安装 unzip 了。&lt;/p&gt;
&lt;h4 id=&#34;通过-apt-get-安装-unzip&#34;&gt;
  通过 apt-get 安装 unzip
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e9%80%9a%e8%bf%87-apt-get-%e5%ae%89%e8%a3%85-unzip&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;# 在 Homestead 虚拟机中安装 unzip&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vagrant@homestead:~$ sudo apt-get install unzip
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;日常工作流程&#34;&gt;
  日常工作流程
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e6%97%a5%e5%b8%b8%e5%b7%a5%e4%bd%9c%e6%b5%81%e7%a8%8b&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;通常，使用 homestead 处理日常工作的流程主要分成三个步骤：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第一步：&lt;/strong&gt;&lt;code&gt;homestead up&lt;/code&gt; 启动 Homestead 虚拟机开始一天的工作。
&lt;strong&gt;第二步：&lt;/strong&gt;&lt;code&gt;homestead ssh&lt;/code&gt;、&lt;code&gt;PuTTY&lt;/code&gt; 通过 SSH 连接到 Homestead 虚拟机，直接访问文件，并执行 artisan 命令。
**第三步：**编写优美的代码。在宿主系统中，打开你最爱的编辑器，开始写代码。
&lt;strong&gt;可选的第四步：&lt;/strong&gt;&lt;code&gt;homestead halt&lt;/code&gt; 一天的工作结束后，你可以选择关闭 Homestead 虚拟机的电源。&lt;/p&gt;
&lt;h2 id=&#34;六个步骤开启一个全新-laravel-51-工程&#34;&gt;
  六个步骤开启一个全新 Laravel 5.1 工程
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%85%ad%e4%b8%aa%e6%ad%a5%e9%aa%a4%e5%bc%80%e5%90%af%e4%b8%80%e4%b8%aa%e5%85%a8%e6%96%b0-laravel-51-%e5%b7%a5%e7%a8%8b&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;每次建立新的 Laravel 5.1 应用时，你都可以跟随下边的六大步骤来进行。&lt;/p&gt;
&lt;p&gt;比方说，我们要创建一个名叫 &lt;code&gt;test.app&lt;/code&gt; 的工程，项目文件夹的名字就叫 &lt;code&gt;test&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&#34;第一步-创建应用骨架&#34;&gt;
  第一步 创建应用骨架
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e7%ac%ac%e4%b8%80%e6%ad%a5-%e5%88%9b%e5%bb%ba%e5%ba%94%e7%94%a8%e9%aa%a8%e6%9e%b6&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;通过 Laravel Installer（前置章节中安装好的 &lt;code&gt;laravel&lt;/code&gt; 命令），可以迅速创建一个工程骨架。&lt;/p&gt;
&lt;p&gt;创建一个新的应用骨架&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ laravel new &lt;span style=&#34;color:#81a1c1&#34;&gt;test&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Crafting application...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Generating optimized class loader
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Compiling common classes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Application key &lt;span style=&#34;color:#81a1c1&#34;&gt;[&lt;/span&gt;rzUhyDksVxzTXFjzFYiOWToqpunI2m6X&lt;span style=&#34;color:#81a1c1&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;set&lt;/span&gt; successfully.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Application ready! Build something amazing.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;第二步-配置-web-服务器&#34;&gt;
  第二步 配置 Web 服务器
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e7%ac%ac%e4%ba%8c%e6%ad%a5-%e9%85%8d%e7%bd%ae-web-%e6%9c%8d%e5%8a%a1%e5%99%a8&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;安装好应用骨架后，就可以在 homestead 环境中启动 Nginx 服务器，来为应用的&lt;code&gt;public&lt;/code&gt; 目录建立网页服务了。&lt;/p&gt;
&lt;p&gt;Homestead 环境中的 &lt;code&gt;serve&lt;/code&gt; 命令可以轻松完成这一任务。&lt;/p&gt;
&lt;p&gt;在 Homestead 中启动一个新的虚拟主机&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ serve test.app ~/Code/test/public
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dos2unix: converting file /vagrant/scripts/serve.sh to Unix format ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;* Restarting nginx nginx                                    &lt;span style=&#34;color:#81a1c1&#34;&gt;[&lt;/span&gt; OK &lt;span style=&#34;color:#81a1c1&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;php5-fpm stop/waiting
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;php5-fpm start/running, process &lt;span style=&#34;color:#b48ead&#34;&gt;2169&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这条命令会在 &lt;code&gt;/etc/nginx/sites-available&lt;/code&gt; 目录下，为 &lt;strong&gt;test.app&lt;/strong&gt; 生成一个新的配置文件，并在 &lt;code&gt;/etc/nginx/sites-enabled&lt;/code&gt; 目录下生成一个指向该配置文件的软连接。&lt;/p&gt;
&lt;p&gt;即使虚拟机重启，该配置也会依然存在。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;为什么不直接编辑 Homestead.yaml&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;你问得对。另外一种建立 test.app 服务器的方式是 &lt;code&gt;homestead edit&lt;/code&gt; 命令，并在 &lt;em&gt;sites:&lt;/em&gt; 下边输入新的站点信息。但 serve 命令更简单，并且无需重新配置并启动 Homestead 虚拟机。&lt;/p&gt;
&lt;p&gt;然而，有时你可能需要经常对某个应用进行配置，你完全可以去编辑 Homestead.yaml 文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;第三步添加主机记录到-hosts-文件&#34;&gt;
  第三步 添加主机记录到 Hosts 文件
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e7%ac%ac%e4%b8%89%e6%ad%a5%e6%b7%bb%e5%8a%a0%e4%b8%bb%e6%9c%ba%e8%ae%b0%e5%bd%95%e5%88%b0-hosts-%e6%96%87%e4%bb%b6&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;截至目前，test.app 的域名还无法解析（没有任何 DNS 记录），必须向宿主系统的 hosts 文件添加一条记录。编辑 Linux 或 OS X 中的 &lt;code&gt;/etc/hosts&lt;/code&gt; 文件。Windows 系统中，该文件位于 &lt;code&gt;C:\Windows\System32\drivers\etc\hosts&lt;/code&gt;。将 &lt;code&gt;test.app&lt;/code&gt; 这个域名指向 &lt;code&gt;Homestead.yaml&lt;/code&gt; 文件中指定的 IP 地址即可。&lt;/p&gt;
&lt;p&gt;例如将下一行加入文件中。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Test.app 的 Host 记录&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;192.168.10.10  test.app
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Windows 系统需要管理员权限来编辑 hosts 文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在 Windows 中，你必须以管理员身份运行编辑器软件（例如写字板或 Sublime Text 等）。在 Linux 或 OS X 中则可以使用 &lt;code&gt;sudo&lt;/code&gt; 命令。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在 Linux 或 OS X 中编辑 hosts 文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo nano /etc/hosts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// or
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo vi /etc/hosts
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;第四步npm-本地安装&#34;&gt;
  第四步 NPM 本地安装
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e7%ac%ac%e5%9b%9b%e6%ad%a5npm-%e6%9c%ac%e5%9c%b0%e5%ae%89%e8%a3%85&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;为了稍后可以使用 &lt;code&gt;gulp&lt;/code&gt;，我们需要将所需的 npm 模块都在本地安装好。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果你用不到 gulp，那么就跳过这一步吧。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在宿主系统的控制台中进入工程所在的目录，并执行以下命令。&lt;/p&gt;
&lt;p&gt;NPM 本地安装&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cd Code/test
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;~/Code/test% npm install
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm WARN package.json @ No repository field.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;v8flags@1.0.5 install /Users/chuck/Code/test/node_modules/gulp/\
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;node_modules/v8flags
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; node fetch.js
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;flags for v8 3.14.5.9 cached.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[snip]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样，gulp 所需的所有依赖都会安装到工程目录中的 &lt;code&gt;node_modules&lt;/code&gt; 文件夹了。&lt;/p&gt;
&lt;h4 id=&#34;第五步创建应用的数据库&#34;&gt;
  第五步 创建应用的数据库
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e7%ac%ac%e4%ba%94%e6%ad%a5%e5%88%9b%e5%bb%ba%e5%ba%94%e7%94%a8%e7%9a%84%e6%95%b0%e6%8d%ae%e5%ba%93&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;如果应用需要数据库，进入 Homestead 虚拟机的 &lt;strong&gt;mysql&lt;/strong&gt; 控制台就能轻松创建数据库了。&lt;/p&gt;
&lt;p&gt;在 Homestead 虚拟机中创建数据库&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mysql --user&lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt;homestead --password&lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt;secret
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mysql&amp;gt; create database test&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mysql&amp;gt; exit&lt;span style=&#34;color:#eceff4&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;数据库创建好之后，你需要在工程的根目录中找到 &lt;code&gt;.env&lt;/code&gt; 文件，编辑其中的 &lt;code&gt;DB_NAME&lt;/code&gt; 字段为适合的值。&lt;/p&gt;
&lt;p&gt;修改 &lt;code&gt;.env&lt;/code&gt; 中的 &lt;code&gt;DB_NAME&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// Change the following line
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;DB_DATABASE&lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt;homestead
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;// To the correct value
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;&lt;/span&gt;DB_DATABASE&lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt;test
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;就是这样简单。现在，你可以对数据表进行迁移和创建等操作了。之后的章节将进一步介绍这些操作。&lt;/p&gt;
&lt;h4 id=&#34;第六步在浏览器中测试&#34;&gt;
  第六步 在浏览器中测试
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e7%ac%ac%e5%85%ad%e6%ad%a5%e5%9c%a8%e6%b5%8f%e8%a7%88%e5%99%a8%e4%b8%ad%e6%b5%8b%e8%af%95&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;打开浏览器，输入 &lt;code&gt;http://test.app&lt;/code&gt;，你就能看到下面的画面了。&lt;/p&gt;
&lt;p&gt;默认的 Laravel 5.1 首页&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://leanpub.com/site_images/l5-beauty/l5-welcome-page.jpg&#34; alt=&#34;l5-welcome-page&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果你看到的不是这个画面，那么之前的步骤中或许有不正确的地方。&lt;/p&gt;
&lt;h2 id=&#34;其他-homestead-小贴士&#34;&gt;
  其他 Homestead 小贴士
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%85%b6%e4%bb%96-homestead-%e5%b0%8f%e8%b4%b4%e5%a3%ab&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;h4 id=&#34;请在宿主系统中编写代码&#34;&gt;
  请在宿主系统中编写代码
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e8%af%b7%e5%9c%a8%e5%ae%bf%e4%b8%bb%e7%b3%bb%e7%bb%9f%e4%b8%ad%e7%bc%96%e5%86%99%e4%bb%a3%e7%a0%81&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;之前的章节我们提到了这一点，这里再强调一次。请把代码编辑工作都放在宿主系统中进行。共享文件夹使用起来非常便捷，你在宿主系统的工程文件夹中进行的任何更改都会立即呈现在 Homestead 虚拟机中。&lt;/p&gt;
&lt;h4 id=&#34;使用-homesteadaliases-文件&#34;&gt;
  使用 .homestead/aliases 文件
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e4%bd%bf%e7%94%a8-homesteadaliases-%e6%96%87%e4%bb%b6&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;每当你需要使用 &lt;code&gt;homestead up --provision&lt;/code&gt; 或 &lt;code&gt;homestead provision&lt;/code&gt; 命令重新配置 Homestead 时，&lt;code&gt;.homestead/aliases&lt;/code&gt; 文件都会更新 Homestead 虚拟机中的各个替身。&lt;/p&gt;
&lt;p&gt;所以通过这个文件，我们可以轻松添加新的替身、函数甚至其他环境变量。&lt;/p&gt;
&lt;h4 id=&#34;保持-homestead-虚拟机在最新状态&#34;&gt;
  保持 Homestead 虚拟机在最新状态
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e4%bf%9d%e6%8c%81-homestead-%e8%99%9a%e6%8b%9f%e6%9c%ba%e5%9c%a8%e6%9c%80%e6%96%b0%e7%8a%b6%e6%80%81&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;上文提到，只需两条命令就可以将 Homestead 虚拟机里的 Ubuntu 操作系统更新到最新状态。&lt;/p&gt;
&lt;p&gt;保持 Ubuntu 最新&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo apt-get update
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo apt-get upgrade
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;本文回顾&#34;&gt;
  本文回顾
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e6%9c%ac%e6%96%87%e5%9b%9e%e9%a1%be&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;本章详细讲解了 &lt;code&gt;homestead&lt;/code&gt; 和 &lt;code&gt;laravel&lt;/code&gt; 命令，以及创建一个 Laravel 5.1 工程的简单六步。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>解决 PDF 复制文字重复的问题</title>
      <link>http://localhost:1313/posts/unicode-normalization-issue-with-pdf.html</link>
      <pubDate>Mon, 16 Nov 2015 17:16:19 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/unicode-normalization-issue-with-pdf.html</guid>
      <description>&lt;p&gt;今天整理一些 pdf 格式的文稿时，为了统计字数而把文字全选并拷贝到一个 txt 文件中。但是发现拷贝出来的文字会偶尔产生重复文字，例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;吸⽓气时缓慢放松腹部
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;注意呼吸 ⾮非常好
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;帮助缩⼩小腰围
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;重复文字的位置非常多，会严重影响字数统计的结果，因此必须去重。根据 @&lt;strong&gt;rex.&lt;/strong&gt; 大大的&lt;a href=&#34;http://www.zhihu.com/question/20805225/answer/16273727&#34;&gt;知乎回答&lt;/a&gt;，我尝试匹配了一下要处理的文本，结果发现这些有问题的重复字都无法被匹配。你若感兴趣可以亲自试一试，将上边例子里的重复字转换成 unicode 编码，你会发现结果是不同的。你可以使用&lt;a href=&#34;https://r12a.github.io/apps/conversion/&#34;&gt;这个在线工具&lt;/a&gt;来转换。&lt;/p&gt;
&lt;p&gt;所幸得到 V2EX 的 @&lt;strong&gt;Sylv&lt;/strong&gt; 指点，原来这是一个「Unicode 规范化」问题（&lt;a href=&#34;https://www.v2ex.com/t/236498#r_2632245&#34;&gt;查看原帖&lt;/a&gt;）。用 &lt;code&gt;unicodedata.normalize()&lt;/code&gt;函数就可以将那些字形相同但实际上编码不同的文字的编码也规范化（统一化）。这样，就可以成功进行匹配并去重了。&lt;/p&gt;
&lt;p&gt;Python 代码如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#8fbcbb&#34;&gt;unicodedata&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#8fbcbb&#34;&gt;re&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#81a1c1;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#8fbcbb&#34;&gt;sys&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;# input file name as a parameter in the command line&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;filename &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; sys&lt;span style=&#34;color:#81a1c1&#34;&gt;.&lt;/span&gt;argv&lt;span style=&#34;color:#eceff4&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#b48ead&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;token &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#34;tokenthatneverduplicates&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;# open original file&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;file &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;open&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;filename&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;raw &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; file&lt;span style=&#34;color:#81a1c1&#34;&gt;.&lt;/span&gt;read&lt;span style=&#34;color:#eceff4&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;.&lt;/span&gt;decode&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;file&lt;span style=&#34;color:#81a1c1&#34;&gt;.&lt;/span&gt;close&lt;span style=&#34;color:#eceff4&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;# tag original double characters and letters&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;treated &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; re&lt;span style=&#34;color:#81a1c1&#34;&gt;.&lt;/span&gt;sub&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;(.)\1&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;\1&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt; re&lt;span style=&#34;color:#81a1c1&#34;&gt;.&lt;/span&gt;escape&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;token&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;\1&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; raw&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;# do the normalization&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;normalized &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; unicodedata&lt;span style=&#34;color:#81a1c1&#34;&gt;.&lt;/span&gt;normalize&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;NFKC&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; treated&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;.&lt;/span&gt;encode&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;utf-8&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;# remove duplicated characters&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;result &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; re&lt;span style=&#34;color:#81a1c1&#34;&gt;.&lt;/span&gt;sub&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;([\x80-\xff]&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;{3}&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;)\1&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;\1&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; normalized&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;# remove tags made earlier&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;final &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; re&lt;span style=&#34;color:#81a1c1&#34;&gt;.&lt;/span&gt;sub&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;token&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; result&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#616e87;font-style:italic&#34;&gt;# save result to new file&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;newfile &lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#81a1c1&#34;&gt;open&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;filename &lt;span style=&#34;color:#81a1c1&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;-conv.txt&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;newfile&lt;span style=&#34;color:#81a1c1&#34;&gt;.&lt;/span&gt;write&lt;span style=&#34;color:#eceff4&#34;&gt;(&lt;/span&gt;final&lt;span style=&#34;color:#eceff4&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;newfile&lt;span style=&#34;color:#81a1c1&#34;&gt;.&lt;/span&gt;close&lt;span style=&#34;color:#eceff4&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;代码中每一步均有注释，步骤非常简单。其中有个需要稍加解释的地方，由于去重的正则匹配会将所有重叠词变成单字，会导致原本正确的部分也被改掉了（如「慢慢地 -&amp;gt; 慢地」），于是用了一个小伎俩保留住它们：&lt;/p&gt;
&lt;p&gt;执行规范化之前，在重叠词之间添加一个独特的文本标记，然后在规范化之后将标记去掉。标记即代码开头的 token 变量。如果非常巧合，原文中有和我预设的标记相同的文字，那么修改 token 的值即可。&lt;/p&gt;
&lt;p&gt;代码已在 OS X 10.11 上成功执行。&lt;/p&gt;
&lt;p&gt;附：代码不是最优，但 python 水平实在有限，目前就确保可用吧。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>David Bailey 的 17 天法语速成心得</title>
      <link>http://localhost:1313/posts/david-bailey-learns-french-in-17-days.html</link>
      <pubDate>Sun, 28 Dec 2014 20:45:40 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/david-bailey-learns-french-in-17-days.html</guid>
      <description>&lt;p&gt;读 Quora 发现一则《&lt;a href=&#34;https://www.quora.com/What-are-the-best-ways-to-learn-a-language-as-an-adult/answer/David-Bailey-7&#34; target=&#34;_blank&#34;&gt;成年人的最佳外语学习方法&lt;/a&gt;》回答，已获得 2k 多赞同。撰写者是 David Bailey，CEO Spotnight。&lt;/p&gt;
&lt;p&gt;关于外语学习心得，时不时就能出现若干热门文章，然而似乎和时下消费产品的更新换代类似，人们也想要得到越来越短平快的学习经验。哪怕是一年之内就可以精通一门语言的心得，也是让不少人望而却步的万字宏篇（只是 mark 却少行动）。&lt;/p&gt;
&lt;p&gt;也许会有人说「连苹果产品说明书都简略到可以直接不去阅读了，介绍一门语言的学习方法还需要花若干小时去阅读吗？」在下当然不能赞同，却也不知该不该反驳。&lt;/p&gt;
&lt;p&gt;总之，David 从法语零基础到最后能在巴黎咖啡店把妹只花了区区 17 天，加之他在回答中分享了许多很实在的技巧，在这几个奇怪理由的作用下，我来稍稍提纯一下这则回答的内容。&lt;/p&gt;
&lt;p&gt;David 起初虽不能讲法语，但西班牙语已流利。以我自己的稀少外语经验，西语和法语对于一个已经有过外语学习经历的人来说，是可以相互作为辅助的，虽然它无法实际地降低学习难度。书归正传，从 David 的做法可以归纳出下边的信息：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;为学法语，与友人住在法国某小村庄，那里无人说英语。友人也拒绝用英语和 David 交流。&lt;/li&gt;
&lt;li&gt;David 早起必做一件事：花一个半小时到两小时手写法语规则和不规则动词表格。&lt;/li&gt;
&lt;li&gt;边写动词边听 &lt;a href=&#34;https://www.michelthomas.com/&#34; target=&#34;_blank&#34;&gt;Michel Thomas 的法语讲座&lt;/a&gt;，录音内容是老师对英语学生教授法语。两周内 David 把基础、进阶和语言构建课程听了两遍。&lt;/li&gt;
&lt;li&gt;午后跑步一个小时，同时听法语歌曲，通过跟唱来模仿和熟悉法语的发音特性。&lt;/li&gt;
&lt;li&gt;每日与友人和法国人共餐，他们不会刻意减慢语速，所以不学不说就得挨饿。&lt;/li&gt;
&lt;li&gt;下午有时会阅读法语版《查理和巧克力工厂》，从阅读儿童读物当中学会语言基础。同时阅读已知的故事也有助于猜测生词，省去翻词典的时间。&lt;/li&gt;
&lt;li&gt;用至少一小时写一篇自述文章，并让法国朋友查错。而写好的文章也能作为很多日常问答的内容，在与法国人打交道时能快速回答。这样十分有利于建立信心。&lt;/li&gt;
&lt;li&gt;留意并学用套话，虽然多数是没有实际含义的短语，但能让自己的语言「入味」，增强信心。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果再次精炼，大概就是：住在母语环境里；先学会该语言的动词；读儿童读物；从正确地写到正确、快速反应地说。看起来操作性很高，也难怪 David 的回答获得了超高的赞同。或许也跟他在结尾炫耀巴黎把妹的桥段有关吧。&lt;/p&gt;
&lt;p&gt;当然了，之所以愿意花费近千字的篇幅来介绍这篇经验之谈，是缘于对「先学会该语言的动词」的赞同。自己曾经录制过一本叫做《英语的一半是动词》的书（的中文部分），但也没有勇气把熟悉动词视为外语学习的起步重心。受 David 的启发，现在我也有信心这样做了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>脚踩流沙的野马</title>
      <link>http://localhost:1313/posts/wild-horse-in-quicksand.html</link>
      <pubDate>Fri, 26 Dec 2014 18:37:15 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/wild-horse-in-quicksand.html</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/dorm.jpg&#34; alt=&#34;Dormitory&#34;&gt;&lt;/p&gt;
&lt;p&gt;不曾想过还会回来，只想一走了之。曾经因为擅长收纳取舍而自得，却发现花了一下午做的事没有任何新意，似乎是帮别人完成了一次搬家收拣。机械地大小归拢，机械地严丝合缝，机械地横平竖直，做完倒也并非觉得全然无趣。最后疲惫地坐在一年多没人碰过的椅子上，也没有一点心情来稍稍庆贺。&lt;/p&gt;
&lt;p&gt;夜里容易脱缰，而我脚踩流沙，也仍然只被人看成野马，就好像我还能逃脱似的。「脚踩流沙的野马」是个不存在的形容。脱缰野马就是正确的。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>第一次设计排版一本手册</title>
      <link>http://localhost:1313/posts/first-time-making-a-brochure.html</link>
      <pubDate>Thu, 16 Oct 2014 20:52:28 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/first-time-making-a-brochure.html</guid>
      <description>&lt;p&gt;论文开题报告刚刚完成，为了写论文还有书目需要继续阅读。按自己设计的时间表，最迟年底就该完成初稿了。是忙碌了点，毫无规律的熬夜也多了起来。接下来尽量均分工作量吧。&lt;/p&gt;
&lt;p&gt;录音间里的甲醛十分严重，或许是因为长时间没有开门透气。和在爷因为这个起了争执。我的确应该早些天就买好吸附碳，不过今天已经下单，明天就能到了。&lt;/p&gt;
&lt;p&gt;今天我临时说太忙，不能去接，她在电话里答应着。几个小时后，小山帮我带来了她做好的便当，饭盒拿在手里还很热乎。也许出于习惯，她把饭装在一个小塑料袋里之后再放进饭盒。明天我会一颗不剩地吃掉它。&lt;/p&gt;
&lt;p&gt;刚刚看完了 OS X Yosemite 正式发布的直播。念叨了小一年的 Mac mini 也最终更新了，然而我已经暂时不再需要，前些时给使用中的机器升级了 SSD 和内存，看样子可以继续用几年了。&lt;/p&gt;
&lt;p&gt;终于看到了之前为柏拉图诗学研讨会制作的手册印刷品，虽然最后被强塞进了一些来不及详细排版的页面和一副设计奇怪的封皮，但好歹是看到成品了。放图杀猫。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/brochure/brochure-1.jpg&#34; alt=&#34;Brochure 1&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/brochure/brochure-2.jpg&#34; alt=&#34;Brochure 2&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/brochure/brochure-3.jpg&#34; alt=&#34;Brochure 3&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>摸着石头过河的石头有点小意见</title>
      <link>http://localhost:1313/posts/the-whole-life-is-real-time-flash-back.html</link>
      <pubDate>Fri, 05 Sep 2014 20:21:43 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/the-whole-life-is-real-time-flash-back.html</guid>
      <description>&lt;p&gt;在 reddit 上看到一条「&lt;a href=&#34;https://www.reddit.com/r/Showerthoughts/&#34; target=&#34;_blank&#34;&gt;浴室想法&lt;/a&gt;」，大意是&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://www.reddit.com/r/Showerthoughts/comments/2cz8d0/what_if_your_whole_life_flashing_before_your_eyes/&#34; target=&#34;_blank&#34;&gt;我们在死的时候头脑里会回放这一生，而回放的速度是 1 比 1 。正因为此，我们偶尔会感到这个场景似曾相识。&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;人类停止不了对死亡的浪漫诠释，正如停止不了制造机器人、制造 AI 来外化自己的灵魂以求某种不朽一样，就是不能停止。&lt;/p&gt;
&lt;p&gt;属于每个人的个体时间却时常表现得停滞，想想看，真像黏在一个车轮上的泥巴。「滚出去！」，多么美好的祝福语呀。现实只是滚着滚着，轮子就干净了，然后粘上别的泥巴。&lt;/p&gt;
&lt;p&gt;虽然粗略品读过许多对死亡坚定的立场，一直抱有世界是无目的的信心，但前些天又被「&lt;a href=&#34;https://movie.douban.com/subject/1457707/&#34; target=&#34;_blank&#34;&gt;猫汤&lt;/a&gt;」给弄迷惑了。然而有一点倒是和「猫汤」达成了共识，那就是活着或是死去，孤独是永恒、稳定的状态。&lt;/p&gt;
&lt;p&gt;那条浴室想法的跟帖似乎在集中讨论 Deja Vu 的细节，有人说「&lt;a href=&#34;https://www.reddit.com/r/Showerthoughts/comments/2cz8d0/what_if_your_whole_life_flashing_before_your_eyes/cjksyvg&#34; target=&#34;_blank&#34;&gt;所以人不会真的死，而是在死前又重活一遍。&lt;/a&gt;」也就是说，无论回放多少次，一生中的内容都是固定的。那么就算是得到了永生吧，可这永生是倒带重放的模式。也就是说，如果死的时候，世界某个角落里的 AI 已经勇敢到会在图灵测试中毫不犹豫地胜出，下一刻复活时，世界又回到了乔布斯被斯卡利驱逐的时候，然后全部重来一遍。&lt;/p&gt;
&lt;p&gt;除非在死亡与复活相接的瞬间接到别的活着的人的一条笔记，说世界仍在向未知的方向运动着，否则这个人就最终不得不坚信&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E6%B1%BA%E5%AE%9A%E8%AB%96&#34; target=&#34;_blank&#34;&gt;决定论&lt;/a&gt;了。&lt;/p&gt;
&lt;p&gt;身边有不少很在意 Deja Vu 的人，到现在为止，每次听到他们突然告诉我「这一段经历过（梦到过）」的时候，还是想告诉他们，其实难忘至此，在它确实发生之前就早已铭记在心。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>北方的雨</title>
      <link>http://localhost:1313/posts/the-northen-rain.html</link>
      <pubDate>Mon, 16 Jun 2014 02:00:26 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/the-northen-rain.html</guid>
      <description>&lt;p&gt;每年入夏时，都会盼着几场华丽的大雨。这自然是在南方长大所养成的习惯，只是记忆中家乡入夏的雨总是带来很多麻烦。比如上学路上因为多年施工而产生的泥泞道路，不小心踩到人行道上隐藏的松动砖块被溅得满腿污水，教室窗台溅起的雨水会弄脏玻璃窗给每日清洁带来额外的工作量，还有一些诸如早晨出门时的天色丝毫没有下雨的迹象，放学时却因为下雨导致自己被困在教室这样的琐事。&lt;/p&gt;
&lt;p&gt;不管怎么说，几场雨过后就会是郁郁葱葱的夏天了。关于下雨的记忆总体上也不至于有什么令人心存梗芥的东西。反倒是在北方偶尔遇上整个春天一点雨都下不来的年份，干燥的空气里总是飘着一团团橙黄色的沙土，甚至把树枝上青芽的点点嫩绿都完全掩盖了。所以并非每次打雷都会下雨的，不作这样的期待是经历了好几次不下雨的春天才学到的经验。不过今年看来，这种经验暂时不起作用了。&lt;/p&gt;
&lt;p&gt;最近两周，身心都还在刚刚进入夏季的焦躁与不安中，加上步步逼近的期末任务（考试、论文），动不动就会突然间思维失焦，处于连是否能够放空一下都意识不到了的状态。刚好，大量雨水在这节骨眼上赶来了。雷声滚滚之后就是湿润的草地散发出来的气味。因为公司就在一楼临街，这时候只需要呆在公司门口就可以，看着大片大片无所顾忌的雨帘嚣张地冲刷着狂风扑到地面上，可以呼吸到四处飘来的稀松的水雾。也根本无需担心下班后还要在公司等雨的情况，它们喧闹着，很快就会走远。&lt;/p&gt;
&lt;p&gt;但是，这可还是让那些骑车上班的人发了愁。像这样的雷阵雨，近两周出现得十分频繁。他们不得不在下午天阴时赶紧把车子全部从路边停车的位置搬到公司旁边一个可以遮雨的区域，中间需要下一段不短的台阶。自然，作为男性劳力之一，我也会被派遣去当「护车使者」。当把车子从路边端下来（正面端着，而不是腋下提着），雨点就落地，还会有那么一点点成就感。长不大的玩性，怎么都长不大。&lt;/p&gt;
&lt;p&gt;今年雷阵雨最大的一次是上个周五的傍晚。下午 5 点钟，毫无预兆般地开始刮起狂躁的大风，城际快速路上空只见滚滚沙浪涌过，夹杂着树枝树叶、塑料袋和纸张，四处追赶地面上无处躲避的行人。十分钟后，巨大的雨点开始落地，打出一个圣女果被踩碎时一般大小的水迹，并瞬间转变为那种雨帘开始冲刷目之所及的整个世界，仿佛对刚才把沙土吹得满处都是而进行的过分的道歉。因为从公司请假去上课，所以刚好这时候已经下课到家了。等了一个小时，雨势稍微减弱了一些，便带着伞出门去了。&lt;/p&gt;
&lt;p&gt;这天也许是天色较晚了，雨停之后没能看到彩虹。而在这之前的某一次雷阵雨过后，北京城上空出现了巨大的彩虹。那天晚上所有社交网络里都充满了那道彩虹的照片，可见它是如此巨大。那个时候是下午五点左右，大雨已经在早些时分停歇了。可惜的是刚好手机没电了，我没能做成一只「全民发彩虹照片」的跟风狗。于是在饭否里写道：&lt;/p&gt;
&lt;style&gt;
  .quote-fanfou {
    font-family: HelveticaNeue, Helvetica Neue, Helvetica, Arial, sans-serif;
    font-style: normal;
    display: flex;
  }
  .quote-fanfou .avatar {
    margin-right: 8px;
  }
  .quote-fanfou .avatar img {
    height: 48px;
    width: 48px;
  }
  .quote-fanfou .content {
    max-width: 360px;
    flex-grow: 1;
    font-size: 14px;
    line-height: 20px;
  }
  .quote-fanfou .message {
    word-break: break-all;
  }
  .quote-fanfou .meta {
    margin-top: 4px;
  }
  .quote-fanfou .meta, .quote-fanfou .meta a {
    color: #999999;
    font-size: 12px;
  }
  .quote-fanfou .attachment {
    margin-left: 8px;
  }
  .quote-fanfou .attachment img {
    height: 106px;
    width: 106px;
    padding: 2px;
    border: 1px solid #cccccc;
  }
&lt;/style&gt;










&lt;blockquote class=&#34;quote-fanfou&#34;&gt;
  &lt;div class=&#34;avatar&#34;&gt;&lt;img src=&#34;http://localhost:1313/img/fanfou/mogita/avatar.jpg&#34; alt=&#34;mogita&#34; /&gt;&lt;/div&gt;
  &lt;div class=&#34;content&#34;&gt;
    &lt;span class=&#34;username&#34;&gt;&lt;a href=&#34;https://fanfou.com/mogita&#34; target=&#34;_blank&#34;&gt;mogita&lt;/a&gt;&lt;/span&gt;
    &lt;span class=&#34;message&#34;&gt;有生以来第一次看到天边的彩虹，原来真正的彩虹是如此大的尺寸。在彩虹下面吃完一袋膨化食品，突然一架飞机从彩虹里飞了出来。&lt;/span&gt;
    &lt;div class=&#34;meta&#34;&gt;
      &lt;a href=&#34;https://fanfou.com/statuses/xnRf1trGspM&#34;&gt;2014-06-06 19:04&lt;/a&gt; 通过 网页
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&#34;attachment&#34;&gt;
    
  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;p&gt;今晚本来预计也有雷阵雨，不过到头来还是变成了软绵绵的一阵碎花雨点。也好，拎着雨伞，在地铁上打开刚买的漫画书，想着明天的焦躁和不安，慢慢也就又过完了一天。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>与面包君呆着</title>
      <link>http://localhost:1313/posts/with-bread.html</link>
      <pubDate>Tue, 27 May 2014 14:53:50 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/with-bread.html</guid>
      <description>&lt;p&gt;十四斤的肥躯就压在我胸口。看来得按这个姿势坐一会了。&lt;/p&gt;
&lt;p&gt;面包把脸埋到了我的胳肢窝里，还使劲往里拱。鼻子干燥得呼吸声很大，几乎像个人的动静了。做梦到高兴时还蹬蹬腿。&lt;/p&gt;
&lt;p&gt;地球多么孤独。生命多么孤独。但就像我不知道身体里是不是有一大一小两个细胞正紧紧靠在一起一样，他们互相让对方觉得很安全。&lt;/p&gt;
&lt;p&gt;语言大概是人和人之间最大的障碍了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>领养面包</title>
      <link>http://localhost:1313/posts/adopting-bread.html</link>
      <pubDate>Fri, 23 May 2014 06:25:16 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/adopting-bread.html</guid>
      <description>&lt;p&gt;领养了一只两岁的猫，面包。&lt;/p&gt;
&lt;p&gt;Search for &lt;a href=&#34;https://instagram.com/explore/tags/thebreadcat/&#34; target=&#34;_blank&#34;&gt;#TheBreadCat&lt;/a&gt; on Instagram.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/the-bread-cat.jpg&#34; alt=&#34;The Bread Cat&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>上手 Raspberry Pi</title>
      <link>http://localhost:1313/posts/hands-on-raspberry-pi.html</link>
      <pubDate>Tue, 25 Mar 2014 18:20:06 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/hands-on-raspberry-pi.html</guid>
      <description>&lt;p&gt;快递找到我时还正在忙着录音，拆开塑料包裹才想起这是朝思暮想的 Raspberry Pi 到了！加上一并购买的杂七杂八的元器件，一起拎了一纸袋的东西回家。&lt;/p&gt;
&lt;p&gt;不知不觉已经玩了一个多星期了。RPi 的设计初衷是提起学生对电脑的兴趣，而我的 linux 技术倒是真的得到了一点长进。抽象一些的讲，一种表面上的「便利程度」很容易就成为了引起兴趣的缘由。回想起来，对 BASIC 的热情是被 PC1000 点燃的。对 linux 的兴趣，很大一部分也是基于 RPi 可以直接用电源插头控制开关机的工作方式吧。总之，开关机不是一件需要斟酌的事之后，就觉得是少了一个巨大的负担。&lt;/p&gt;
&lt;p&gt;具体用 RPi 做的事情，倒也不多。熟悉了那些常用的 linux 命令，学会&lt;a href=&#34;https://elinux.org/RPi_Adding_USB_Drives&#34; target=&#34;_blank&#34;&gt;挂载移动硬盘&lt;/a&gt;，配置了 &lt;a href=&#34;https://users.skynet.be/hupla/raspBrian/RaspiBlog/Artikelen/2013/3/25_make_your_RPI_show_up_in_Macs_Finder_as_a_shared_drive_using_Netatalk.html&#34; target=&#34;_blank&#34;&gt;AFP 共享&lt;/a&gt;给 Mac 使用，架了个 web 服务器，绑定了一个&lt;a href=&#34;https://xixitalk.github.io/blog/2013/05/29/update-ddns-with-api/&#34; target=&#34;_blank&#34;&gt;动态解析的域名&lt;/a&gt;，配合之前购买的代理扩展出了一个 Wi-Fi 环境与 3G 环境都能使用的 APNP，装上了 aria2 和 yaax 实现&lt;a href=&#34;https://blog.kuroy.me/aria2-download-in-centos.html&#34; target=&#34;_blank&#34;&gt;远程迅雷离线下载&lt;/a&gt;。似乎说得上来的目前就是这些。&lt;/p&gt;
&lt;p&gt;中间还重新刷过一次操作系统。RPi 刚到手时，在官网下载了最新版本的 Raspbian，内核为 3.10.xx。使用中发现这个版本的内核在蓝牙方面有些毛病（导致那几天心情很躁），降级内核后又出现了重启时总是内核崩溃。所以还是只能重新下载一个旧版本的 Raspbian（只会用，不懂编译内核啊）。但一直没有时间测试蓝牙。（**更新：**测试后发现蓝牙问题依然存在，并且从之前的 reboot 命令后崩溃，变成了一连接任何蓝牙设备就崩溃。&lt;a href=&#34;https://elinux.org/RPi_USB_Bluetooth_adapters&#34; target=&#34;_blank&#34;&gt;elinux&lt;/a&gt; 的解释是蓝牙棒本身的问题，芯片 bug 或伪劣芯片的原因。）&lt;/p&gt;
&lt;p&gt;大概过两周就会搬家了。然后再去折腾那堆小器件吧。其实方案也挺傻瓜的，全都是兼容面包板的配件，玩起来大概和搭积木一样。总之这会是第一次感受用代码控制硬件嗷。&lt;/p&gt;
&lt;p&gt;最近一股脑来了不少事，忙得连 instaFan 都没有时间修。很对不起依然在等待、向我抱怨的用户们。。这个周末也许会好一点，希望起码能让它像样工作先。&lt;/p&gt;
&lt;p&gt;啊，说了这么多，不是应该摆上 RPi 的靓照一张嘛！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/rpi/raspberry-pi-1.jpg&#34; alt=&#34;Raspberry Pi&#34;&gt;&lt;/p&gt;
&lt;p&gt;以及初次启动时忙碌地进行着 locale 设定（好像选太多了…&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/rpi/raspberry-pi-2.jpg&#34; alt=&#34;Raspberry Pi&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>我怀念的</title>
      <link>http://localhost:1313/posts/my-treasure.html</link>
      <pubDate>Tue, 25 Feb 2014 17:40:35 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/my-treasure.html</guid>
      <description>&lt;p&gt;还是来了，妈妈收拾我的旧写字桌，说有几个纸条，还写的外语，问我还要不要。&lt;/p&gt;
&lt;p&gt;当时，把它们藏进桌子里的时候，故事才刚开始呢。想象中的情节，结局，不论有什么得到，有什么失去，都还是很美好的。&lt;/p&gt;
&lt;p&gt;现在，无论给妈妈哪种回复，都没什么事需要藏着掖着了。只用让她知道，我在努力就可以了。&lt;/p&gt;
&lt;p&gt;而在乎着的，其实谁也骗不了，会一直在乎下去的。像当时的心态一样，不期待什么成长，只是依靠它，一直活着。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>一封夏季</title>
      <link>http://localhost:1313/posts/a-summer-vacation-letter.html</link>
      <pubDate>Tue, 18 Feb 2014 05:41:26 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/a-summer-vacation-letter.html</guid>
      <description>&lt;p&gt;暑假。&lt;/p&gt;
&lt;p&gt;充满回忆和回忆感的词语，听到它被提起就会有被回忆包围的感觉。但是已经在回忆里没头地乱走乱撞了很久，其实也并没有找到自己想要的东西。一方面是很喜欢这样沉湎，一方面却想继续向前。迟迟不能决定啊。&lt;/p&gt;
&lt;p&gt;一旦看到那些字句，就失去了向前走的力量。即使明白只是薄薄一层时间的切片，也愿反复念诵那些熟悉得不能再熟悉的模糊日期、模糊地点、模糊言语。&lt;/p&gt;
&lt;p&gt;因为自己是过于「理想化」的吗···&lt;/p&gt;
&lt;p&gt;不过不管自己的状态怎样糟糕，树叶、阳光、暴雨、宁静、纸张、不相见，都在那里，总也不会惊醒似的，迎接着一个又一个四季，然后，在谁也不知道的某个秒钟突然开花。&lt;/p&gt;
&lt;p&gt;我也会收到一封装着种子的来信，并试着认真地回信。&lt;/p&gt;
&lt;p&gt;今年暑假的计划越来越不像是随口说说而已了，我要去那里，然后带回许多我一直期待着的回忆。毕竟，今年的暑假是正式的、人生中的最后一个暑假了！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>暂不受理吐槽，请等待通知</title>
      <link>http://localhost:1313/posts/keep-talking-im-still-here.html</link>
      <pubDate>Sun, 16 Feb 2014 15:12:42 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/keep-talking-im-still-here.html</guid>
      <description>&lt;p&gt;去年，我被说很「二次元」。&lt;/p&gt;
&lt;p&gt;今年，我被说很「理想化」。&lt;/p&gt;
&lt;p&gt;那都比不上&lt;/p&gt;
&lt;p&gt;昨天，在爷被说「像新疆人」。&lt;/p&gt;
&lt;p&gt;今天，在爷被说「像新疆人」。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>东京热之周末</title>
      <link>http://localhost:1313/posts/tokyo-hot-weekend.html</link>
      <pubDate>Tue, 14 Jan 2014 04:38:35 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/tokyo-hot-weekend.html</guid>
      <description>&lt;p&gt;对人们，我自称仍在上学。对自己，则是一贯的做事心态。尽管一再不喜欢学生的身份，但仍然越是廉价越是离不开它。不管怎样，除了在争取一些额外的假期时会利用下自己是学生（出勤率去屎吧啊），其他时候根本难以找到替它辩护的欲望。我也是凶手之一。&lt;/p&gt;
&lt;p&gt;要丢掉恶习谈何容易。&lt;/p&gt;
&lt;p&gt;其实也很容易，把自己驱逐出这惯常的氛围就好了。总之就是想逃，总把美好寄托在未知吧。&lt;/p&gt;
&lt;p&gt;有时，看到什么都觉得廉价，使自己懒得动弹，太多东西使自己不屑了，因为仿佛在某个角度上看，自己掌握着一切手段。另一方面，情绪又太难照顾，合拍也只就是合拍，不是为了合拍才导致的合拍。平淡了，嫌它琐碎；起伏了，嫌它不够起伏。所以，现实里没有英雄，人人都值得尊敬，作为细沙和粉末才能够得到的尊敬。&lt;/p&gt;
&lt;p&gt;已经走上了这条路，总作出像个外行似的发言可不行啊。踏实，难道只有真的踏实之后才体会得到？我已经记不清了。&lt;/p&gt;
&lt;p&gt;一时兴起，绝对是一时兴起，花了一个通宵编混了一段东京热的主题曲。但是连东京热都没看过又算什么水平？过着难以令人置信的生活，也就等于说自己和人们没有共鸣吧。哈哈。&lt;/p&gt;
&lt;p&gt;Listen:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://soundcloud.com/mogita/tokyo-hot-theme-cover&#34;&gt;SoundCloud&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>电子积木</title>
      <link>http://localhost:1313/posts/electrical-bricks.html</link>
      <pubDate>Mon, 23 Dec 2013 18:14:06 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/electrical-bricks.html</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/electrical-bricks.jpg&#34; alt=&#34;Electrical Bricks&#34;&gt;&lt;/p&gt;
&lt;p&gt;一打开人人，便看到了这张图（&lt;a href=&#34;https://photo.renren.com/photo/337955546/photo-5035586158&#34; target=&#34;_blank&#34;&gt;via&lt;/a&gt;）。想念它至深，然从未拥有过它。&lt;/p&gt;
&lt;p&gt;在图册的最后一页中，几乎要用掉全部的拼块，做出的是一个能工作的收音机。商家的宣传是，哪位小朋友能在三分钟内，不看图册，拼出那台收音机，就能获赠一套电子积木。于是我开始嘲笑他们：「要能做到这些，岂不是先要买一套在家里玩得滚瓜烂熟了才可以」。而有阵子，自己会在梦里拼完图册里的每一种电路，包括最后一页。&lt;/p&gt;
&lt;p&gt;十多年时间就像翻页般。初心。&lt;/p&gt;
&lt;p&gt;它是成人感受不到的原动力。没有人会在任何时候丢失它，只是开始以需求来考量生活的轻重，不再在意它了。&lt;/p&gt;
&lt;p&gt;– 纯牛奶 –&lt;/p&gt;
&lt;p&gt;价值观输出好可怕，好比想逃到一个干净的地方去，结果，发现那里人们的面孔竟然如此熟悉···&lt;/p&gt;
&lt;p&gt;在 MUJI 转悠了一圈，买了一叠折扣价的千代紙。晚安，我的电子积木。我想像你点亮，你旋转，和发出声响。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Yichang PM 2.5</title>
      <link>http://localhost:1313/posts/yichang-pm25.html</link>
      <pubDate>Sat, 07 Dec 2013 06:36:16 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/yichang-pm25.html</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/pm25/yichang-pm25-20131207.png&#34; alt=&#34;Yichang PM 2.5&#34;&gt;&lt;/p&gt;
&lt;p&gt;via &lt;a href=&#34;https://www.cnpm25.cn/city/yichang.html&#34; target=&#34;_blank&#34;&gt;cnPM25&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/pm25/beijing-pm25-20131207.png&#34; alt=&#34;Beijing PM 2.5&#34;&gt;&lt;/p&gt;
&lt;p&gt;via &lt;a href=&#34;https://www.cnpm25.cn/city/beijing.html&#34; target=&#34;_blank&#34;&gt;cnPM25&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/pm25/pm25-dist-environmental-health-perspectives.jpg&#34; alt=&#34;PM 2.5 Satellite&#34;&gt;&lt;/p&gt;
&lt;p&gt;Satellite-Derived PM2.5 figure(2001-2006) via &lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2898863/#!po=44.7368&#34; target=&#34;_blank&#34;&gt;Environmental Health Perspectives 118(6), 847-855&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>从旷野到雾都</title>
      <link>http://localhost:1313/posts/from-paris-to-london.html</link>
      <pubDate>Thu, 05 Dec 2013 19:09:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/from-paris-to-london.html</guid>
      <description>&lt;p&gt;幻想就是荒漠，星斗的美幻并不与他相干。&lt;/p&gt;
&lt;p&gt;所以，在这荒漠里，对着天空喊「我们走吧」，奇迹就真的会按照「反期待定律」那样不发生。就这样，欣喜着，愁苦着。好像再走出一步，自己就下落不明了。&lt;/p&gt;
&lt;p&gt;像现在这样，每天沉溺在分秒连续的思念里，又往往以「太羞耻了」作为一个段落的休止，而短时间地返回到现实的时空里。天体苍穹从不对我作出任何回应，只最大限度地容许我的存在。&lt;/p&gt;
&lt;p&gt;这真的让我怀疑起自己存在的意义了。&lt;/p&gt;
&lt;p&gt;你就像巫女手中的镜子，反射出我所有的失意与不成器。所以我是有多么不堪见到你，看着对面的我说「那很好啊」「我是很有信心的」「你要加油」的你，又怎么会知道。&lt;/p&gt;
&lt;p&gt;有朝一日我会在自己的梦里消失，又在第二天醒来，穿衣洗漱，吃面包，去那一个个陌生的老地方。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/shanghai-phone-booth.jpg&#34; alt=&#34;Phone booth&#34;&gt;&lt;/p&gt;
&lt;p&gt;哎呀手一滑就又是一堆胡扯般的喻说。我哪有这么多没用的心思。上海这几天的颗粒物污染爆表，让我觉得不安，连海边城市也不能幸免（好吧我的高中地理课都是睡过来的）。在武汉曾亲历过在京城之外的污染，只有那一次。&lt;/p&gt;
&lt;p&gt;北京依然是那个样子，灰褐色的空气里有焦味、酸味和针尖般刺人的气味，这没有阻止我和在爷心血来潮地跑去看了≪ 无人区 ≫。回来的黑的师傅非常客气，车里也十分整洁，一路都没搭一句话，这让我心里很宽慰。当然从大望路到四惠是坐上地铁末班车了的，在爷又说起自己总能在最后一刻赶上汽车火车的本领。要是算上上次从上海回来在机场的惊险最后三百秒，在爷的技能列表里可以正式添加「最后一刻赶上飞机」这一项了！&lt;/p&gt;
&lt;p&gt;最近都在用手机客户端写字。太喜欢啦！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>粉红水的瓶子</title>
      <link>http://localhost:1313/posts/bottle-of-pink-mana.html</link>
      <pubDate>Wed, 27 Nov 2013 18:09:59 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/bottle-of-pink-mana.html</guid>
      <description>&lt;p&gt;不知为啥今天吃着晚饭想起了两个十四年前搬家之后就再也没有见过的瓶子。&lt;/p&gt;
&lt;p&gt;食品柜，老爸老妈那样叫它总是很洋气的感觉，因为在总共两房大小的旧房子里，有一个专门用来放食品的三层玻璃柜。说是食品，也就是说不是食物，食物都在厨房里。&lt;/p&gt;
&lt;p&gt;于是，那样的生活条件下，便是被叫做食品柜，里面除了一些饼干、牛奶票之外，几乎都是不能吃的东西。那些年常见的金属壳电吹风，尚未开封的胶卷，被珍藏起来只在我过生日时才拿出来、洗得干干净净然后倒满橙汁的白色玻璃杯，和塑料袋包裹得严严实实的各种大小的方盒子。&lt;/p&gt;
&lt;p&gt;后来知道，那不算什么很稀奇的柜子，几乎家家都有，有的甚至装着滑动卷帘门。只是，一直觉得别家柜子里的食品会让我没胃口，一心只惦记着散装的葱油饼干。&lt;/p&gt;
&lt;p&gt;那柜子里的一层与二层分别有一个瘦高的酒瓶。标签有些褪色，但画着一半切开的橙子。可能并不是酒瓶。何所谓呢。瓶子里装着水，很满，看不到顶上的空间，许是被灌到了瓶口。灌着的是粉红色的液体。&lt;/p&gt;
&lt;p&gt;我做过各种推测，它会不会是珍藏着的橙汁？或者是什么酒？或者是什么可以杀菌的药水？（在幼儿园里吃饭前，值日生会用小拖布蘸着稀释过的消毒水把每个小朋友的桌子擦一遍）也试着问过妈妈，瓶子里面装着什么，为什么是粉色的。&lt;/p&gt;
&lt;p&gt;回答已经忘了，也许当时就没怎么在意。因为只想把瓶子取出来，打开盖子尝一尝。但是瓶子一直安然待在那里：它们的盖子都顶着上一层的玻璃隔板。缺少中心的这两根柱子，玻璃板无法承受那么多物品的重量。&lt;/p&gt;
&lt;p&gt;它们就这样一直被期待到搬家，也没有给我一个结果。我只记得盖子上几层橡胶垫片，可以为玻璃减小压强。&lt;/p&gt;
&lt;p&gt;瓶子里的粉色液体究竟是什么呢。是什么东西褪色了的样子吧，也许是原本灌满的橙汁褪色了，也许是浸泡过充斥大量染色剂的草纸得到的褪色水。&lt;/p&gt;
&lt;p&gt;这是为数不多的没有变成黑白色的回忆。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>守望者</title>
      <link>http://localhost:1313/posts/the-catcher.html</link>
      <pubDate>Sun, 13 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/the-catcher.html</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;「…但是提起的时候，是难过的，爱过的感觉就是这样吧。」&lt;/p&gt;
&lt;p&gt;这是一个豆友的一条状态。豆友说的是两三年的事。我想起了更长时间的旧事。每当自己因为后悔而想起它时，总是感觉到，会有人因为想起它而后悔。后者意思是，竟然又想起了，真该死。但愿不要再提起它！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;话说有一个勇敢的人，他有一个发小，一个聪明的人。与他们同为青梅竹马的，还有一个女人。&lt;/p&gt;
&lt;p&gt;勇敢的人，在无知的岁月里曾对她展开追逐，可惜不开窍又多疑的他，终于「证明」了自己的自私。这样，许多年过去了。&lt;/p&gt;
&lt;p&gt;一天，聪明的人遇到了女人。&lt;/p&gt;
&lt;p&gt;因为提起了勇敢的人和过去，女人变得很难过，说「爱过的感觉就是这样吧」。聪明的人点了点头，看上去似懂非懂地重复着「爱过的感觉就是这样吧」。&lt;/p&gt;
&lt;p&gt;勇敢的人恰好在不远处望见。他竟然第一次胆怯了，没有上前，只是偷听。&lt;/p&gt;
&lt;p&gt;女人接着说，「他一直是我爱着的人，这是实话。没有哪个人可以让我想念这么久。」&lt;/p&gt;
&lt;p&gt;勇敢的人心里突然躁动起来。聪明的人说，「他也许还不知道呢，你会说这样的话。」勇敢的人干脆靠着墙坐下来听了。&lt;/p&gt;
&lt;p&gt;聪明的人接着说，「既然如此，你为什么不去告诉他呢？」&lt;/p&gt;
&lt;p&gt;女人回答，「世间万事，没有什么可以做两次的。快乐之所以为快乐，因为它代表着一次独一无二的经历。既然过去，就不再想去做了。」&lt;/p&gt;
&lt;p&gt;勇敢的人似乎有些失望，却又没有立刻离去。正在犹豫，又听见聪明的人说，「你依然快乐吗？」&lt;/p&gt;
&lt;p&gt;女人答，「当然快乐。」&lt;/p&gt;
&lt;p&gt;聪明的人追问，「因为发现自己能够放下了而感到快乐？」女人答，「是发现自己没有什么可以再失去时，被动的快乐。」&lt;/p&gt;
&lt;p&gt;聪明的人终于归于沉默。他的言辞无法起到预想的作用，除了能换取更多不真不假的事实。&lt;/p&gt;
&lt;p&gt;似乎想起了什么，他突然笑道，「你知道他一直在做什么吗？」女人摇头。聪明的人说，「他还在等待机会呢。」&lt;/p&gt;
&lt;p&gt;女人也笑了，「这倒有些出乎意料呢。」聪明的人叹道，「可惜他不知道自己已经没有机会了。」&lt;/p&gt;
&lt;p&gt;女人渐渐收起笑容，说，「他也该学会了吧。」&lt;/p&gt;
&lt;p&gt;聪明的人问，「学会什么？」女人说，「如何与这个不友好的世界打交道。」&lt;/p&gt;
&lt;p&gt;聪明的人又笑道，「他才没那么聪明呢，他只有勇敢。他会像一座灯塔一样，一直伫立和守望。」&lt;/p&gt;
&lt;p&gt;女人问，「等待附近的船只？多么天真的人呀。」聪明的人说，「如果是他那样的灯塔，恐怕一直守望着的，只是自己能够发出的光亮吧。」&lt;/p&gt;
&lt;p&gt;「你还真舍得夸赞他。」&lt;/p&gt;
&lt;p&gt;「真的不打算原谅了吗？」&lt;/p&gt;
&lt;p&gt;「你第一次说这么不聪明的话。或许你只是想要我说出来吧。反正，我是愿意说给你听的。有时希望他出现，有时又讨厌自己会有这样的想法，而这些各种各样的想法不过是自己不时冒出来的、总归是跟自言自语同类的行为罢了，自己通常只会在点烟时，对烟头聊聊这些话。这么多年，发生的事情多到已经开始淡忘了。但很确定的是，一直以来，我从没像为他那样为谁停止过脚步。等回过神时，岁月已经像书本一样堆叠起了厚厚一摞。不过有一样东西是一直有些在意的，就是放在最下边的那本一度再也不想翻开的日记。隐约记得书写时忐忑的心情，写完把本子收藏起来时认真谨慎的心情，以及最后一次书写时满是痛与恨的心情。现在，就算是要把巨大的书堆按次序移开、翻出那个本子来，就算有这样的时间去做，恐怕，最终触摸到它封面的一瞬，还是会放弃的吧。实在不愿再看到里面的东西了，也不想再回忆起它记载的任何细节。况且堆叠的新书，甚至有许多还未来得及细读，就已开始变旧了。所以，自己能够做到的最好的事，便是爱护着一段段新鲜的时间，让每一页都记载快乐，让和我一起阅读这些书页的人也能获得快乐。」&lt;/p&gt;
&lt;p&gt;「应该说，你就是在描述现实吧。这些就是你这些年的经历？」&lt;/p&gt;
&lt;p&gt;「也并不完全是吧，有些话是对谁都不能说的，甚至你们俩。生活是很实际的，奔波的日子一旦开始，能思考自己的事情的时间也就不得不缩减再缩减。小腔小调的小心思，很怀念，却也没有机会再拿出来，就像那个日记本似的。然而，这种状态虽然令人疲惫，人总感觉更加精神了。不管手头忙碌的事情有哪些，总是惊喜地发现自己都能应对得很棒，对事情本身也没有什么讨厌的情绪。把自己的梦想变成现实，就是这样令人振奋的事。有些梦想破碎了，有些则顽强地生长着，向着阳光，展示着它们并不那么贴近冰冷的『现实』的灿烂笑容。」说到这，女人止住了话语。顿了顿，女人重新开始说，「我有爱着的人…」勇敢的人突然心头一紧。「我们一直走着，很开心，彼此照应、彼此需要，彼此都有一个并不那么完满的现实，却刚好能够拼贴起来。」&lt;/p&gt;
&lt;p&gt;听到这里，勇敢的人终于知道自己该走了，可是就好像知道女人会继续开口似的，仍然固执地坐着。女人继续说道，&lt;/p&gt;
&lt;p&gt;「你和我已经是如此了解他，可以说对我知心知底的人也只是你们俩而已了，但是…现在…却只能像现在这样说悄悄话似的谈论他……总之…希望他真的已经学会了。」&lt;/p&gt;
&lt;p&gt;「学会了什么？」聪明的人失忆似的又问了一次。&lt;/p&gt;
&lt;p&gt;「学会与这个不友好的世界打交道。」女人也失忆似的又回答了一次。「他或许也有自己的现实，在他的版本中，对待恋情的态度可能必须让位给别的什么更重要的事吧。他能做成那件事是最好的。不，他最好做成那件事，这样才能让我保持住幸存的那些信念。我的信念告诉我，他会做到的。」&lt;/p&gt;
&lt;p&gt;「我被你说糊涂了，好像你在说只有你们两人才知道的事情了似的。」聪明的人第一次露出了思考受阻的沮丧表情。&lt;/p&gt;
&lt;p&gt;「我们不是一直这样吗。互相猜得透，却总是要么不敢说出来，要么言不由衷地胡言乱语一番。」女人边说边微笑起来。&lt;/p&gt;
&lt;p&gt;「至少我知道，他就是那样一个会一直守望下去的人。无论自己在做什么，想什么，都绝对不会容许自己再犯同样的错误了。」&lt;/p&gt;
&lt;p&gt;「人是不会变的。他能消失一次，就能消失第二次。所以，请你不要再继续说为他辩护的话了。」女人的笑容也消失不见了。&lt;/p&gt;
&lt;p&gt;勇敢的人站起来，茫然地把手插在口袋里，不知道是先把烟掏出来还是先把耳机戴上。他大概是想分散一下注意力吧，以此来掩盖一下自己瞬间丢失了方向感的境遇。突然他热切地渴望着，自己不会撞见女人，不会与她对话，不会有机会把刚才所听到的一切又重新听一遍。然而，他没有离开，相反，他整理好了微笑，转身向女人那边走去…&lt;/p&gt;
&lt;p&gt;他真的是个一点聪明劲儿都没有的守望者。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>玉米天妇罗计划（续）</title>
      <link>http://localhost:1313/posts/toumorokoshi-tenpura-keikaku-tsudzuku.html</link>
      <pubDate>Fri, 11 Oct 2013 09:37:23 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/toumorokoshi-tenpura-keikaku-tsudzuku.html</guid>
      <description>&lt;p&gt;超市玉米 2.5 元一根，嫩米、硬米的混在一起卖，又不知道怎么挑，就随手抓了 3 根。&lt;/p&gt;
&lt;p&gt;放了一堆面粉在大搪瓷碗里，加上了传说中的冰水，兑上传说中的可乐，搅拌成一碗面糊糊。然后自作主张地加了些盐和黑胡椒。接下来的一步不太妥当，但当时就是这么做的：把面糊糊倒进了装着玉米粒的碗里。&lt;/p&gt;
&lt;p&gt;等油烧热，就用大个头的勺子舀起一些面糊玉米粒，放到油里，嘎吱嘎吱炸起来！问题来了，炸出来的饼饼根本不从勺子上脱落！以为是面需要再稀一些，但是加水变稀之后，情况依旧。接下来的炸制过程里，只好一直这样做：把面糊玉米粒直接倒在油锅底，它自然会变成饼状，待几秒钟后轻轻碰一下，就会浮起来了。&lt;/p&gt;
&lt;p&gt;于是我的玉米天妇罗变成了裹着厚厚一层面的玉米夹心饼干的感觉。当然，要炸成酥脆的口感这一点还是勉强做到了。&lt;/p&gt;
&lt;p&gt;所以，最好在炸每块天妇罗之前，把勺子盛装那面涂油，再放玉米粒，淋一点面糊，然后下锅。&lt;/p&gt;
&lt;p&gt;可怜的天妇罗，炸了满满一大盘奇形怪状的失败品，和满满一餐盒圆形整齐的还算成功品，正要把餐盒带走和小伙伴们分享，突然去了医院。虽然两天后回家，但油炸食品凉了，就没法再端出去给人看了。加上回家的当天下午就要返回北京，于是告诉妈妈，都蒸一蒸，慢慢吃掉吧。值得一提的是，玉米粒很饱肚，也不容易消化，吃的时候得控制好量。&lt;/p&gt;
&lt;p&gt;不过，自己还是吃到了几块。真的很脆，嚼感很赞！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/tenpura/toumorokoshi-tenpura-tsudzuku-1.jpg&#34; alt=&#34;Tenpura 1&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/tenpura/toumorokoshi-tenpura-tsudzuku-2.jpg&#34; alt=&#34;Tenpura 2&#34;&gt;&lt;/p&gt;
&lt;p&gt;看上去和横山家老妈做的完全不一样。。而且做成这样是否还叫做天妇罗也不确定了。。那么，计划是否成功了呢？似乎只有写出来了的部分是吧。嘿嘿。&lt;/p&gt;
&lt;p&gt;究竟还是只能让它们重新变软，而且自己不能吃完了。善始善终，可不可以让我做到一次。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>《日本物哀》书摘</title>
      <link>http://localhost:1313/posts/reading-mono-no-aware.html</link>
      <pubDate>Sun, 06 Oct 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/reading-mono-no-aware.html</guid>
      <description>&lt;p&gt;拿到了本居宣长先生的《&lt;a href=&#34;https://book.douban.com/subject/5323630/&#34; target=&#34;_blank&#34;&gt;日本物哀&lt;/a&gt;》（王向远先生译本），非常喜欢。优雅地说话，一条条举例解释自己的想法，像是带着茶水逐渐泡开变色的感觉。自己也能从西方诸『格尔德斯』们的重型意见中暂时喘息一下（Google 输入法不支持单方引号）。&lt;/p&gt;
&lt;p&gt;书才初读几页，若干有趣的细节值得收藏和留作参考，就摘录在这里吧，不定时更新。页码依照吉林出版集团有限责任公司 2010 年 10 月版本。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;P19. 所谓『荒凉之处』，指的是末摘花那可怕而寂寞的家。在那种情况下读物语，之所以能够得到慰藉，是因为物语中写的事情与自己有些相似。心想和我一样遭遇的原来不止我一个人啊，于是心情就轻松了许多。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;P21. 所谓『阴差阳错』的事情，指的是荒唐可笑之事。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;P23. 无论如何，阅读物语，还是应以『感知物哀』为第一要义。感知物哀，首先要懂得『物之心』，而懂得『物之心』就要懂世态、通人情。（注：此处将佛儒之类的学说概称为『外国书』）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;P24.『不唠叨』，就是不惹人讨厌，所谓『唠叨』就是说了许多没有意思的废话。在《源氏物语》各卷中，在把可写的一些事情省略时，常常说：『为避免唠叨，此不多赘。』&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;P25. 所谓『不着边际』，就是指那些随心所欲写下来的不可稽考的事情。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;P25.『大热天』，指的是当时正值梅雨季节，由于湿热而致头发蓬乱。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;P25.『笑着说道』表明这话是半开玩笑说出来的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;P26. ……一直以来那些认为《源氏物语》是为劝善惩恶而写，或是对好色的劝诫的观点，都是完全错误的。我们看这部无语，唯有『徒然心动』而已，哪有什么劝惩之意？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;P27. 窃认为，《源氏物语》中所描写的事情可以分为两种，其意趣各有不同。第一种是仿佛实有其事，其趣旨就是让人看了不由得徒然心动，归根结底就是感人心、知物哀。感知物哀，故动情于心，而完全不存在所谓劝诫之意。另一种是物语的描写叫人匪夷所思，也没有什么明确的趣旨，但其中也有一些有趣的地方。冷静阅读时觉得岂有此理，但毕竟也有可观之处。然而缺乏『物哀』之心的愚钝之人，只喜欢那些稀奇古怪的情节，而不能很好地欣赏和体味『物哀』人情。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;P32. 所谓『感动』，世人通常的理解会有偏差。实际上，对于所见所闻的一切事物，觉得有趣、可笑、可怕、稀奇、可惜、可爱、伤感等一切心理活动，都是『感动』。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;P34. 她（注：紫式部）耻于贬损人物，其心胸是非常宽厚的，与外国作家的心理状态比比看，判然有别。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>关于 DIY 印刷明信片的琐碎事情</title>
      <link>http://localhost:1313/posts/tips-for-diy-printing-postcards.html</link>
      <pubDate>Sun, 22 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/tips-for-diy-printing-postcards.html</guid>
      <description>&lt;p&gt;手上积累了若干照片，一时兴起便想到印成明信片。意料内外遇到了各种情况，就在这里按流程先后、Q&amp;amp;A 的方式记载一下吧。事无巨细一点，希望能给尽量多的人帮助。关于 Photoshop 的使用入门和照片润饰技巧就不写了，可以参考专门的教程网站，比如&lt;del&gt;&lt;a href=&#34;https://www.68ps.com/zt/CS5/&#34; target=&#34;_blank&#34;&gt;这个&lt;/a&gt;&lt;/del&gt;。&lt;/p&gt;
&lt;h1 id=&#34;制作-diy-明信片前后会用到哪些工具&#34;&gt;
  制作 DIY 明信片前后会用到哪些工具？
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%88%b6%e4%bd%9c-diy-%e6%98%8e%e4%bf%a1%e7%89%87%e5%89%8d%e5%90%8e%e4%bc%9a%e7%94%a8%e5%88%b0%e5%93%aa%e4%ba%9b%e5%b7%a5%e5%85%b7&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;硬件&lt;/strong&gt;：数码相机、拍照手机或扫描仪等各路设备，用来拍摄、生成明信片上的图片。甚至可以用手写板进行纯手绘！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;软件&lt;/strong&gt;：Photoshop 即可，用来润饰照片、排版和输出用于印制的源文件。当然，若能用更多的工具创造更有趣的明信片，何乐而不为？&lt;/p&gt;
&lt;h1 id=&#34;从拍照到拿到-diy-明信片大体步骤有哪些&#34;&gt;
  从拍照到拿到 DIY 明信片，大体步骤有哪些？
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e4%bb%8e%e6%8b%8d%e7%85%a7%e5%88%b0%e6%8b%bf%e5%88%b0-diy-%e6%98%8e%e4%bf%a1%e7%89%87%e5%a4%a7%e4%bd%93%e6%ad%a5%e9%aa%a4%e6%9c%89%e5%93%aa%e4%ba%9b&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;一般常见的 DIY 素材有数码相机拍摄的照片，以及将冲印的照片扫描成的电子版。由于各个商家会使用不同规格的纸张，因此在正式开始后期处理之前，最好大致选定 DIY 明信片商家，仔细阅读他提供的文档，针对其中的规格开展图片的后期（如果商家能提供 PSD 模板下载就更好了，可以直接套用）。经 Photoshop 的润饰、调色、裁剪等方式完善图片后，按照明信片的尺寸、格式调整出满意的布局。如果想要添加文字，可以在图片后期过程中一并完成。最后，输出完整的明信片印制源文件，用 DIY 明信片商家指定的方式传输过去，下单印制即可等待收货。&lt;/p&gt;
&lt;h1 id=&#34;什么是-cmyk-色彩模式为什么许多商家都特别提示或者要求使用-cmyk-模式的图像&#34;&gt;
  什么是 CMYK 色彩模式？为什么许多商家都特别提示或者要求使用 CMYK 模式的图像？
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e4%bb%80%e4%b9%88%e6%98%af-cmyk-%e8%89%b2%e5%bd%a9%e6%a8%a1%e5%bc%8f%e4%b8%ba%e4%bb%80%e4%b9%88%e8%ae%b8%e5%a4%9a%e5%95%86%e5%ae%b6%e9%83%bd%e7%89%b9%e5%88%ab%e6%8f%90%e7%a4%ba%e6%88%96%e8%80%85%e8%a6%81%e6%b1%82%e4%bd%bf%e7%94%a8-cmyk-%e6%a8%a1%e5%bc%8f%e7%9a%84%e5%9b%be%e5%83%8f&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;CMYK 即&lt;a href=&#34;https://zh.wikipedia.org/zh-cn/%E5%8D%B0%E5%88%B7%E5%9B%9B%E5%88%86%E8%89%B2%E6%A8%A1%E5%BC%8F&#34; target=&#34;_blank&#34;&gt;四分色模式&lt;/a&gt;，使用青色、洋红、黄、黑四色进行叠加组合出印刷品的所有颜色，它不同于电脑显示器所采用的 &lt;a href=&#34;https://zh.wikipedia.org/wiki/RGB&#34; target=&#34;_blank&#34;&gt;RGB 颜色模式&lt;/a&gt;。它是印刷行业的标准色彩模式，在设计中使用 CMYK 模式即可保证屏幕上看到的和印刷出来的颜色基本一致。当然，如果在打印店使用喷墨打印就无需特别在意色彩模式问题了，只是这样的印制方式价格往往较高。&lt;/p&gt;
&lt;h1 id=&#34;如何让自己的照片变成-cmyk-色彩模式&#34;&gt;
  如何让自己的照片变成 CMYK 色彩模式？
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e5%a6%82%e4%bd%95%e8%ae%a9%e8%87%aa%e5%b7%b1%e7%9a%84%e7%85%a7%e7%89%87%e5%8f%98%e6%88%90-cmyk-%e8%89%b2%e5%bd%a9%e6%a8%a1%e5%bc%8f&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/diy-postcards/cmyk-1.png&#34; alt=&#34;用 CMYK 颜色模式新建 Photoshop 文档&#34;&gt;&lt;/p&gt;
&lt;p&gt;按照商家指定的画幅长、宽新建一个 Photoshop 空白文档，将『色彩模式』选为『CMYK 颜色』，通常 8 位便可。将润饰完毕的照片拖进这个文档，调整好位置，加上想写的文字等元素，最后保存出来的图片文件就是 CMYK 模式了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/diy-postcards/cmyk-2.png&#34; alt=&#34;CMYK 颜色模式&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;有些老图是在-rgb-或其他色彩模式下后期的转换到-cmyk-模式后色差巨大怎么办&#34;&gt;
  有些老图是在 RGB 或其他色彩模式下后期的，转换到 CMYK 模式后色差巨大？怎么办？
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e6%9c%89%e4%ba%9b%e8%80%81%e5%9b%be%e6%98%af%e5%9c%a8-rgb-%e6%88%96%e5%85%b6%e4%bb%96%e8%89%b2%e5%bd%a9%e6%a8%a1%e5%bc%8f%e4%b8%8b%e5%90%8e%e6%9c%9f%e7%9a%84%e8%bd%ac%e6%8d%a2%e5%88%b0-cmyk-%e6%a8%a1%e5%bc%8f%e5%90%8e%e8%89%b2%e5%b7%ae%e5%b7%a8%e5%a4%a7%e6%80%8e%e4%b9%88%e5%8a%9e&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;这是由于 RGB 和 CMYK 的色域差异巨大所导致。RGB 作为显示器色彩，是通过发光来呈现颜色的；CMYK 作为印刷色彩，则是由反光来呈现色彩的。而两者色域上的不完全重合导致它们有能够共同表达的颜色，也有各自特有的颜色。总体而言，CMYK 的色域比 RGB 小很多，所以直接把 RGB 模式的图片拿去印刷，结果可能是颜色变得十分暗淡，甚至错误。&lt;/p&gt;
&lt;p&gt;所以尽量新建 CMYK 模式的空文档，并把原片拖进这个文档进行调色。实在找不到原片了的话，就只有在转换后的图片上再次调色进行补救了。其实，如果不是那么执着于之前的那种颜色，尝试接受一下略有差异的色彩也未尝不可呢。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>玉米天妇罗计划</title>
      <link>http://localhost:1313/posts/toumorokoshi-tenpura-keikaku.html</link>
      <pubDate>Sat, 21 Sep 2013 17:08:14 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/toumorokoshi-tenpura-keikaku.html</guid>
      <description>&lt;p&gt;最近看了一堆日本电影。&lt;/p&gt;
&lt;p&gt;一部叫做「&lt;a href=&#34;https://movie.douban.com/subject/1294433/&#34; target=&#34;_blank&#34;&gt;秋刀魚の味&lt;/a&gt;」，五秒钟可以说完的问题，用了两个小时来讲；还有一部，不是还有两部「&lt;a href=&#34;https://movie.douban.com/subject/1463224/&#34; target=&#34;_blank&#34;&gt;三丁目の夕日&lt;/a&gt;」、「&lt;a href=&#34;https://movie.douban.com/subject/1980825/&#34; target=&#34;_blank&#34;&gt;三丁目の夕日 2&lt;/a&gt;」，把大街都化妆成了战后年代的样子，只是人们根本不太像真正那个年代呆呆的演技了；然后就是讲了玉米天妇罗的「&lt;a href=&#34;https://movie.douban.com/subject/2222996/&#34; target=&#34;_blank&#34;&gt;歩いても 歩いても&lt;/a&gt;」，慢慢的节奏，却也不知不觉讲述了很多年的事。&lt;/p&gt;
&lt;p&gt;看完「歩いても 歩いても」只是随便搜索了一下，原来有这么多人都被玉米天妇罗吸引了！甚至 &lt;a href=&#34;https://www.youtube.com/watch?v=T6d7n421xjY&#34; target=&#34;_blank&#34;&gt;behind the scenes 第一段&lt;/a&gt;就全部讲述了关于剥玉米、炸玉米的过程。金黄金黄的外观，在锅里噼里啪啦地炸开（居然会变成爆米花），用裹粉炸出来的一整块，真心不错的说！&lt;/p&gt;
&lt;p&gt;还有一周回家，正好回头试着做一做吧。不过那么多天假，其实能用来料理的时间也不多吧，什么都没有准备好的房子，自己还因为它说了大话弄得收不了场，真歹势。&lt;/p&gt;
&lt;p&gt;浓缩一下，需要的东西有玉米、冰水、低筋粉（玉米粉、面包粉、成品天妇罗粉都可以）、鸡蛋液、啤酒（也有用伏特加的，也有用可乐的），调成粉糊裹上一坨玉米粒进入 180 度的油炸一炸便可。用这样的方法炸其他蔬菜应该也不错，比如青椒圈什么的。&lt;/p&gt;
&lt;p&gt;看看剧中的玉米天妇罗，美妙的过程！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/tenpura/toumorokoshi-tenpura-1.jpg&#34; alt=&#34;tenpura 1&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/tenpura/toumorokoshi-tenpura-2.jpg&#34; alt=&#34;tenpura 2&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/tenpura/toumorokoshi-tenpura-3.jpg&#34; alt=&#34;tenpura 3&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/tenpura/toumorokoshi-tenpura-4.jpg&#34; alt=&#34;tenpura 4&#34;&gt;&lt;/p&gt;
&lt;p&gt;「歩いても 歩いても」缓缓地、自然地讲述着一段日常，那种拼命压住家庭伤痛时展现出的快乐，有新的喜事又并不能让人百分百地满意，发出邀请的初衷其实也带有报复的恶意。最善良的人的简单生活，就是一直走一直走吧。不知什么时候开始一起走着，是极为稀有的那么几样无头有尾的事。&lt;/p&gt;
&lt;p&gt;那些有头无尾的东西，就像是炸出来的满满一锅天妇罗，总是忘记最后剩下来放软了的那点是如何收场的。对大人来说，不记得才好吧。&lt;/p&gt;
&lt;p&gt;皮艾斯，从孤狗搜索到的结果汇集：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://movie.douban.com/subject/2222996/discussion/18006179/&#34; target=&#34;_blank&#34;&gt;关于里面的炸玉米 – 豆瓣电影&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.masa.tw/%E7%B0%A1%E5%96%AE%E6%96%99%E7%90%86%E9%A3%9F%E8%AD%9C/%E6%B2%99%E6%8B%89%E9%A3%9F%E8%AD%9C-%E7%82%B8%E7%8E%89%E7%B1%B3%E6%B2%99%E6%8B%89.html&#34; target=&#34;_blank&#34;&gt;沙拉食譜 – 脆脆玉米天婦羅沙拉&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.sina.com.tw/atom/article.php?entryid=583272&#34; target=&#34;_blank&#34;&gt;【橫山家之味】家傳絕手料理玉米天婦羅到底是怎麼完成的呢？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.sbanzu.com/topicdisplay.asp?BoardID=73&amp;Page=123&amp;TopicID=1815940&#34; target=&#34;_blank&#34;&gt;请问：“油炸天妇罗”怎样作？（炸虾怎样作？）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.dodocook.com/recipe/12540&#34; target=&#34;_blank&#34;&gt;Cron Tenpura．橫山家之味之偽玉米天婦羅&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://roxytony.pixnet.net/blog/post/11821634-%E5%96%AB%E3%80%82%E7%86%9F%E7%94%B7%E4%B8%BB%E5%BB%9A---%E5%A4%A9%E5%A9%A6%E7%BE%85-%26-%E7%82%B8%E7%B4%A0%E4%BB%80%E9%8C%A6&#34; target=&#34;_blank&#34;&gt;喫。熟男主廚 – 天婦羅 &amp;amp; 炸素什錦&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>A casual instagram video</title>
      <link>http://localhost:1313/posts/a-casual-instagram-video.html</link>
      <pubDate>Mon, 24 Jun 2013 09:45:57 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/a-casual-instagram-video.html</guid>
      <description>&lt;p id=&#34;custom-video&#34; style=&#34;width: 100%;&#34;&gt;
  &lt;video src=&#34;http://localhost:1313/img/IMG_1612.mp4&#34; poster=&#34;/img/IMG_1612_cover.jpg&#34; autoplay=&#34;true&#34; loop=&#34;true&#34; controls style=&#34;height: 100%;width: 100%&#34;&gt;There supposed to be a beautiful video right here, but your browser doesn&amp;#8217;t seem to support this feature which every 21st-century-browser does. Why not download a Firefox for a start? 🙂&lt;/video&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://instagram.com/p/a7MbCauYjp/&#34; target=&#34;_blank&#34;&gt;View on instagram&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;更新：现在视频在桌面浏览器和 iOS 设备上都能正常显示、播放了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color:#8fbcbb&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#34;custom-video&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#8fbcbb&#34;&gt;style&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#34;width: 100%;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#eceff4&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;video&lt;/span&gt; &lt;span style=&#34;color:#8fbcbb&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#34;/img/IMG_1612.mp4&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#8fbcbb&#34;&gt;poster&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#34;/img/IMG_1612_cover.jpg&amp;#34;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         &lt;span style=&#34;color:#8fbcbb&#34;&gt;autoplay&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#8fbcbb&#34;&gt;loop&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#34;true&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#8fbcbb&#34;&gt;controls&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         &lt;span style=&#34;color:#8fbcbb&#34;&gt;style&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a3be8c&#34;&gt;&amp;#34;height: 100%;width: 100%&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    There supposed to be a beautiful video right here, but your browser 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    doesn&lt;span style=&#34;color:#d08770&#34;&gt;&amp;amp;#8217;&lt;/span&gt;t seem to support this feature which every 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    21st-century-browser does. Why not download a Firefox for a start? 🙂
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#eceff4&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;video&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#81a1c1&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#eceff4&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;就这么一小段代码折腾死我了。本以为用一个插件就能直接搞定，但是试了好几种当下热得不行的插件都不满意。需求诡异是我一惯的作风么。总之，仍然坚持无 Flash，视频只用 HTML5 来播放。如果浏览器不支持，（可能会有同学因为需要某些特定功能而使用不支持 HTML5 的浏览器）就会看到我预留的一句话。&lt;/p&gt;
&lt;p&gt;唯一还剩一点小缺憾：因为本想着让视频自动播放、无限循环，就不显示控制栏了。这样虽然干净漂亮但有一个问题，iOS 6 禁止网页上的视频自动播放，苹果的考虑是避免用户流量的过量消耗。因此，在 iOS 设备上要播放这段视频，必须由用户去按播放按钮。但禁用控制栏以后，在 iOS 上竟然会连播放按钮都消失掉，视频压根没法开始播放。无奈之下还是暂时先留着控制栏吧。&lt;/p&gt;
&lt;p&gt;这篇文章里的视频体积不到 3MB，不过对于普通流量套餐的爪机来说确实是笔大数。&lt;/p&gt;
&lt;p&gt;目前就只能做到这里了。等到流量不再是问题的那一天，电脑就可以变成预言家日报了！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Chicken George</title>
      <link>http://localhost:1313/posts/chicken-george.html</link>
      <pubDate>Mon, 03 Jun 2013 17:06:50 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/chicken-george.html</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/chicken-george.jpg&#34; alt=&#34;Chicken George&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://book.douban.com/subject/1919878/&#34;&gt;14 岁&lt;/a&gt;·楳图一雄&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>我的科学妈妈</title>
      <link>http://localhost:1313/posts/the-most-scientific-mum.html</link>
      <pubDate>Sat, 06 Apr 2013 19:40:17 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/the-most-scientific-mum.html</guid>
      <description>&lt;p&gt;半夜逛了逛妈妈的 QQ 空间，居然就对空间开始有点感激的感觉···自己的空间注销好几年了，但愿意留在那个天真本源的环境里的人们都是那么真实。虽然有点俗，但仍然觉得 QQ 空间这种东西不靠谱（这是病请继续保持），所以把妈妈的日志都备份过来吧（好在不多呼呼）。&lt;del&gt;然后有几张照片&lt;/del&gt;，几乎是我从未见过的妈妈的样子，看起来比我都年轻真是伤脑筋呢···&lt;/p&gt;
&lt;h3 id=&#34;正片&#34;&gt;
  正片
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e6%ad%a3%e7%89%87&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;（先新后旧，正文格式有少量修正）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;重游三游洞&lt;/strong&gt;（2012-10-21 22:41）&lt;/p&gt;
&lt;p&gt;宜昌，风光秀丽，山水相依。三游洞，依山傍水，植被成荫，徜徉在景区小路上，神清气爽，笑容满面。十月，应该是游玩的最佳季节，好友相约便结伴而行。&lt;/p&gt;
&lt;p&gt;第一次去三游洞，估计时隔 40 年了，小学生的视觉看风景，平淡无奇，以至于在这 40 年间不曾再去，哪怕是陪同亲戚也不愿进去，甘愿等在门口。这次和好友同去，全新的感觉么，边看边走，边说边笑，拍了一些照片，还蛮有意思咧！好友也兴趣盎然，强烈要求再次安排游玩计划。等有空了吧。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;酷乐迪唱歌&lt;/strong&gt;（2011-12-12 22:48）&lt;/p&gt;
&lt;p&gt;酷乐迪开业酬宾，小间每小时 1 元，中间 2 元，大间 3 元，至 2011 年 12 月 15 日，每天歌友爆棚，明天香香接舞友唱歌，今天就把房间订了。但愿酷乐迪生意兴隆！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;感谢老师们&lt;/strong&gt;（2010-5-13 19:57）&lt;/p&gt;
&lt;p&gt;儿子的四年大学学习即将结束，也是人生最主要的学习过程行将告一段落，他也即将走上工作岗位，人生又一个新的历程。&lt;/p&gt;
&lt;p&gt;想起还在几个月前，同学们都在忙着应聘，儿子也在其中，作家长的心里也是担忧，不知孩子能不能遇到心仪的单位，不知道能在哪个城市落脚，对孩子的就业帮不上一点忙哦，能帮孩子就业的家长还是少数吧，都在说就业难啊，可又不太愿意儿子外派，儿子倒在宽我的心，说没事的，总会有饭吃的…上个月终于收到他的短信，说是某单位通知他了，算是录取吧，我好高兴，因为那里有孩子喜爱的工作，他说那里的人文环境好，工作环境也好，工作都是自己喜欢做的事…你说我能不高兴吗？&lt;/p&gt;
&lt;p&gt;人说孩子能被国家重要单位录取，是因为孩子优秀，我觉得还是得益于老师们对他的教育，还加上好的机遇，虽是经过几次考试选拔，但如果没有老师们的谆谆教导，没有这个机遇，你纵有百般武艺也无从施展啊，所以说，作为没有能耐的家长啊，从心底里感谢各个阶段的老师们，感谢亲朋好友多年来对孩子的关心！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;保持&lt;/strong&gt;（2009-10-3 22:18）&lt;/p&gt;
&lt;p&gt;今天是中秋节，09 年的中秋比较特别，首先，国庆 60 周年的盛典给他带着往常没有得喜庆，其次，他夹在国庆黄金周的中间，人们此时的心情－没得说。&lt;/p&gt;
&lt;p&gt;今年暑假，儿子没有回家，干吗呢？有人说是在北京打工？没有，今年国庆 60 周年大庆，儿子参加了国庆游行的群众方阵，暑假期间已经开始训练了，所以没有回家。虽然说孩子在那训练很辛苦，但在电视上看到阅兵式办的那么成功，心理确实感到自豪！&lt;/p&gt;
&lt;p&gt;很长时间儿子没有回家了，国庆游行结束后，儿子忙着赶回家过节，与家人团聚！由于前段时间训练辛苦，又加上旅途劳顿，到家后倒头就睡。。。&lt;/p&gt;
&lt;p&gt;国庆大典儿子参加了，去年的北京奥运，儿子也参加了，虽然只是志愿者，但旁人煞是羡慕，有人报料报社记者，请他们采访孩子，孩子不感兴趣，声称要保持平常心，保持低调。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;忙&lt;/strong&gt;（2008-8-27 21:20）&lt;/p&gt;
&lt;p&gt;本学期提前一周开学，幼儿都已入园。我班都是新生，年龄较小，刚离开家长的怀抱，必定不习惯，情绪不稳定，这可忙坏了几位老师，白天不说，中午也都没休息，亲手拍着他们入眠，2 天下来，大家都有腰酸背痛之感…不过，这种状况不会持续很久的，因为咱们是谁啊？幼教专家，哈…相信这些孩子在专家们的调教下，过不了多久就会习惯幼儿园的生活的。&lt;/p&gt;
&lt;p&gt;奥运会刚结束，儿子也刚结束那边的志愿者工作，明天又要踏上残奥会工作的岗位，说是这次要跟团，他也挺忙的哦，哈…前几天我提醒他要提前了解跟团国家的有关信息，不知他脑袋里装了多少…&lt;/p&gt;
&lt;p&gt;孩子啊，好好学习吧！真想你能向你的那位学长学习，在学习上突飞猛进，明年暑假也能用自己的收入出去周游一次，期待着…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;感恩的心&lt;/strong&gt;（2008-8-13 23:02）&lt;/p&gt;
&lt;p&gt;一个半月的暑假好像很快啊，明天就开始上班了，这个暑假过得很愉快，很充实。&lt;/p&gt;
&lt;p&gt;党和人民知道我们平时上班很辛苦，每年给我们 2 个假期，让我们调养身体，而且是带薪的，多少人羡慕我们哟！&lt;/p&gt;
&lt;p&gt;这个假期儿子没回来，为百年梦想：奥运做志愿者。我就把假期都给了自己，早上和几个同事一起锻炼，完了换着地方吃早点，再就买菜做饭，中午酣睡，晚上又去散步广场玩，一天过得好快的啊，不愁吃不愁喝的，我们太幸福了，这要感谢人民感谢党啊，我要把这颗感恩的心用到工作上，尽力做好各项工作，让新生尽快适应新环境，喜欢上幼儿园，然后长胖，哈…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;准&lt;/strong&gt;（2008-8-2 22:58）&lt;/p&gt;
&lt;p&gt;我发现现在的天气预报越来越准了，说有雷阵雨，果不其然，在我午睡时电闪雷鸣，倾盆大雨啊，但是，仍然唤不醒我昏睡百年，从下午 3 点一直睡到 8 点哦！暑假，真好！天气，真舒服！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;起得更早了&lt;/strong&gt;（2008-7-31 18:47）&lt;/p&gt;
&lt;p&gt;进入二伏，天气更加炎热，从今天开始，江边早锻炼的时间改为 6:30-8:30。&lt;/p&gt;
&lt;p&gt;手机还没闹铃，我就醒来了，5:30，躺了一会儿就起来了，6:00 分，好友华华来电相约出门。等我们走到市政府大门处，已经听到舞曲悠扬，哈…老人家们好早哦，已经起舞了。&lt;/p&gt;
&lt;p&gt;华华参加锻炼半月，瘦身 5-6 斤，效果不错哦，另一个同事小刘前天也加入了，虽然住的很远，但也和我们一同到达，钦佩！预祝上班前能够看到小刘的成绩。&lt;/p&gt;
&lt;p&gt;还有个同伴“小巴”，最近没有来，昨天得知喝水时面前被开水烫伤，真可怜，祝福她早日恢复健康，重返锻炼的队伍。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;定心丸&lt;/strong&gt;（2008-7-29 23:40）&lt;/p&gt;
&lt;p&gt;刚才收到儿的短信，叫我给他存生活费，我乘机跟他短聊了几句。（怕影响他的工作，不敢打扰。）&lt;/p&gt;
&lt;p&gt;我：回寝室没有？打你电话吧？&lt;/p&gt;
&lt;p&gt;儿：没，住袁同学这儿呢，离上班近很多，累，得睡了，有事吗？&lt;/p&gt;
&lt;p&gt;我：哦，好的，还挺会动脑筋的啊，没事，想叫你注意休息，注意安全，电视上最近老说反恐什么的，我就担心你的安全啊，你应该知道一些安&lt;br&gt;
全应急措施吧？不知培训时跟你们讲了没有？&lt;/p&gt;
&lt;p&gt;儿：都讲了的，放一百个心吧，知道大厦安保多严吗？每天早上几百个搜暴犬全楼走一遍，进门有武警验证，三张卡，一张信息对不上，所有证&lt;br&gt;
件当场没收，有次一个送快递的，带了个随身的小刀，被拘了 5 天，大厦的人说情都没用，保安属于武警的管。安全没问题的。&lt;/p&gt;
&lt;p&gt;我：哦，安全我就放心了，上班主要干吗呢？&lt;/p&gt;
&lt;p&gt;儿：办公室工作，主要等接电话，也打杂之类的。&lt;/p&gt;
&lt;p&gt;我：哦，打杂也有学问，要机灵，也是积累工作经验的好机会，等奥运结束后，最好把这段经历用文字记录下来。好好工作吧，多向那些优秀人士学习，对自己的将来有好处，看看高层人士的素质和内涵。好了，休息吧，明天好要起早呢，别回了，睡！！！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;思念&lt;/strong&gt;（2008-7-28 18:00）&lt;/p&gt;
&lt;p&gt;儿子作为奥运志愿者，今天上岗了，在奥运大厦（奥组委工作的地方，奥运会的指挥中心）。&lt;/p&gt;
&lt;p&gt;从期末考试结束至今已有一个多月了，儿子一直呆在学校，按说可以回家看看，休息一段时间，让我们做家长的和孩子聚一聚，做点好吃的，给孩子调理一下，可是老师没让他们回来，随时待命，为啥呢？我想的话，为的是保证奥运会的各项工作顺利开展。奥运会能在我们中国举办，是我们国人的骄傲和自豪，儿子能够顺利通过几次考试，加入志愿者的行列，不仅是他个人的荣光，也是我们家人的自豪，起码是通过儿子为奥运做点贡献吧！&lt;/p&gt;
&lt;p&gt;儿子在学校的日子，我也放假在家，空闲的时候不免双眼发直，不要问我怎么了，想孩子呗，没办法啊，从春节后离家，一直没有见过他，总担心他在学校会不会安排好自己的生活，学习是不是勤奋，是否劳逸结合，唉…&lt;/p&gt;
&lt;p&gt;前几天忍不住给儿子打了电话，听到了儿子的声音，交流了四十多分钟，感觉真好，儿子说几天前他去老师家帮老师修了电脑，和老师在楼下的饭馆里吃的饭，席间，老师跟他说了许多，鼓励他勤奋学习，不要满足目前的学历…儿子说：老师的话我都记住了。&lt;/p&gt;
&lt;p&gt;儿子很幸运，在他人生的道路上遇到了许多好老师，我又有什么放心不下的呢？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;收获&lt;/strong&gt;（2008-7-27 22:12）&lt;/p&gt;
&lt;p&gt;蓝天。绿树，鲜花，伴随着曼妙的音乐，真是美极了！步入中年，自然地加入到了强身健体的队伍。&lt;/p&gt;
&lt;p&gt;那是在初冬时节，我想到了运动，鉴于安静的性格，我选择了公园散步的项目，对于其他那些赤手动脚的项目，不感兴趣，走圈圈吧，从 2 圈逐渐到 5 圈，总感觉达不到运动量，再加一个动作，踮脚走，路人投来异样的目光，哈…管他呢！几天中，我总被一个声音牵着耳朵，那就是公园里那悠扬的音乐，再之人们那优美的舞姿又牵着我的目光，就这样，我被那块地儿深深的吸引住了，随之加入。&lt;/p&gt;
&lt;p&gt;从走进舞池至今，我收获了许多，对身边的人和事有了更新的认识，当然，最多的是舞技的提高。8 个月来，我从一个不会迈脚的舞盲，到现在的翩翩起舞，快慢三步，慢四垫四，北京平四，吉特巴…其中凝聚了好多老师的智慧和心血，对我帮助最大的是苏老师，姚老师，阎老师，其间还有一个收获，那就是自信。&lt;/p&gt;
&lt;p&gt;最值得一提的是姚老师：一个大学退休女教师，她总给我鼓励，我喜欢她从天津带回来的“吉特巴”，她就手把手，脚吧脚的教我，估计目前我是这儿学的最好的学生吧，哈…上周姚老师给我录像了并刻成碟送给我，这让我好开心，我不仅看见了自己的舞姿，也发现了自己的不足，还要努力哦！&lt;/p&gt;
&lt;p&gt;感谢新生活，感谢我的老师们！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;话说四月份的半夜还真冷啊···我是全年凉席党。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>从维多利亚时代的祖母到结构的荡然无存</title>
      <link>http://localhost:1313/posts/from-victorian-grandmother-to-deconstruction.html</link>
      <pubDate>Fri, 01 Mar 2013 18:10:32 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/from-victorian-grandmother-to-deconstruction.html</guid>
      <description>&lt;p&gt;这学期两节英语课都由外教来带。其中一个和上学期一样。&lt;/p&gt;
&lt;p&gt;由于教室里坐着二十来个一本正经的书生，所以 Mark 无论更换什么话题总是单口相声。没有把握的话，是应当缄口不言，保持适当的镇定。不过闲聊的话，也不能镇定到让发话的人一直自娱自乐着吧。那就已经是木讷了。&lt;/p&gt;
&lt;p&gt;教室里总共五名男生。其余的人大概也考虑到形象问题，即使已经共同上了半年的课，仍然要像给大家第一印象时的样子，维持那个形象：自己是谦逊的，有礼貌的，守规矩的，正派作风的。可惜说到形象，有一事不敢苟同呢：如果明明已经写好了论文，是自己迫不及待想要交给老师，却又无端地认为必须有人同行，自己才不会显得比较吃亏，于是当同行者说『这么快就要交论文么？我还没写啊』的时候，回答说『我也没写呢啊』以试图掩盖自己怕吃亏的心理活动，从而表现出自己做事直来直往的形象，这分明已经把你的形象毁灭到连灰都找不到了。&lt;/p&gt;
&lt;p&gt;不记得有没有说过了，每个人都是扭曲的存在。意思到这吧。&lt;/p&gt;
&lt;p&gt;于是 Mark 谈到了自己因艾滋去世了的弟弟。他因此成为了一个反同性恋者。虽然他一再解释只是自己不接受而已，但分明是咬着牙根说的。由于我和他一样，都是异形恋爱导向的，因此对性别问题发表看法不会有太强的说服力（QIM 输入法的 bug：只有输入 shuofuli 才可以打出说服力）。但话都是靠人说的嘛，观点作为观点本身而言，是不带有人身从属性质的，谁都可以同意某个观点，也可以反对某个观点。&lt;/p&gt;
&lt;p&gt;首先要解决的是非常恶心的一句官方宣传语：『拒绝同性恋，远离艾滋病』。我记得，当时自己的说法是『It’s never the case when homosexuality stops the AIDS stops consequently.』艾滋的传播永远只有一个原因：不够细心。吸毒也好，无套也好，甚至是无辜地坐到一个有意安放的带毒针头上也好，本身都是十分科学的传播途径。而母婴传播只是直接传播的一个衍生品。这样说会很没有人情味，只可惜人情味是不能入药的哟。细心，只有细心，有时近乎无情的细心，才能保全生命。而就算如此，保全生命也并不是每个人追求的东西（关于活法的问题就不在此处详谈了）。宣传语中的两者并不能产生直接因果联系，如果要强加这个因果关系，只能说明每个人都是扭曲的存在。&lt;/p&gt;
&lt;p&gt;然后讨论了关于小孩的事情。有个很善于说出自己观点的女生回答了这个问题，认为领养或试管婴儿都是解决途径。这一点上没能和外教达成一致。Mark 始终坚持生育更重要，我想言下之意是亲生孩子最重要吧。我的看法是，假如前提就是无所谓有没有孩子，那么与其死磕上异性丁克婚姻，不如随意选择，愿意丁克的丁克，愿意同性的同性。这是个死胡同，因为本来就是没有先行立场的事情，最终却说得像个艰难的选择似的。这不是选择，它就是一个事实，简单到没有任何理由，就像 1=1 一样。&lt;/p&gt;
&lt;p&gt;接下来，是让部分直人感到『不适』的问题。基于以上几种成见，自然会不适。要么逃离，要么消除成见，方能根治。请不要再重复六十年前白人对黑人的成见后又变为主动捍卫黑人权益的可笑举动了。&lt;/p&gt;
&lt;p&gt;最后，也是唯一一点担忧，仍然和繁衍有关。尽管把这个点单独拿出来说有点过分，毕竟同性恋爱导向的数量远远不足以充数，至少在言辞的战斗力上无法和异性恋爱导向者匹敌（他/她们需要自己的理论）。但是，有这样的担忧并不多余。那就是人类的上帝只为人类创造了一种繁衍方式，即异性繁衍。因此同性繁衍是违反自然规律的，目前也无法做到。这就意味着，不得不放弃繁衍的任务。它究竟会不会导致人口数量下降，只能说是几率均等的可能性之一。若要弥补它，人类就必须自己成为上帝，改造或扩展繁衍的功能，或者改变最根本的婚姻道德规则，让生育成为一种纯粹的机械活动，让女性只是为了生育而生育，无关爱情和理想。问题就是，能不能这样做？但说回来，是有小孩的问题更多，还是没有小孩的问题更多呢？&lt;/p&gt;
&lt;p&gt;Mark 在课间仍然觉得意犹未尽，便找我继续聊这个话题。当然，我也没想多磨蹭，祭出通吃西方文化的宝刀：观点自由。Mark 毫不犹豫地赞同，不同的人本来就可以有不同的看法和理由，这是每个人的自由。但能看出来他又并不完全屈服于它，他说，自己是在这种礼教中成长的，他的祖母甚至保持了维多利亚时代的女性特征，穿全身遮蔽的服装，中规中矩死守礼教。我说，文明的趋势是观点的分裂化，结构正在消失，规矩正在分化，虽然会让活着的人不适应，但毕竟是所有人都在经历的变化，而我发现自己是站在不畏惧变化这一边的。&lt;/p&gt;
&lt;p&gt;畏惧和无能为力是愤怒的起源呢。因此，认识自己是每天清晨的第一件事。人是有限的人。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>带有 USB 输出口的 MIDI 键盘可以通过相机套件直接用于 iOS 设备上</title>
      <link>http://localhost:1313/posts/you-can-connect-any-midi-keyboard-with-a-usb-interface-thru-camera-kit-to-an-ios-device.html</link>
      <pubDate>Sun, 24 Feb 2013 17:17:48 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/you-can-connect-any-midi-keyboard-with-a-usb-interface-thru-camera-kit-to-an-ios-device.html</guid>
      <description>&lt;p&gt;开个博客踹了这么多意（fèi）识（huà），少说也有一两万字了吧？但从此开始写有用的字？做不到的。动笔即有神，掐着我的手，『I must not tell lies』。&lt;/p&gt;
&lt;p&gt;真的由于人是不会变的吗？多半是畏惧变化、抵触未知吧。这样一个由『不情愿』堆砌成的世界，之所以能够环环相扣紧密接合地运转，是因为所有人都是扭曲的。&lt;/p&gt;
&lt;p&gt;在如此复杂的空间里，给任何事情找个理由都是再简单不过的事。为什么不去欺骗所有人，然后自己过一套自己的生活呢？谁说理想主义一定就是美好的脆弱的呢？它恐怕是『美好的前端、肮脏的实现』流派的极佳例证之一吧！大胆做出来的话，只要页面好看，谁会去管驱动它的程序代码写得多外行呢。&lt;/p&gt;
&lt;p&gt;别被我欺骗了，我只想活在自然无意安排的缘分中，说不好谁、哪天就再也不愿停留在这脆弱的缘分里了，因为我不情愿，才会行为得让人发笑。&lt;/p&gt;
&lt;p&gt;尽管不愿意，但其实我知道要将你们从相扣的链条上取下来握在自己手里，是不可能的事。我自己也在某根链条上，我自己也是扭曲的。（诶，看到了吧，轻松就可以说出一个『不可能』，然后找一个看似合理的借口。其实溯源到最根本的想法，是因为我自己也害怕破碎吧。）&lt;/p&gt;
&lt;p&gt;成长就是这个样的，发现勇敢正在耗尽，于是把自己保护起来，并用不伤害其他人的信条来作为这盔甲。大多数时候它是有效的，因此就可以认定它是可靠的。进一步说，自己去挖掘出那些潜在的使之无效的事情，也不是大多数人（聪明人）的做法吧。谁不希望自己的一生是享受着度过的呢。&lt;/p&gt;
&lt;p&gt;想念那道光芒，甚是想念。可它早已被吹散成了细丝，我愿意去收集，于是我是可笑的。&lt;/p&gt;
&lt;p&gt;于是，这些原因就这样放在这里了。后悔什么的根本不需要，只要还在流汗就能毫不怀疑地愉悦起来。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/IMG_8042.jpg&#34; alt=&#34;Doll&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>逼头：雪纳瑞·终章</title>
      <link>http://localhost:1313/posts/beetle-the-dog-final-chapter.html</link>
      <pubDate>Mon, 04 Feb 2013 22:20:29 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/beetle-the-dog-final-chapter.html</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;逼头，雪纳瑞。西历 2013 年 1 月 29 日。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;立春。倒春寒。天空一片铁黑，空气寒冷潮湿，距离昨天中午持续不到十分钟的一场大雨已经过去 13 个小时，永远烤不干的地面湿乎乎连成一片。寂静空旷的街道中央，确有细小的冰点飘来飘去，坐在轻骑上满脸都是小星星。这种尚未来得及形成雪花就掉落的冰点里，裹着各种工业尘埃，在接触到地面时形成一层薄薄的泥水。也是铁黑的。&lt;/p&gt;
&lt;p&gt;山坡上的几株翠竹此时也都默不做声地等待着鹅毛大雪，也许它们某一年会因为走错路而碰巧落下。也许是今年呢？&lt;/p&gt;
&lt;p&gt;竹丛生根的土里，谁会在意这种破破烂烂的地方？真的不用在意了。学不会的终究没学会，只知道过分的激动，兴奋起来就随地撒尿···真的不用再介意了。&lt;/p&gt;
&lt;h1 id=&#34;阳光城&#34;&gt;
  阳光城
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e9%98%b3%e5%85%89%e5%9f%8e&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;雨雪交加的南方是不存在暖气这一说的。就算冰天雪地也无法让人把回家和取暖直观地联系在一起。只是徒增一种想要逃离的感觉，即使是回家，也带着一幅逃难者的面容。&lt;/p&gt;
&lt;p&gt;反而，在那无表情的脸上是永远也读不出逃离的冲动的。他眼里只有一个人，他的存在也只为一个人，任何场所都没有特殊意义，就算对那个人来说是一个被称为家的地方，对他来说也无所谓，总之有他的地方就是家。&lt;/p&gt;
&lt;p&gt;泥泞的马路，嘈杂的十字路口，没有人见过这么不要命的奔跑者。世间的俗气规则保全了一个个呆滞的生命，然而没有谁能比他奔跑得更潇洒。&lt;/p&gt;
&lt;p&gt;就这样一直跑着，有时他也回头看看，如果那个人没有跟上，果断掉头往回跑！扑上去！汪！！&lt;/p&gt;
&lt;h1 id=&#34;紫禁城&#34;&gt;
  紫禁城
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e7%b4%ab%e7%a6%81%e5%9f%8e&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;不明就里的分离和黑暗，怎么看都像是一种惩罚。&lt;/p&gt;
&lt;p&gt;咬坏的只是被子的左边，就因为这个被罚关厕所。下次一定记得不能咬左边，那个人喜欢左边吧。咬中间应该没问题的！&lt;/p&gt;
&lt;p&gt;上次把尿撒到电视机里去了，就因为这个被罚少出门玩一次。下次一定记得那个人喜欢电视机。客厅的纱门和墙角应该没问题的！&lt;/p&gt;
&lt;p&gt;突然很想出门去找十三栋的那只小妞，但等了好久都没见她出来。那个人也许猜不出为什么就是蹲着却不拉粑粑。因为，会毁形象的！这是爱的便秘！要说，其实还真有那么一点点是故意耗着的。&lt;/p&gt;
&lt;p&gt;在万米高空中，他的思绪从头到尾地搜索了一遍记忆的书架，那些久远的过错是最让他后悔的事。总是轻率地开心，轻率地失意，轻率地表达，等到学会分辨，懂得了四方八面之情理，却发现，已经身处这万米高空了。披星戴月的旅程本身辛苦，但与那个人却仍然分隔好几个大气层，真的可以靠意志撑下去吗？&lt;/p&gt;
&lt;p&gt;「不管怎样，那个人一定只是惩罚我。虽然不知道是哪个错，更不知道应该如何改正，但我一定能见到那个人，多晚都可以，到时我只要用力舔他就好！」&lt;/p&gt;
&lt;h1 id=&#34;木桶镇&#34;&gt;
  木桶镇
  &lt;a class=&#34;heading-link&#34; href=&#34;#%e6%9c%a8%e6%a1%b6%e9%95%87&#34;&gt;
    &lt;i class=&#34;fa fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;
    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;
  &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;既要承受这个世界的矫情，又要坚持自己认准的那种单纯，最后，自己终究还是只能被自己接受。当得知时日无多，自己也仍然在努力坚持着。&lt;/p&gt;
&lt;p&gt;双眼已经睁不开，好困，梦境在慢慢变得实在和凝固。我踩着六月下午的青草地，愉快地一路小跑。他在不停呼唤我的名字。他在哪？他又是谁？他是我认识的那个人。他是谁？我不认识。我不认识。我不认识。&lt;/p&gt;
&lt;p&gt;锵！破碎的声音！&lt;/p&gt;
&lt;p&gt;双眼睁开了，亲爱的，原来是你！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>事件记录册『2012·12』</title>
      <link>http://localhost:1313/posts/events-2012-12.html</link>
      <pubDate>Sat, 29 Dec 2012 16:27:42 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/events-2012-12.html</guid>
      <description>&lt;p&gt;第一个学期风风火火的完结，『夏目友人帐』却完全没有下一季的消息。兴许是没了吧。都看到了父母的故居。真的不打算讲讲祖母的事情了吗？去年的这个时候，祖母仍然在痛苦之中。现在离开我们已经快一年了。这一年发生的事比过去的任何一年都要丰富曲折。最重要的是因为自己在学着看懂人与人的关系。是应该撇去一些偏见，承认自己并没有得到天赋的东西。&lt;/p&gt;
&lt;p&gt;粉末状的雪下了几场，距我遥远的仍旧距我遥远，一如既往，速度惊人。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;收了四排，出门一本书都不用带了&lt;/li&gt;
&lt;li&gt;在爷回家&lt;/li&gt;
&lt;li&gt;备考，但没什么头绪&lt;/li&gt;
&lt;li&gt;熊猫 49 级了，但直到回家之前大概都没法跟野比同刷了&lt;/li&gt;
&lt;li&gt;开始阅读『哈利·波特 7』小说（果然电影还是弱爆了）&lt;/li&gt;
&lt;li&gt;考试，准备论文，仍然没什么头绪&lt;/li&gt;
&lt;li&gt;和谦一君通过 Game Center 连线切水果，完败！wwwwww ·w·&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;于是念叨了半年的键盘，新年之后就你了吧！走一代的？&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>日常</title>
      <link>http://localhost:1313/posts/nichijou.html</link>
      <pubDate>Wed, 19 Dec 2012 14:56:12 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/nichijou.html</guid>
      <description>&lt;p&gt;确实，每天都是结束。&lt;/p&gt;
&lt;p&gt;除了身上的汗，刚才的东西还剩什么？&lt;/p&gt;
&lt;p&gt;每天都是开始。&lt;/p&gt;
&lt;p&gt;每次呼吸都逐渐让人平静，各种想念却重新涌上来。&lt;/p&gt;
&lt;p&gt;活着是无限个奇迹的拼合延续。&lt;/p&gt;
&lt;p&gt;就像后天好像会发生许多事，但没有一件实质上与世界末日有关。&lt;/p&gt;
&lt;p&gt;确实，最后一个话题表面上是个沉痛的话题。&lt;/p&gt;
&lt;p&gt;ーー 每一个活着的日子都是在为死亡做练习。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.xiami.com/song/1768990366&#34; title=&#34;翼をください&#34; target=&#34;_blank&#34;&gt;因此&lt;/a&gt;，没有人能够说出更能让我感到欣慰、舒坦的话了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/nichijou/nichijou.jpg&#34; alt=&#34;Nichijou&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>他怎么就叫东先生了</title>
      <link>http://localhost:1313/posts/who-the-hell-is-mr-chen.html</link>
      <pubDate>Mon, 10 Dec 2012 17:15:12 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/who-the-hell-is-mr-chen.html</guid>
      <description>&lt;p&gt;看在爷&lt;a href=&#34;http://cz.mogita.com/?p=47&#34; target=&#34;_blank&#34;&gt;开始传图&lt;/a&gt;，我也手痒痒了。&lt;/p&gt;
&lt;p&gt;在爷刚学使用单反，结果秒速上手。感觉受他影响，我涨了许多姿势。以他的想法，好片的多少只和时间的多少成正比。&lt;/p&gt;
&lt;p&gt;周末揣着老贾的镜头拍了几张在爷的头（tú）。他咋拍照和被拍都那么带感儿。&lt;/p&gt;
&lt;style&gt;
    .image-gallery {overflow: auto; margin-left: -1%!important;}
    .image-gallery li {float: left; display: block; margin: 0 0 1% 1%; width: 19%;}
    .image-gallery li a {font-size: 0.7em;text-align: center; text-decoration: none!important; color: #777;}
    .image-gallery li a span {display: block; text-overflow: ellipsis; overflow: hidden; white-space: nowrap; padding: 3px 0;}
    .image-gallery li a img {width: 100%; display: block;}
&lt;/style&gt;


&lt;ul class=&#34;image-gallery&#34;&gt;
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/mr-chen/IMG_7737.jpg&#34; title=&#34;IMG_7737&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/mr-chen/IMG_7737_hu78f8d0520a1ec61a892deab85740b3e7_275119_300x300_fill_q50_box_smart1.jpg&#34; alt=&#34;IMG_7737&#34; title=&#34;IMG_7737&#34;&gt;
        &lt;span&gt;IMG_7737&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/mr-chen/IMG_7756.jpg&#34; title=&#34;IMG_7756&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/mr-chen/IMG_7756_hu78f8d0520a1ec61a892deab85740b3e7_186407_300x300_fill_q50_box_smart1.jpg&#34; alt=&#34;IMG_7756&#34; title=&#34;IMG_7756&#34;&gt;
        &lt;span&gt;IMG_7756&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/mr-chen/IMG_7769.jpg&#34; title=&#34;IMG_7769&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/mr-chen/IMG_7769_hu78f8d0520a1ec61a892deab85740b3e7_255557_300x300_fill_q50_box_smart1.jpg&#34; alt=&#34;IMG_7769&#34; title=&#34;IMG_7769&#34;&gt;
        &lt;span&gt;IMG_7769&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/mr-chen/IMG_7776.jpg&#34; title=&#34;IMG_7776&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/mr-chen/IMG_7776_hu78f8d0520a1ec61a892deab85740b3e7_283576_300x300_fill_q50_box_smart1.jpg&#34; alt=&#34;IMG_7776&#34; title=&#34;IMG_7776&#34;&gt;
        &lt;span&gt;IMG_7776&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/mr-chen/IMG_7777.jpg&#34; title=&#34;IMG_7777&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/mr-chen/IMG_7777_hu78f8d0520a1ec61a892deab85740b3e7_292556_300x300_fill_q50_box_smart1.jpg&#34; alt=&#34;IMG_7777&#34; title=&#34;IMG_7777&#34;&gt;
        &lt;span&gt;IMG_7777&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/mr-chen/IMG_7806.jpg&#34; title=&#34;IMG_7806&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/mr-chen/IMG_7806_hu78f8d0520a1ec61a892deab85740b3e7_182471_300x300_fill_q50_box_smart1.jpg&#34; alt=&#34;IMG_7806&#34; title=&#34;IMG_7806&#34;&gt;
        &lt;span&gt;IMG_7806&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/mr-chen/IMG_7813.jpg&#34; title=&#34;IMG_7813&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/mr-chen/IMG_7813_hu78f8d0520a1ec61a892deab85740b3e7_85325_300x300_fill_q50_box_smart1.jpg&#34; alt=&#34;IMG_7813&#34; title=&#34;IMG_7813&#34;&gt;
        &lt;span&gt;IMG_7813&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  

&lt;/ul&gt;

</description>
    </item>
    
    <item>
      <title>事件记录册『2012·11』</title>
      <link>http://localhost:1313/posts/events-2012-11.html</link>
      <pubDate>Thu, 29 Nov 2012 17:59:24 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/events-2012-11.html</guid>
      <description>&lt;p&gt;影像部越玩越带感是怎么回事。技术和心态不可得兼，除非混影像部。老贾威风凛凛地打开尘封多年的书柜给我们挑书时的感觉，像是一次集体抓阄：有挑电影摄影的，有挑大师图集的，有挑裸女技巧的，我毫无意外地撸了一本纽摄。说话以授业这件事，西方人有绝对优势。&lt;/p&gt;
&lt;p&gt;本月重大事件无。记录如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;关于十八大的检查，宿舍驱赶了我的猫。&lt;/li&gt;
&lt;li&gt;租房，养猫。&lt;/li&gt;
&lt;li&gt;在爷来准备 N1。&lt;/li&gt;
&lt;li&gt;第一次用 Keynote 作课堂讲演。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;四排降到底价了。再等也没啥意义了吧。走一代？&lt;/p&gt;
&lt;p&gt;然后，矫情一下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/events/IMG_6050.jpg&#34; alt=&#34;Photo of winter leaves&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>事件记录册『2012·10』</title>
      <link>http://localhost:1313/posts/events-2012-10.html</link>
      <pubDate>Sun, 28 Oct 2012 17:45:28 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/events-2012-10.html</guid>
      <description>&lt;p&gt;恩，十月份果然忘记写了，其实每一天都想着呢，结果最后一天时忘记了。所以我总是攒得一笔经验，留下一笔失败。&lt;/p&gt;
&lt;p&gt;本月未发生重大事件。过程如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;终于把新相机玩到了可以拍出手机照片的水平。&lt;/li&gt;
&lt;li&gt;开班，教鼓。&lt;/li&gt;
&lt;li&gt;发现黑莓是有办法在大陆上推的。&lt;/li&gt;
&lt;li&gt;去了趟医院，一千交出。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关于咪子，他很健康。&lt;/p&gt;
&lt;p&gt;新设备看似遥遥无期啊。还不完的信用卡啊。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>把你送到没有路的地方</title>
      <link>http://localhost:1313/posts/till-the-start-of-your-path.html</link>
      <pubDate>Sat, 20 Oct 2012 09:22:36 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/till-the-start-of-your-path.html</guid>
      <description>&lt;p&gt;说这句话之前他大概构思过，经过了说的那一点，就变成了我的好一阵回味。&lt;/p&gt;
&lt;p&gt;直到车子飞驰起来之前，我都不敢相信自己坐在最喜欢的印着米字旗的小绵羊上。十三瘦小的身躯挡在我前边，夜里十二点的寒风只能吹到我的腿上。光是这样，我说话都有些打颤了。十三问我冷不冷，我说你冷不冷。慢点吧，20 多就可以了。刚才大路上你一把开到 40，小风有点过带感了。&lt;/p&gt;
&lt;p&gt;我问他这车是胖子的？他说是胖子花一千多在车行的朋友手里买的。那朋友进了一批货，这辆是一台样品，但其实和普通出售的车一样是完好的。&lt;/p&gt;
&lt;p&gt;我喵了一眼时速表，目前车速 20 多，加上迎面刮来的冷风自身的速度，我们的脸上、胳膊、大腿得到了速度 40 以上的风。&lt;/p&gt;
&lt;p&gt;十三已经冻得有点说不出话了，于是又放缓车速，平整了一下呼吸，依然略微颤抖地问我到我的住处还有多远。我说你送到学校北门就可以了，马路中间有隔离带，你的车过不去。十三没说话，不知是冻的还是没在意我说的话，继续紧紧握着油门，带我沿着惨灰惨灰的人行道边前行。&lt;/p&gt;
&lt;p&gt;市郊的人行道极其破败，松散的地砖缝里随处可以见到枯黄的杂草，搭配上街边松垮零落、成排的铺面小楼和路边那几根似乎永远也长不出叶子和枝丫的树苗，使得整条马路根本没法让任何人提起兴趣。流浪汉甚至都无法找到一个舒适的角度安睡。&lt;/p&gt;
&lt;p&gt;在马路中间建有一条快速公交线路，如果是在白天，涂着黄色块的天然气大巴车会把这边的人带到城市最繁华的地带，没记错的话，它的终点站那一带有许多森严的官府。我很少去那边。诚实点说，我很少出门。&lt;/p&gt;
&lt;p&gt;此时是夜间，别说快速公交早已收班，就连私家车也见不到一辆。&lt;/p&gt;
&lt;p&gt;十三和我都没有说话。他一心要把我送到目的地。&lt;/p&gt;
&lt;p&gt;我一心在欣赏车子的仪表盘。&lt;/p&gt;
&lt;p&gt;学校北门的路上，其实有一个让车辆掉头的开口，我没提它（当时确是没想起来）。到那里的时候，十三放慢车速，问我是不是这里？我说对我可以过去了。十三问在学校的哪边？我不想让他再送，说上次你去过的那个方向，但是车子在那边没法掉头，你别去了。&lt;/p&gt;
&lt;p&gt;我希望他早点返回，并想要下车。&lt;/p&gt;
&lt;p&gt;十三突然一拧油门，加速穿过马路中间的那个开口，开到马路对面的路当中。&lt;/p&gt;
&lt;p&gt;他问我们现在是在逆行吗？&lt;/p&gt;
&lt;p&gt;有辆轿车正在缓缓驶出学校大门，十三闪过那辆轿车，来到了校园里的主路上。&lt;/p&gt;
&lt;p&gt;夜间的北二外对我来说并不少见，因为各种原因，24 个小时里任何一个小时的校园我都见到过。夜间的景象其实很大同小异：雪白的路灯把地面照得平白无奇；树木下边偶尔有绿色的射灯向上照明，把墨绿的树叶换成了鬼斧神工的荧光翠绿色；偶尔经过一群亚裔留学生，多是韩国人，他们喜欢夜里穿着短裤和棉服出去通宵。&lt;/p&gt;
&lt;p&gt;十三问前面岔路左拐还是右拐？我说诱拐。于是十三右拐了。在一个停车场前边，只能朝左拐。&lt;br&gt;
校园里的马路上有数不尽的减速带，十三总是小心翼翼地从右边的空隙穿过，不让车子受到颠簸。话说，他绕减速带的技艺相当到位。&lt;/p&gt;
&lt;p&gt;又到了一个路口，十三问直走还是右拐？我说诱拐再左拐。于是他又右拐，然后在第一个路口左拐，笔直超前开着。&lt;/p&gt;
&lt;p&gt;坐在前座的想法是，天这么冷，骑摩托车比开汽车苦逼多了。后座表示认同。我说到南门你就别再走了，因为返回时肯定会逆行，太不安全了。&lt;/p&gt;
&lt;p&gt;十三问可以走到你宿舍楼下吗？我说走不到，因为你没法过街了。&lt;/p&gt;
&lt;p&gt;十三说那我送你到没有路的地方。&lt;/p&gt;
&lt;p&gt;他把车骑到了人行道上，轧着松散的咔哒响的地砖，一直把我送到天桥下边。&lt;/p&gt;
&lt;p&gt;我很感谢他，他也很感谢我。&lt;/p&gt;
&lt;p&gt;气温实际上已经低得令人发指，两条腿经过路上这么一吹已经有点挪不动了。于是站着又聊了几句。&lt;/p&gt;
&lt;p&gt;十三第二天一早就要出发去扬州，下周才能回来。这两个星期会让他忙到不可开交。目前他的设备还没凑齐，希望下周能按计划拿到全部装备完美上阵。我是铁了心要一遍过。十三说你必须得一遍过呀。我连忙说你放心！&lt;/p&gt;
&lt;p&gt;天桥上冷风更刺激，毫无阻拦地刷过空荡的京城城郊的这条主路。想着之前十三的交代，对我的希望，觉得自己能为他做的恐怕只有这些。先前他对着电脑修改鼓点时，眼神已经有些涣散了，鼠标往往停留很久才会写一笔。最近这半个月大概他的脑子里一定都没有丝毫放松过，以至于脑海里过度膨胀的内容都盖过了视线。这样的辛苦一定能换来好的结果的。&lt;/p&gt;
&lt;p&gt;除此之外的事情，不知道他会期待哪些，毕竟说到底，这张专辑的主要构成，都形成于对同一个人的期待吧。他是否像我一样也牵挂着什么，我不知道，也不善于了解这样的事。但有件事是肯定的，他会尽全力死磕这张碟，后面的事说不定他也还来不及想。总之一遍过就是一遍过，没得商量。&lt;/p&gt;
&lt;p&gt;在相处的现场，他还真是个不太容易了解的人。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>事件记录册『2012·09』</title>
      <link>http://localhost:1313/posts/events-2012-09.html</link>
      <pubDate>Fri, 28 Sep 2012 15:23:21 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/events-2012-09.html</guid>
      <description>&lt;p&gt;标题的感觉是，这家伙要上图了。而打算开始这样的记录系列的原因正是，这家伙有相机了。&lt;/p&gt;
&lt;p&gt;本月未发生重大事件。过程如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开始研究生的三年计时。&lt;/li&gt;
&lt;li&gt;加入影像部，向老贾和本科的前辈学习。&lt;/li&gt;
&lt;li&gt;继续阅读《失控》。&lt;/li&gt;
&lt;li&gt;入手一套相机。&lt;/li&gt;
&lt;li&gt;领养一只白色的咪子。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今天（睡前时间）是在爷生日，不能和他庆祝这个具有整数感的生日十分遗憾。他也记了一份&lt;a href=&#34;http://cz.mogita.com/?p=34&#34; target=&#34;_blank&#34;&gt;流水账&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;无论你是谁，中秋快乐。&lt;/p&gt;
&lt;p&gt;明年此时，我想我应该就会有 300mm 的炮管了。届时再上月圆图好了。以上。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>马上就会变得年轻了</title>
      <link>http://localhost:1313/posts/cannot-be-what-im-like-now.html</link>
      <pubDate>Thu, 20 Sep 2012 19:27:37 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/cannot-be-what-im-like-now.html</guid>
      <description>&lt;p&gt;一打开，一版乱糟糟的文字，一点也不含蓄。这个域名里装着的果然不是什么佳酿哟。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、边界&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;提笔忘字啊，那是写字的渴望冲破纸面的前夕一瞬，精神为之一振！&lt;br&gt;
不过双手放在键盘上，精神却在身后蹦蹦跳跳，眼睛都不知道是该看屏幕还是后脑勺的好。&lt;br&gt;
半夜，楼下篮球场亮着白昼般的灯，不断传来拍球声和男男女女的呼喊、议论声。&lt;br&gt;
半夜，关掉了台灯，屋里只有显示器在发光。和新同学发出的鼾声。他明天会去补牙。&lt;/p&gt;
&lt;p&gt;看着不断更新的页码，觉得胜利在望，欣喜的感觉也越来越明显。&lt;br&gt;
于是就停在了刚才那第二句话上面。&lt;/p&gt;
&lt;p&gt;一方面是我的质地，另一方面是我的形存。&lt;br&gt;
前者经济，可以让我有用。后者神秘，如果不再被需要，即可等于不再形存。&lt;br&gt;
我多想为后者而活。可是它太稀薄，而且不知道明天它会变得更稀薄，还是仍然如此稀薄。如果变得更稀薄，说明至少曾经有过一点点厚重感吧。&lt;br&gt;
可惜我不在场地里面，我在寻找着自己的质地可用于何处，苟且作为自己继续乐观的理由。&lt;/p&gt;
&lt;p&gt;『刺猬，你给我老实呆在边界！』他们迫不得已地这样在心里说着。&lt;br&gt;
『好。』于是。&lt;/p&gt;
&lt;p&gt;2012.09.18&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、论点&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;世间也没有什么非吃不可的东西，亦没有非爱不可的概念。&lt;br&gt;
别人说，对一个事物做出判断时，无论肯定还是否定，人都已经不是自由的了。&lt;br&gt;
事物的存在改变了他。无论他选择继续探索前行还是从此死守寸土。&lt;br&gt;
什么选择并不重要，问题的关键是『选择』已经成为了存在，而且注定是『事物』的附属品。&lt;/p&gt;
&lt;p&gt;说到命运天意时，最合适的参考也就是它了吧。&lt;/p&gt;
&lt;p&gt;哪一次离站都不会再无牵挂了，地球很大，真的比心大好多。&lt;/p&gt;
&lt;p&gt;2012.09.20&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、饕餮&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;比如这样一罪，足以让我获刑。&lt;br&gt;
那么单纯的动物欲望之上的有意识的罪行呢？会让我怎样？还有比刑罚更高的惩罚吗？&lt;/p&gt;
&lt;p&gt;事实上，不是每个人都会试图做一个社会意义上的好人，而我自认为自己是积极的那一方。&lt;br&gt;
我希望每个人都有富足的思想，充裕的精力，和坦诚的欲望。&lt;br&gt;
但也会『誓死捍卫』谁选择堕落的权利。至少选择的权利本身是必须去捍卫的。&lt;br&gt;
于是出现这么浅显的矛盾，还有必要继续思考吗？&lt;/p&gt;
&lt;p&gt;必须承认，我认为『选择』是自由的象征，所以追其始源，我希望每个人在心灵上都是自由的。&lt;br&gt;
很可惜，有人必须为此牺牲，矛盾的解决必须通过一方原本的存在消失为前提。&lt;br&gt;
这样也就等于在为群体积极考虑的同时，也藐视着个体的存在。&lt;/p&gt;
&lt;p&gt;这样一个内心充满了残暴，根本不懂得怎样对个体带去体贴的人就是现在的我。&lt;/p&gt;
&lt;p&gt;比刑罚更严厉的惩罚，就是我依然活着。&lt;/p&gt;
&lt;p&gt;2012.09.21&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4、经济&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;逻辑和修辞，就是人类智慧的全部内容。&lt;br&gt;
七情六欲，就是人类生物性的全部内容。&lt;br&gt;
而生物性的方面不可能不受智慧的点金作用，于是也显得比其他生物的情欲更有规则一点。&lt;br&gt;
智慧方面，无论有多少种理解态度，或者多少种操作方法，都源于最根本的那个因子：精确控制。&lt;/p&gt;
&lt;p&gt;情欲里的智慧，和智慧里的情欲一样，都是肮脏的东西。&lt;br&gt;
只有两者分开才会保持纯净。&lt;br&gt;
当我看到精确思考后表达的情感，和在试图精确把握事物的根本时掺入的情绪因素，都会开始厌恶。&lt;/p&gt;
&lt;p&gt;这就是对我的审判辞。&lt;/p&gt;
&lt;p&gt;有一味药也许可以缓解厌恶，那就是彻底脏掉。&lt;br&gt;
人人都会吃而且天天吃着的药，谁要去吃。&lt;/p&gt;
&lt;p&gt;我的办法，会在死去的那天清楚地展开在眼前的。此生一定不会错过。&lt;/p&gt;
&lt;p&gt;2012.09.21&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>多梦的睡眠</title>
      <link>http://localhost:1313/posts/bottles-of-dreams.html</link>
      <pubDate>Fri, 07 Sep 2012 17:31:12 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/bottles-of-dreams.html</guid>
      <description>&lt;p&gt;从昨天到今天，就像从江的北岸到南岸，不知为什么，就是过来了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、可知&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可知和可确定是两件不同的事情，我时而会分不清它们的界线。可知是一种引诱，无论旅途是长还是短，坎坷还是平滑，它总在那里等着我开启。可确定则让我生疑，因为就算开启了可知，它真的就是我想要的吗？&lt;br&gt;
这个角度的我，是在被牵引到一个答案上。&lt;br&gt;
可知关于真假，可确定关于勇气。&lt;br&gt;
我是多么缺乏勇气啊。&lt;/p&gt;
&lt;p&gt;我已经忘掉了求知的原因。也许是有过一种通过知晓世间之理而让自己对某些问题感到更加确定的渴望吧。现在顿觉可笑。&lt;br&gt;
了解地越丰富，我便越孤独。&lt;br&gt;
知识给人的安全感是不真实的吧。&lt;br&gt;
比如，我不再相信鬼魂，心灵中本该令他们存在的位置被打扫一空，洁白干燥的空间里，孤寂的要死。&lt;br&gt;
我闭上了能够看到朋友心灵的眼睛，我的朋友们，请尽情怪罪于我，这样能让我变得更加清醒一点。&lt;/p&gt;
&lt;p&gt;存在的前因和后果是循环着的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果在最初，有人能够清晰准确地告诉我，理对我而言算作什么，对我于其他人来说又该扮作什么角色，世界应该会多一个快乐的人，而不是多出一个情绪的空洞。&lt;br&gt;
它不是饭食，多了不撑，少了不会死。它也不是钱财，多了不能换取同情，少了不会遭致白眼。&lt;br&gt;
它只是宁静的沙漏，只不过它的流动不以时间为条件，而是根据欲望来流动。宁静的欲望，一种人比兽多出来的欲望。静欲。&lt;br&gt;
而且，沙子不会增加也不会减少的，所有的挣扎，都会在轻松的一个翻转间归零，一切都将化为初始。&lt;/p&gt;
&lt;p&gt;我在继续追寻它。诚实地说，是真的，我在追寻它。&lt;br&gt;
但进一步的诚实可能会让我感到不适：我只是因为曾经碰触到过关于它的一星半点，从而出于虚荣想要更多。并非我需要它、想要它，而是我猜想别人会喜欢看到我拥有更多它。&lt;br&gt;
这种无奈的低头微笑，就好像上一辈人的职业生涯，同样是经历，同样是人生成就，只是自己在哪里，他们并不愿朝这边多想。诚实就像黑夜一样让人生畏，人最害怕的莫过于一道白光照亮对面站着的自己，每丝皱纹都看得一清二楚，所有疲惫和劣习都尽收眼底，看到自己这个样子，欲哭无泪。&lt;/p&gt;
&lt;p&gt;为了来之不易的愉悦，一直闭着眼走下去么？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、烟草&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我怀疑烟草里的激情和麻痹。然而它穿透喉咙的一瞬，确实产生了一种积极的情绪。所以，我不想再啰嗦关于它的好坏。和所有存在一样，它的存在是好还是坏，取决于看待它的心灵是正面还是负面。&lt;/p&gt;
&lt;p&gt;我对它的嘲笑更是讽刺呢。看看我每夜睡前都感到的不安和恐慌吧，原来我自己才是中毒至深，在泥泞中流亡的魂魄。&lt;/p&gt;
&lt;p&gt;那真是讽刺啊。没有缘由的讽刺。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4、睡眠&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;梦境是个安全的港湾，但只在它没被任何人发现的时候。比如，一张被子，撑起的是一辈子里最温柔的天地。&lt;br&gt;
爱也好，不解也好，麻烦的问题也好，都被挡在被子之外。唯一让我感到尴尬的只是一点点消逝的氧气，这可真是驳斥自给自足观点的最强音呢。&lt;br&gt;
这竟也成为让我多梦的原因了。&lt;br&gt;
对生的贪恋使我不敢就此睡去，怕再也爬不出这片小天地。尽管这里有着深深吸引我的风、温暖、细碎的凹凸感、回忆里轻柔无味的气息、冰凉的波浪，我不敢就此睡去。我爱它，它却感受不到我的向往，于是风停了，气温凉了，沙粒凝结成块，只是平静地面容，不再有甚至一点细浪。&lt;/p&gt;
&lt;p&gt;困倦袭来，不得不睡了。梦里有什么，似乎也不再重要了。还是我的小天地吗？大概有完全不到二万分之一左右的可能性吧。一生只一次前往的机会呢，算算看，是不是差不多二万左右？&lt;br&gt;
如果不是，难道就不睡了？&lt;/p&gt;
&lt;p&gt;是的，我会一直醒着，不敢再睡去。否则，才是对我的扭曲呢。心里的世界，我会好好照料它，保持第一次看到它的神情。&lt;br&gt;
是的，它将刮起风暴，冷热无常，锋利而坚硬，每次呼吸都污浊不堪，水草丛生满是泡沫的水体，有什么关系呢？无论何时，如果幸运的话，它的召唤便会令我毫不迟疑地死死睡去。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5、启示&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;世界的终极答案在哪里？在于我的消失。&lt;br&gt;
我的存在带来的问题，将随着我的消失而得到解决。&lt;/p&gt;
&lt;p&gt;如果我生来是一台无生命的机器，我希望被灌注你的生命。&lt;br&gt;
可惜，你们都不这么认为吧。&lt;br&gt;
因为太欣赏你们了，便欣喜地唱起不成调的曲子来。躺在你们组成的音符、段落里飘动，听着你们高声的嘶喊和轻声的叙述，终于找到了最美的东西。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>把童年插到电视机上（雅达利游戏）</title>
      <link>http://localhost:1313/posts/childhood-jacked-in-to-the-tv.html</link>
      <pubDate>Fri, 01 Jun 2012 09:44:38 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/childhood-jacked-in-to-the-tv.html</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/atari/atari-2600.jpg&#34; alt=&#34;Atari 2600&#34;&gt;&lt;/p&gt;
&lt;p&gt;撸了一遍今天的 RSS，其中有一条是&lt;a href=&#34;https://9to5mac.com/2012/05/31/atari-founder-on-steve-jobs/&#34; target=&#34;_blank&#34;&gt;雅达利创始人说&lt;/a&gt;一部分苹果文化源于雅达利公司（乔布斯的第一份工作就是在雅达利做设计师）。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E9%9B%85%E9%81%94%E5%88%A9&#34; target=&#34;_blank&#34;&gt;雅达利&lt;/a&gt;的诞生比我早 15 年，它的家用机里最经典的当属 Atari 2600（&lt;a href=&#34;https://v.youku.com/v_show/id_XNjY4NzY0MDg=.html&#34; target=&#34;_blank&#34;&gt;视频广告&lt;/a&gt;，&lt;a href=&#34;https://www.youtube.com/watch?v=wuS58CXOWAI&#34; target=&#34;_blank&#34;&gt;简单评测&lt;/a&gt;）。我当然没有福气使用这款风靡全球的游戏机，不过确实玩过雅达利的游戏。原因是老爹曾买了一台雅达利 2600 的山寨机：&lt;strong&gt;皇冠游戏机&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;现在网上根本都找不到皇冠游戏机的图片了。不过山寨机再山寨还是跟它的原型差不离的，墨绿塑料壳机身，长二十来公分，宽十来公分，厚度不到十公分，单插卡槽，支持双手柄，可以调节游戏难度，电视机彩色或黑白模式，通过射频线接驳电视机。我记得每次开始玩游戏之前都需要疯狂地搜索信号，老电视有时能记住预选，但经常会消失，必须重新搜索所有信号。其实最高兴的时刻是画面上的雪花消失并出现一个彩色的画面的时候。&lt;/p&gt;
&lt;p&gt;和机器一起买回来的游戏共有 6 盒卡带，好几个卡带的印刷塑料封面已经没了，换成了老爹自己剪裁、填写游戏名称的纸质封面。我觉得那几盒卡带最神奇的设计就是卡带上有个开关（其中一盒甚至有两个开关！），拨到左边可以玩一款游戏，拨到右边就可以玩另一款游戏，都是二合一卡带，非常「划算」，而那盒两个开关的卡带自然就是四合一「超值装」。&lt;/p&gt;
&lt;p&gt;有些卡带已经读不出来了，包括我最喜欢的《&lt;a href=&#34;https://en.wikipedia.org/wiki/Outlaw_(video_game)#Atari_2600_Port&#34; target=&#34;_blank&#34;&gt;枪战&lt;/a&gt;》。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/atari/outlaw.png&#34; alt=&#34;Outlaw, an Atari game&#34;&gt;&lt;/p&gt;
&lt;p&gt;这是我玩过的唯一一款双人游戏，中间的障碍物包括仙人掌、会上下跑的马车等，拆完障碍物之后就是两边小人火拼了。老爹没怎么陪我玩过小霸王游戏，不过跟他对战过《枪战》可是记地真真儿的。&lt;/p&gt;
&lt;p&gt;其次就是无比经典的《&lt;a href=&#34;https://en.wikipedia.org/wiki/Keystone_Kapers&#34; target=&#34;_blank&#34;&gt;警察抓小偷&lt;/a&gt;》，&lt;a href=&#34;https://zh.wikipedia.org/wiki/%E7%BE%8E%E5%9B%BD%E5%8A%A8%E8%A7%86&#34; target=&#34;_blank&#34;&gt;Activision&lt;/a&gt; 出品。如今这个公司的名字已经如雷贯耳了。&lt;a href=&#34;https://www.youtube.com/watch?v=OYDgrXxIkJY&#34; target=&#34;_blank&#34;&gt;游戏视频&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/atari/keystone-kapers.jpg&#34; alt=&#34;Keystone Kapers, an Atari game&#34;&gt;&lt;/p&gt;
&lt;p&gt;这款游戏曾让我一下午没挪窝。不过主要原因是死得勤，后边的关卡都没怎么见过（摊手）。玩家控制警察，可以左右跑、跳跃躲开电网、下蹲躲过飞机、进电梯下电梯，最后捉到一直躲避警察的小偷。可能喜欢它的原因大部分还是受到精致画面的影响，它连字体都是设计过的，而不像其他几款游戏里面那样毫无粗细变化的字体。&lt;/p&gt;
&lt;p&gt;然后还有《&lt;a href=&#34;https://en.wikipedia.org/wiki/Spider-Man_(Atari_2600_video_game)&#34; target=&#34;_blank&#34;&gt;高楼盗宝&lt;/a&gt;》（其实应该叫蜘蛛侠）。这也算是个可玩性很强的动作类游戏了。&lt;a href=&#34;https://www.youtube.com/watch?v=hZzGaFiyezY&#34; target=&#34;_blank&#34;&gt;游戏视频&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/atari/spider-man.jpg&#34; alt=&#34;Spider Man, an Atari game&#34;&gt;&lt;/p&gt;
&lt;p&gt;另一枚精致的游戏《&lt;a href=&#34;https://en.wikipedia.org/wiki/Plaque_Attack&#34; target=&#34;_blank&#34;&gt;挤牙膏&lt;/a&gt;》，不得不说美工真是太让人舒畅了。&lt;a href=&#34;https://www.youtube.com/watch?v=LsAY4JgVCRM&#34; target=&#34;_blank&#34;&gt;游戏视频&lt;/a&gt;（有重口图 2 秒）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/atari/plaque-attack.jpg&#34; alt=&#34;Plaque Attack, an Atari game&#34;&gt;&lt;/p&gt;
&lt;p&gt;看起来简单，保卫 8 颗牙，朝着不断涌入的食物射牙膏，不让它们碰到牙齿。不过到后面食物行进的路线越来越诡异，速度也越来越快，一处失守满口遭殃。哪怕最后只剩一颗牙了也没法偷懒，如果只朝这颗牙射牙膏，食物会非常突然而精准地落到牙膏碰不到的地方，干掉最后一颗牙。&lt;/p&gt;
&lt;p&gt;还有一款叫做《&lt;a href=&#34;https://en.wikipedia.org/wiki/River_Raid&#34; target=&#34;_blank&#34;&gt;开飞机&lt;/a&gt;》（本名 River Raid，好吧这些中文名都是听老爹叫的，我也一直这样叫）。游戏性和画面都很赞。&lt;a href=&#34;https://www.youtube.com/watch?v=pmPjsBDN9Xw&#34; target=&#34;_blank&#34;&gt;游戏视频&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/atari/river-raid.jpg&#34; alt=&#34;River Raid, an Atari game&#34;&gt;&lt;/p&gt;
&lt;p&gt;玩法和现代的竖版飞机几乎一样，飞机向上飞，可以控制快慢，路上有会移动的敌人，不能碰到，还有加油站，飞机油耗非常快，随时需要补充燃料。也不能碰到绿边，一碰就挂。&lt;/p&gt;
&lt;p&gt;最后非常喜欢的一款《&lt;a href=&#34;https://en.wikipedia.org/wiki/Seaquest_(video_game)&#34; target=&#34;_blank&#34;&gt;海底救人&lt;/a&gt;》。&lt;a href=&#34;https://www.youtube.com/watch?v=A9GNDwad27E&#34; target=&#34;_blank&#34;&gt;游戏视频&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://localhost:1313/img/atari/seaquest.jpg&#34; alt=&#34;Seaquest, an Atari game&#34;&gt;&lt;/p&gt;
&lt;p&gt;开着黄色潜水艇，向各种危险的鱼类发射子弹（并躲避鲨鱼发射的子弹 -，-），同时救下在水里逃命的人。氧气耗尽之前需要返回海面补充氧气，但每次上浮会消耗一个营救上来的人，所以如果一个人都还没有救到，浮上去是会屎的。&lt;/p&gt;
&lt;p&gt;其他游戏我都叫不上名字，也查不到了。比如某款赛车、一个被老爹叫做《鸡毛信》的动作游戏等。&lt;/p&gt;
&lt;p&gt;那么，该去吃六一的晚餐了。祝是不是儿童的儿童、生没生儿童的非儿童都儿童节快乐。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>instaFan：将 Instagram 照片同步到饭否</title>
      <link>http://localhost:1313/posts/instafan-getting-started.html</link>
      <pubDate>Sun, 29 Apr 2012 08:27:31 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/instafan-getting-started.html</guid>
      <description>&lt;p&gt;2020 年 6 月更新：Fanstafou 服务已下线，感谢 1000 多位小伙伴多年的关照！与 instaFan 有关的重要饭否消息贴在了本文结尾处，留作纪念。&lt;/p&gt;
&lt;p&gt;2016 年 5 月更新：instaFan 服务已更名为 Fanstafou。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&#34;https://instafan.mogita.com/&#34; target=&#34;_blank&#34;&gt;instaFan&lt;/a&gt; 是一枚同步服务，可以将你的 Instagram 新照片自动同步到饭否。同步内容包括：照片以及该照片的描述文字、标签、照片展示页面地址、地理位置信息。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;特色&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OAuth 认证，确保信息安全&lt;/li&gt;
&lt;li&gt;包含若干种同步模式随时可更改，如全部同步、只同步指定照片、暂停同步等&lt;/li&gt;
&lt;li&gt;自动将 Instagram 照片的标签转换成饭否格式（双“#”号）&lt;/li&gt;
&lt;li&gt;与 Instagram 内置的分享样式保持一致（如照片地址、默认标题等）&lt;/li&gt;
&lt;li&gt;支持新增的饭否地理位置显示功能&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：同步服务仅对新发布的照片有效，旧照片不会被同步。所以，如果你选择了“只同步有 #fanfou 标签的照片”时，在照片评论里添加 #fanfou 标签是不会同步的，只有在发布时添加此标签才有效。&lt;/p&gt;
&lt;p&gt;欢迎在评论中留下你的使用感受和建议。我的 Instagram 用户名是 mogita，一起玩吧！！&lt;/p&gt;
&lt;hr&gt;
&lt;style&gt;
  .quote-fanfou {
    font-family: HelveticaNeue, Helvetica Neue, Helvetica, Arial, sans-serif;
    font-style: normal;
    display: flex;
  }
  .quote-fanfou .avatar {
    margin-right: 8px;
  }
  .quote-fanfou .avatar img {
    height: 48px;
    width: 48px;
  }
  .quote-fanfou .content {
    max-width: 360px;
    flex-grow: 1;
    font-size: 14px;
    line-height: 20px;
  }
  .quote-fanfou .message {
    word-break: break-all;
  }
  .quote-fanfou .meta {
    margin-top: 4px;
  }
  .quote-fanfou .meta, .quote-fanfou .meta a {
    color: #999999;
    font-size: 12px;
  }
  .quote-fanfou .attachment {
    margin-left: 8px;
  }
  .quote-fanfou .attachment img {
    height: 106px;
    width: 106px;
    padding: 2px;
    border: 1px solid #cccccc;
  }
&lt;/style&gt;












&lt;blockquote class=&#34;quote-fanfou&#34;&gt;
  &lt;div class=&#34;avatar&#34;&gt;&lt;img src=&#34;http://localhost:1313/img/fanfou/mogita/avatar.jpg&#34; alt=&#34;mogita&#34; /&gt;&lt;/div&gt;
  &lt;div class=&#34;content&#34;&gt;
    &lt;span class=&#34;username&#34;&gt;&lt;a href=&#34;https://fanfou.com/mogita&#34; target=&#34;_blank&#34;&gt;mogita&lt;/a&gt;&lt;/span&gt;
    &lt;span class=&#34;message&#34;&gt;It is working&amp;hellip;#&lt;a href=&#34;https://fanfou.com/q/instaFan&#34;&gt;instaFan&lt;/a&gt;# &lt;a href=&#34;http://instagr.am/p/Jk6tyauYkv/&#34;&gt;http://instagr.am/p/Jk6tyauYkv/&lt;/a&gt;&lt;/span&gt;
    &lt;div class=&#34;meta&#34;&gt;
      &lt;a href=&#34;https://fanfou.com/statuses/Kt5hSYFrifM&#34;&gt;2012-04-19 05:55&lt;/a&gt; 通过 &lt;a href=&#34;http://fanstafou.mogita.com/&#34;&gt;FanstaFou&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&#34;attachment&#34;&gt;
    
    &lt;a href=&#34;http://localhost:1313/img/fanfou/mogita/zs_151459.jpg&#34; title=&#34;It is working...#[instaFan](https://fanfou.com/q/instaFan)# http://instagr.am/p/Jk6tyauYkv/&#34; target=&#34;_blank&#34;&gt;
      &lt;img src=&#34;http://localhost:1313/img/fanfou/mogita/zs_151459_hua4540c8f294600c88afac205123d1c06_49929_106x106_fill_q90_box_smart1.jpg&#34; alt=&#34;It is working...#[instaFan](https://fanfou.com/q/instaFan)# http://instagr.am/p/Jk6tyauYkv/&#34; title=&#34;It is working...#[instaFan](https://fanfou.com/q/instaFan)# http://instagr.am/p/Jk6tyauYkv/&#34; /&gt;
    &lt;/a&gt;
    
  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;style&gt;
  .quote-fanfou {
    font-family: HelveticaNeue, Helvetica Neue, Helvetica, Arial, sans-serif;
    font-style: normal;
    display: flex;
  }
  .quote-fanfou .avatar {
    margin-right: 8px;
  }
  .quote-fanfou .avatar img {
    height: 48px;
    width: 48px;
  }
  .quote-fanfou .content {
    max-width: 360px;
    flex-grow: 1;
    font-size: 14px;
    line-height: 20px;
  }
  .quote-fanfou .message {
    word-break: break-all;
  }
  .quote-fanfou .meta {
    margin-top: 4px;
  }
  .quote-fanfou .meta, .quote-fanfou .meta a {
    color: #999999;
    font-size: 12px;
  }
  .quote-fanfou .attachment {
    margin-left: 8px;
  }
  .quote-fanfou .attachment img {
    height: 106px;
    width: 106px;
    padding: 2px;
    border: 1px solid #cccccc;
  }
&lt;/style&gt;












&lt;blockquote class=&#34;quote-fanfou&#34;&gt;
  &lt;div class=&#34;avatar&#34;&gt;&lt;img src=&#34;http://localhost:1313/img/fanfou/mogita/avatar.jpg&#34; alt=&#34;mogita&#34; /&gt;&lt;/div&gt;
  &lt;div class=&#34;content&#34;&gt;
    &lt;span class=&#34;username&#34;&gt;&lt;a href=&#34;https://fanfou.com/mogita&#34; target=&#34;_blank&#34;&gt;mogita&lt;/a&gt;&lt;/span&gt;
    &lt;span class=&#34;message&#34;&gt;试用接受中！#&lt;a href=&#34;https://fanfou.com/q/instaFan&#34;&gt;instaFan&lt;/a&gt;# &lt;a href=&#34;http://instagr.am/p/J_Xl_HuYgI/&#34;&gt;http://instagr.am/p/J_Xl_HuYgI/&lt;/a&gt;&lt;/span&gt;
    &lt;div class=&#34;meta&#34;&gt;
      &lt;a href=&#34;https://fanfou.com/statuses/MLjXa_Q6bus&#34;&gt;2012-04-29 14:08&lt;/a&gt; 通过 &lt;a href=&#34;http://fanstafou.mogita.com/&#34;&gt;FanstaFou&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&#34;attachment&#34;&gt;
    
    &lt;a href=&#34;http://localhost:1313/img/fanfou/mogita/0s_298563.jpg&#34; title=&#34;试用接受中！#[instaFan](https://fanfou.com/q/instaFan)# http://instagr.am/p/J_Xl_HuYgI/&#34; target=&#34;_blank&#34;&gt;
      &lt;img src=&#34;http://localhost:1313/img/fanfou/mogita/0s_298563_hu3c232442ad6a3f51338f2e2e41233549_53459_106x106_fill_q90_box_smart1.jpg&#34; alt=&#34;试用接受中！#[instaFan](https://fanfou.com/q/instaFan)# http://instagr.am/p/J_Xl_HuYgI/&#34; title=&#34;试用接受中！#[instaFan](https://fanfou.com/q/instaFan)# http://instagr.am/p/J_Xl_HuYgI/&#34; /&gt;
    &lt;/a&gt;
    
  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;style&gt;
  .quote-fanfou {
    font-family: HelveticaNeue, Helvetica Neue, Helvetica, Arial, sans-serif;
    font-style: normal;
    display: flex;
  }
  .quote-fanfou .avatar {
    margin-right: 8px;
  }
  .quote-fanfou .avatar img {
    height: 48px;
    width: 48px;
  }
  .quote-fanfou .content {
    max-width: 360px;
    flex-grow: 1;
    font-size: 14px;
    line-height: 20px;
  }
  .quote-fanfou .message {
    word-break: break-all;
  }
  .quote-fanfou .meta {
    margin-top: 4px;
  }
  .quote-fanfou .meta, .quote-fanfou .meta a {
    color: #999999;
    font-size: 12px;
  }
  .quote-fanfou .attachment {
    margin-left: 8px;
  }
  .quote-fanfou .attachment img {
    height: 106px;
    width: 106px;
    padding: 2px;
    border: 1px solid #cccccc;
  }
&lt;/style&gt;












&lt;blockquote class=&#34;quote-fanfou&#34;&gt;
  &lt;div class=&#34;avatar&#34;&gt;&lt;img src=&#34;http://localhost:1313/img/fanfou/mogita/avatar.jpg&#34; alt=&#34;mogita&#34; /&gt;&lt;/div&gt;
  &lt;div class=&#34;content&#34;&gt;
    &lt;span class=&#34;username&#34;&gt;&lt;a href=&#34;https://fanfou.com/mogita&#34; target=&#34;_blank&#34;&gt;mogita&lt;/a&gt;&lt;/span&gt;
    &lt;span class=&#34;message&#34;&gt;给 instaFan 画了个横图，简笔画水平。。哈哈。。&lt;/span&gt;
    &lt;div class=&#34;meta&#34;&gt;
      &lt;a href=&#34;https://fanfou.com/statuses/wji-e1zKNHU&#34;&gt;2012-05-28 03:50&lt;/a&gt; 通过 网页
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&#34;attachment&#34;&gt;
    
    &lt;a href=&#34;http://localhost:1313/img/fanfou/mogita/km_260120.jpg&#34; title=&#34;给 instaFan 画了个横图，简笔画水平。。哈哈。。&#34; target=&#34;_blank&#34;&gt;
      &lt;img src=&#34;http://localhost:1313/img/fanfou/mogita/km_260120_hub9c889d6aa13cf5e963f0bc8ab7060c9_29652_106x106_fill_q90_box_smart1.jpg&#34; alt=&#34;给 instaFan 画了个横图，简笔画水平。。哈哈。。&#34; title=&#34;给 instaFan 画了个横图，简笔画水平。。哈哈。。&#34; /&gt;
    &lt;/a&gt;
    
  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;style&gt;
  .quote-fanfou {
    font-family: HelveticaNeue, Helvetica Neue, Helvetica, Arial, sans-serif;
    font-style: normal;
    display: flex;
  }
  .quote-fanfou .avatar {
    margin-right: 8px;
  }
  .quote-fanfou .avatar img {
    height: 48px;
    width: 48px;
  }
  .quote-fanfou .content {
    max-width: 360px;
    flex-grow: 1;
    font-size: 14px;
    line-height: 20px;
  }
  .quote-fanfou .message {
    word-break: break-all;
  }
  .quote-fanfou .meta {
    margin-top: 4px;
  }
  .quote-fanfou .meta, .quote-fanfou .meta a {
    color: #999999;
    font-size: 12px;
  }
  .quote-fanfou .attachment {
    margin-left: 8px;
  }
  .quote-fanfou .attachment img {
    height: 106px;
    width: 106px;
    padding: 2px;
    border: 1px solid #cccccc;
  }
&lt;/style&gt;










&lt;blockquote class=&#34;quote-fanfou&#34;&gt;
  &lt;div class=&#34;avatar&#34;&gt;&lt;img src=&#34;http://localhost:1313/img/fanfou/mogita/avatar.jpg&#34; alt=&#34;mogita&#34; /&gt;&lt;/div&gt;
  &lt;div class=&#34;content&#34;&gt;
    &lt;span class=&#34;username&#34;&gt;&lt;a href=&#34;https://fanfou.com/mogita&#34; target=&#34;_blank&#34;&gt;mogita&lt;/a&gt;&lt;/span&gt;
    &lt;span class=&#34;message&#34;&gt;instafan 刚刚获得了开放后的第一百位用户。&lt;/span&gt;
    &lt;div class=&#34;meta&#34;&gt;
      &lt;a href=&#34;https://fanfou.com/statuses/L9YWqq7pBdE&#34;&gt;2012-08-06 17:12&lt;/a&gt; 通过 网页
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&#34;attachment&#34;&gt;
    
  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;style&gt;
  .quote-fanfou {
    font-family: HelveticaNeue, Helvetica Neue, Helvetica, Arial, sans-serif;
    font-style: normal;
    display: flex;
  }
  .quote-fanfou .avatar {
    margin-right: 8px;
  }
  .quote-fanfou .avatar img {
    height: 48px;
    width: 48px;
  }
  .quote-fanfou .content {
    max-width: 360px;
    flex-grow: 1;
    font-size: 14px;
    line-height: 20px;
  }
  .quote-fanfou .message {
    word-break: break-all;
  }
  .quote-fanfou .meta {
    margin-top: 4px;
  }
  .quote-fanfou .meta, .quote-fanfou .meta a {
    color: #999999;
    font-size: 12px;
  }
  .quote-fanfou .attachment {
    margin-left: 8px;
  }
  .quote-fanfou .attachment img {
    height: 106px;
    width: 106px;
    padding: 2px;
    border: 1px solid #cccccc;
  }
&lt;/style&gt;










&lt;blockquote class=&#34;quote-fanfou&#34;&gt;
  &lt;div class=&#34;avatar&#34;&gt;&lt;img src=&#34;http://localhost:1313/img/fanfou/mogita/avatar.jpg&#34; alt=&#34;mogita&#34; /&gt;&lt;/div&gt;
  &lt;div class=&#34;content&#34;&gt;
    &lt;span class=&#34;username&#34;&gt;&lt;a href=&#34;https://fanfou.com/mogita&#34; target=&#34;_blank&#34;&gt;mogita&lt;/a&gt;&lt;/span&gt;
    &lt;span class=&#34;message&#34;&gt;逐步添加详细的 log，发现 instagram 确实偶尔不会将用户发布新照片的消息推送到 instaFan。╮(￣▽￣&amp;quot;)╭&lt;/span&gt;
    &lt;div class=&#34;meta&#34;&gt;
      &lt;a href=&#34;https://fanfou.com/statuses/cvnuU2bC-ak&#34;&gt;2012-12-31 14:32&lt;/a&gt; 通过 API
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&#34;attachment&#34;&gt;
    
  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;style&gt;
  .quote-fanfou {
    font-family: HelveticaNeue, Helvetica Neue, Helvetica, Arial, sans-serif;
    font-style: normal;
    display: flex;
  }
  .quote-fanfou .avatar {
    margin-right: 8px;
  }
  .quote-fanfou .avatar img {
    height: 48px;
    width: 48px;
  }
  .quote-fanfou .content {
    max-width: 360px;
    flex-grow: 1;
    font-size: 14px;
    line-height: 20px;
  }
  .quote-fanfou .message {
    word-break: break-all;
  }
  .quote-fanfou .meta {
    margin-top: 4px;
  }
  .quote-fanfou .meta, .quote-fanfou .meta a {
    color: #999999;
    font-size: 12px;
  }
  .quote-fanfou .attachment {
    margin-left: 8px;
  }
  .quote-fanfou .attachment img {
    height: 106px;
    width: 106px;
    padding: 2px;
    border: 1px solid #cccccc;
  }
&lt;/style&gt;










&lt;blockquote class=&#34;quote-fanfou&#34;&gt;
  &lt;div class=&#34;avatar&#34;&gt;&lt;img src=&#34;http://localhost:1313/img/fanfou/mogita/avatar.jpg&#34; alt=&#34;mogita&#34; /&gt;&lt;/div&gt;
  &lt;div class=&#34;content&#34;&gt;
    &lt;span class=&#34;username&#34;&gt;&lt;a href=&#34;https://fanfou.com/mogita&#34; target=&#34;_blank&#34;&gt;mogita&lt;/a&gt;&lt;/span&gt;
    &lt;span class=&#34;message&#34;&gt;更新了一下#&lt;a href=&#34;https://fanfou.com/q/instaFan&#34;&gt;instaFan&lt;/a&gt;#，唯一针对提升同步成功率。不知道能提升多少。。欢迎来操。&lt;/span&gt;
    &lt;div class=&#34;meta&#34;&gt;
      &lt;a href=&#34;https://fanfou.com/statuses/lML9vEFhtiQ&#34;&gt;2013-02-22 22:57&lt;/a&gt; 通过 网页
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&#34;attachment&#34;&gt;
    
  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;style&gt;
  .quote-fanfou {
    font-family: HelveticaNeue, Helvetica Neue, Helvetica, Arial, sans-serif;
    font-style: normal;
    display: flex;
  }
  .quote-fanfou .avatar {
    margin-right: 8px;
  }
  .quote-fanfou .avatar img {
    height: 48px;
    width: 48px;
  }
  .quote-fanfou .content {
    max-width: 360px;
    flex-grow: 1;
    font-size: 14px;
    line-height: 20px;
  }
  .quote-fanfou .message {
    word-break: break-all;
  }
  .quote-fanfou .meta {
    margin-top: 4px;
  }
  .quote-fanfou .meta, .quote-fanfou .meta a {
    color: #999999;
    font-size: 12px;
  }
  .quote-fanfou .attachment {
    margin-left: 8px;
  }
  .quote-fanfou .attachment img {
    height: 106px;
    width: 106px;
    padding: 2px;
    border: 1px solid #cccccc;
  }
&lt;/style&gt;










&lt;blockquote class=&#34;quote-fanfou&#34;&gt;
  &lt;div class=&#34;avatar&#34;&gt;&lt;img src=&#34;http://localhost:1313/img/fanfou/mogita/avatar.jpg&#34; alt=&#34;mogita&#34; /&gt;&lt;/div&gt;
  &lt;div class=&#34;content&#34;&gt;
    &lt;span class=&#34;username&#34;&gt;&lt;a href=&#34;https://fanfou.com/mogita&#34; target=&#34;_blank&#34;&gt;mogita&lt;/a&gt;&lt;/span&gt;
    &lt;span class=&#34;message&#34;&gt;instaFan 同步数过万了。。回家好好爱抚一番。&lt;/span&gt;
    &lt;div class=&#34;meta&#34;&gt;
      &lt;a href=&#34;https://fanfou.com/statuses/6hhck1_wH64&#34;&gt;2013-03-20 10:15&lt;/a&gt; 通过 &lt;a href=&#34;http://imach.me/gohanapp&#34;&gt;「御飯 iPad」&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&#34;attachment&#34;&gt;
    
  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;style&gt;
  .quote-fanfou {
    font-family: HelveticaNeue, Helvetica Neue, Helvetica, Arial, sans-serif;
    font-style: normal;
    display: flex;
  }
  .quote-fanfou .avatar {
    margin-right: 8px;
  }
  .quote-fanfou .avatar img {
    height: 48px;
    width: 48px;
  }
  .quote-fanfou .content {
    max-width: 360px;
    flex-grow: 1;
    font-size: 14px;
    line-height: 20px;
  }
  .quote-fanfou .message {
    word-break: break-all;
  }
  .quote-fanfou .meta {
    margin-top: 4px;
  }
  .quote-fanfou .meta, .quote-fanfou .meta a {
    color: #999999;
    font-size: 12px;
  }
  .quote-fanfou .attachment {
    margin-left: 8px;
  }
  .quote-fanfou .attachment img {
    height: 106px;
    width: 106px;
    padding: 2px;
    border: 1px solid #cccccc;
  }
&lt;/style&gt;










&lt;blockquote class=&#34;quote-fanfou&#34;&gt;
  &lt;div class=&#34;avatar&#34;&gt;&lt;img src=&#34;http://localhost:1313/img/fanfou/mogita/avatar.jpg&#34; alt=&#34;mogita&#34; /&gt;&lt;/div&gt;
  &lt;div class=&#34;content&#34;&gt;
    &lt;span class=&#34;username&#34;&gt;&lt;a href=&#34;https://fanfou.com/mogita&#34; target=&#34;_blank&#34;&gt;mogita&lt;/a&gt;&lt;/span&gt;
    &lt;span class=&#34;message&#34;&gt;SAE 上跑 instaFan 看来希望渺茫了。要是没被 fb 收购就好了。&lt;/span&gt;
    &lt;div class=&#34;meta&#34;&gt;
      &lt;a href=&#34;https://fanfou.com/statuses/PhnUd7IFu6Q&#34;&gt;2014-05-02 11:01&lt;/a&gt; 通过 &lt;a href=&#34;http://imach.me/gohanapp&#34;&gt;「御飯 iPhone」&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&#34;attachment&#34;&gt;
    
  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;style&gt;
  .quote-fanfou {
    font-family: HelveticaNeue, Helvetica Neue, Helvetica, Arial, sans-serif;
    font-style: normal;
    display: flex;
  }
  .quote-fanfou .avatar {
    margin-right: 8px;
  }
  .quote-fanfou .avatar img {
    height: 48px;
    width: 48px;
  }
  .quote-fanfou .content {
    max-width: 360px;
    flex-grow: 1;
    font-size: 14px;
    line-height: 20px;
  }
  .quote-fanfou .message {
    word-break: break-all;
  }
  .quote-fanfou .meta {
    margin-top: 4px;
  }
  .quote-fanfou .meta, .quote-fanfou .meta a {
    color: #999999;
    font-size: 12px;
  }
  .quote-fanfou .attachment {
    margin-left: 8px;
  }
  .quote-fanfou .attachment img {
    height: 106px;
    width: 106px;
    padding: 2px;
    border: 1px solid #cccccc;
  }
&lt;/style&gt;










&lt;blockquote class=&#34;quote-fanfou&#34;&gt;
  &lt;div class=&#34;avatar&#34;&gt;&lt;img src=&#34;http://localhost:1313/img/fanfou/mogita/avatar.jpg&#34; alt=&#34;mogita&#34; /&gt;&lt;/div&gt;
  &lt;div class=&#34;content&#34;&gt;
    &lt;span class=&#34;username&#34;&gt;&lt;a href=&#34;https://fanfou.com/mogita&#34; target=&#34;_blank&#34;&gt;mogita&lt;/a&gt;&lt;/span&gt;
    &lt;span class=&#34;message&#34;&gt;instaFan 暂定下周二（5 月 12 日）17 点到 20 点暂停服务 3 小时。（主机商说要修电源。。&lt;/span&gt;
    &lt;div class=&#34;meta&#34;&gt;
      &lt;a href=&#34;https://fanfou.com/statuses/hD5EILXHXPY&#34;&gt;2015-05-05 17:16&lt;/a&gt; 通过 网页
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&#34;attachment&#34;&gt;
    
  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;style&gt;
  .quote-fanfou {
    font-family: HelveticaNeue, Helvetica Neue, Helvetica, Arial, sans-serif;
    font-style: normal;
    display: flex;
  }
  .quote-fanfou .avatar {
    margin-right: 8px;
  }
  .quote-fanfou .avatar img {
    height: 48px;
    width: 48px;
  }
  .quote-fanfou .content {
    max-width: 360px;
    flex-grow: 1;
    font-size: 14px;
    line-height: 20px;
  }
  .quote-fanfou .message {
    word-break: break-all;
  }
  .quote-fanfou .meta {
    margin-top: 4px;
  }
  .quote-fanfou .meta, .quote-fanfou .meta a {
    color: #999999;
    font-size: 12px;
  }
  .quote-fanfou .attachment {
    margin-left: 8px;
  }
  .quote-fanfou .attachment img {
    height: 106px;
    width: 106px;
    padding: 2px;
    border: 1px solid #cccccc;
  }
&lt;/style&gt;










&lt;blockquote class=&#34;quote-fanfou&#34;&gt;
  &lt;div class=&#34;avatar&#34;&gt;&lt;img src=&#34;http://localhost:1313/img/fanfou/mogita/avatar.jpg&#34; alt=&#34;mogita&#34; /&gt;&lt;/div&gt;
  &lt;div class=&#34;content&#34;&gt;
    &lt;span class=&#34;username&#34;&gt;&lt;a href=&#34;https://fanfou.com/mogita&#34; target=&#34;_blank&#34;&gt;mogita&lt;/a&gt;&lt;/span&gt;
    &lt;span class=&#34;message&#34;&gt;今天算是把 instafan 新版服务跑起来了。长期测试，鸭的实时推送接口根本就是个坏的，有些用户发照片它永远不会给我发消息。还是特么轮询靠谱。当然，这是新版的设计，目前版本的代码不打算更新了。&lt;/span&gt;
    &lt;div class=&#34;meta&#34;&gt;
      &lt;a href=&#34;https://fanfou.com/statuses/bZhIoLt7jk4&#34;&gt;2016-05-10 18:20&lt;/a&gt; 通过 &lt;a href=&#34;http://imach.me/gohanapp&#34;&gt;御飯 iOS&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&#34;attachment&#34;&gt;
    
  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;style&gt;
  .quote-fanfou {
    font-family: HelveticaNeue, Helvetica Neue, Helvetica, Arial, sans-serif;
    font-style: normal;
    display: flex;
  }
  .quote-fanfou .avatar {
    margin-right: 8px;
  }
  .quote-fanfou .avatar img {
    height: 48px;
    width: 48px;
  }
  .quote-fanfou .content {
    max-width: 360px;
    flex-grow: 1;
    font-size: 14px;
    line-height: 20px;
  }
  .quote-fanfou .message {
    word-break: break-all;
  }
  .quote-fanfou .meta {
    margin-top: 4px;
  }
  .quote-fanfou .meta, .quote-fanfou .meta a {
    color: #999999;
    font-size: 12px;
  }
  .quote-fanfou .attachment {
    margin-left: 8px;
  }
  .quote-fanfou .attachment img {
    height: 106px;
    width: 106px;
    padding: 2px;
    border: 1px solid #cccccc;
  }
&lt;/style&gt;










&lt;blockquote class=&#34;quote-fanfou&#34;&gt;
  &lt;div class=&#34;avatar&#34;&gt;&lt;img src=&#34;http://localhost:1313/img/fanfou/mogita/avatar.jpg&#34; alt=&#34;mogita&#34; /&gt;&lt;/div&gt;
  &lt;div class=&#34;content&#34;&gt;
    &lt;span class=&#34;username&#34;&gt;&lt;a href=&#34;https://fanfou.com/mogita&#34; target=&#34;_blank&#34;&gt;mogita&lt;/a&gt;&lt;/span&gt;
    &lt;span class=&#34;message&#34;&gt;今天下午开始迁移 instaFan 数据，为新版服务做准备。现有同步服务会暂停运行，迁移完成后服务会自动恢复。由于数据库结构升级，预计迁移过程需要 1-2 天，请各位用户见谅。#&lt;a href=&#34;https://fanfou.com/q/instafan&#34;&gt;instafan&lt;/a&gt;# #&lt;a href=&#34;https://fanfou.com/q/instagram&#34;&gt;instagram&lt;/a&gt;#&lt;/span&gt;
    &lt;div class=&#34;meta&#34;&gt;
      &lt;a href=&#34;https://fanfou.com/statuses/BAW1DV82Zto&#34;&gt;2016-05-26 14:05&lt;/a&gt; 通过 网页
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&#34;attachment&#34;&gt;
    
  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;style&gt;
  .quote-fanfou {
    font-family: HelveticaNeue, Helvetica Neue, Helvetica, Arial, sans-serif;
    font-style: normal;
    display: flex;
  }
  .quote-fanfou .avatar {
    margin-right: 8px;
  }
  .quote-fanfou .avatar img {
    height: 48px;
    width: 48px;
  }
  .quote-fanfou .content {
    max-width: 360px;
    flex-grow: 1;
    font-size: 14px;
    line-height: 20px;
  }
  .quote-fanfou .message {
    word-break: break-all;
  }
  .quote-fanfou .meta {
    margin-top: 4px;
  }
  .quote-fanfou .meta, .quote-fanfou .meta a {
    color: #999999;
    font-size: 12px;
  }
  .quote-fanfou .attachment {
    margin-left: 8px;
  }
  .quote-fanfou .attachment img {
    height: 106px;
    width: 106px;
    padding: 2px;
    border: 1px solid #cccccc;
  }
&lt;/style&gt;










&lt;blockquote class=&#34;quote-fanfou&#34;&gt;
  &lt;div class=&#34;avatar&#34;&gt;&lt;img src=&#34;http://localhost:1313/img/fanfou/mogita/avatar.jpg&#34; alt=&#34;mogita&#34; /&gt;&lt;/div&gt;
  &lt;div class=&#34;content&#34;&gt;
    &lt;span class=&#34;username&#34;&gt;&lt;a href=&#34;https://fanfou.com/mogita&#34; target=&#34;_blank&#34;&gt;mogita&lt;/a&gt;&lt;/span&gt;
    &lt;span class=&#34;message&#34;&gt;如果因为 instagram 的政策，#&lt;a href=&#34;https://fanfou.com/q/instafan&#34;&gt;instafan&lt;/a&gt;# 不得不改名的话，是完全换个名字还是小改避开政策就好呢？（官方不允许 ig、insta、gram、instagram 字样出现在名字里）&lt;/span&gt;
    &lt;div class=&#34;meta&#34;&gt;
      &lt;a href=&#34;https://fanfou.com/statuses/_n8B4Ex1tAw&#34;&gt;2016-05-27 14:02&lt;/a&gt; 通过 网页
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&#34;attachment&#34;&gt;
    
  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;style&gt;
  .quote-fanfou {
    font-family: HelveticaNeue, Helvetica Neue, Helvetica, Arial, sans-serif;
    font-style: normal;
    display: flex;
  }
  .quote-fanfou .avatar {
    margin-right: 8px;
  }
  .quote-fanfou .avatar img {
    height: 48px;
    width: 48px;
  }
  .quote-fanfou .content {
    max-width: 360px;
    flex-grow: 1;
    font-size: 14px;
    line-height: 20px;
  }
  .quote-fanfou .message {
    word-break: break-all;
  }
  .quote-fanfou .meta {
    margin-top: 4px;
  }
  .quote-fanfou .meta, .quote-fanfou .meta a {
    color: #999999;
    font-size: 12px;
  }
  .quote-fanfou .attachment {
    margin-left: 8px;
  }
  .quote-fanfou .attachment img {
    height: 106px;
    width: 106px;
    padding: 2px;
    border: 1px solid #cccccc;
  }
&lt;/style&gt;










&lt;blockquote class=&#34;quote-fanfou&#34;&gt;
  &lt;div class=&#34;avatar&#34;&gt;&lt;img src=&#34;http://localhost:1313/img/fanfou/mogita/avatar.jpg&#34; alt=&#34;mogita&#34; /&gt;&lt;/div&gt;
  &lt;div class=&#34;content&#34;&gt;
    &lt;span class=&#34;username&#34;&gt;&lt;a href=&#34;https://fanfou.com/mogita&#34; target=&#34;_blank&#34;&gt;mogita&lt;/a&gt;&lt;/span&gt;
    &lt;span class=&#34;message&#34;&gt;我自己也+1 转@&lt;a href=&#34;https://fanfou.com/tenax&#34;&gt;西瓦&lt;/a&gt; 哈哈哈被fanstafou逗笑。觉得只要朗朗上口的都行 转@&lt;a href=&#34;https://fanfou.com/mogita&#34;&gt;mogita&lt;/a&gt; fansync？fantasync？fanstafou？syncfou？fanfoutongbu？tongbuyinsiteguranmuzhaopiandaofanfou？&lt;/span&gt;
    &lt;div class=&#34;meta&#34;&gt;
      &lt;a href=&#34;https://fanfou.com/statuses/-HLgkSYt-ks&#34;&gt;2016-05-27 14:18&lt;/a&gt; 通过 网页 &lt;a href=&#34;https://fanfou.com/statuses/v2cCfW5fEBw&#34;&gt;转自mogita(查看)&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&#34;attachment&#34;&gt;
    
  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;style&gt;
  .quote-fanfou {
    font-family: HelveticaNeue, Helvetica Neue, Helvetica, Arial, sans-serif;
    font-style: normal;
    display: flex;
  }
  .quote-fanfou .avatar {
    margin-right: 8px;
  }
  .quote-fanfou .avatar img {
    height: 48px;
    width: 48px;
  }
  .quote-fanfou .content {
    max-width: 360px;
    flex-grow: 1;
    font-size: 14px;
    line-height: 20px;
  }
  .quote-fanfou .message {
    word-break: break-all;
  }
  .quote-fanfou .meta {
    margin-top: 4px;
  }
  .quote-fanfou .meta, .quote-fanfou .meta a {
    color: #999999;
    font-size: 12px;
  }
  .quote-fanfou .attachment {
    margin-left: 8px;
  }
  .quote-fanfou .attachment img {
    height: 106px;
    width: 106px;
    padding: 2px;
    border: 1px solid #cccccc;
  }
&lt;/style&gt;










&lt;blockquote class=&#34;quote-fanfou&#34;&gt;
  &lt;div class=&#34;avatar&#34;&gt;&lt;img src=&#34;http://localhost:1313/img/fanfou/mogita/avatar.jpg&#34; alt=&#34;mogita&#34; /&gt;&lt;/div&gt;
  &lt;div class=&#34;content&#34;&gt;
    &lt;span class=&#34;username&#34;&gt;&lt;a href=&#34;https://fanfou.com/mogita&#34; target=&#34;_blank&#34;&gt;mogita&lt;/a&gt;&lt;/span&gt;
    &lt;span class=&#34;message&#34;&gt;Instagram 到饭否同步服务 instaFan 已改名为 FanstaFou，且刚刚完成了一次重要的机能升级，提升服务的稳定性。访问地址变更为 &lt;a href=&#34;http://fanstafou.mogita.com&#34;&gt;http://fanstafou.mogita.com&lt;/a&gt;。老用户已自动升级为新版，无需进行任何操作。Enjoy！&lt;/span&gt;
    &lt;div class=&#34;meta&#34;&gt;
      &lt;a href=&#34;https://fanfou.com/statuses/Z3pCa0t4NFw&#34;&gt;2016-05-28 11:47&lt;/a&gt; 通过 网页
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&#34;attachment&#34;&gt;
    
  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;style&gt;
  .quote-fanfou {
    font-family: HelveticaNeue, Helvetica Neue, Helvetica, Arial, sans-serif;
    font-style: normal;
    display: flex;
  }
  .quote-fanfou .avatar {
    margin-right: 8px;
  }
  .quote-fanfou .avatar img {
    height: 48px;
    width: 48px;
  }
  .quote-fanfou .content {
    max-width: 360px;
    flex-grow: 1;
    font-size: 14px;
    line-height: 20px;
  }
  .quote-fanfou .message {
    word-break: break-all;
  }
  .quote-fanfou .meta {
    margin-top: 4px;
  }
  .quote-fanfou .meta, .quote-fanfou .meta a {
    color: #999999;
    font-size: 12px;
  }
  .quote-fanfou .attachment {
    margin-left: 8px;
  }
  .quote-fanfou .attachment img {
    height: 106px;
    width: 106px;
    padding: 2px;
    border: 1px solid #cccccc;
  }
&lt;/style&gt;










&lt;blockquote class=&#34;quote-fanfou&#34;&gt;
  &lt;div class=&#34;avatar&#34;&gt;&lt;img src=&#34;http://localhost:1313/img/fanfou/mogita/avatar.jpg&#34; alt=&#34;mogita&#34; /&gt;&lt;/div&gt;
  &lt;div class=&#34;content&#34;&gt;
    &lt;span class=&#34;username&#34;&gt;&lt;a href=&#34;https://fanfou.com/mogita&#34; target=&#34;_blank&#34;&gt;mogita&lt;/a&gt;&lt;/span&gt;
    &lt;span class=&#34;message&#34;&gt;五月底更新后的 Fanstafou 截至现在已同步了 10104 张照片。即每个月已知用户要发送 2500 张左右的照片。平均每天发送大约 83 张照片。&lt;/span&gt;
    &lt;div class=&#34;meta&#34;&gt;
      &lt;a href=&#34;https://fanfou.com/statuses/uu-KsvDgAoE&#34;&gt;2016-10-10 10:48&lt;/a&gt; 通过 网页
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&#34;attachment&#34;&gt;
    
  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;style&gt;
  .quote-fanfou {
    font-family: HelveticaNeue, Helvetica Neue, Helvetica, Arial, sans-serif;
    font-style: normal;
    display: flex;
  }
  .quote-fanfou .avatar {
    margin-right: 8px;
  }
  .quote-fanfou .avatar img {
    height: 48px;
    width: 48px;
  }
  .quote-fanfou .content {
    max-width: 360px;
    flex-grow: 1;
    font-size: 14px;
    line-height: 20px;
  }
  .quote-fanfou .message {
    word-break: break-all;
  }
  .quote-fanfou .meta {
    margin-top: 4px;
  }
  .quote-fanfou .meta, .quote-fanfou .meta a {
    color: #999999;
    font-size: 12px;
  }
  .quote-fanfou .attachment {
    margin-left: 8px;
  }
  .quote-fanfou .attachment img {
    height: 106px;
    width: 106px;
    padding: 2px;
    border: 1px solid #cccccc;
  }
&lt;/style&gt;












&lt;blockquote class=&#34;quote-fanfou&#34;&gt;
  &lt;div class=&#34;avatar&#34;&gt;&lt;img src=&#34;http://localhost:1313/img/fanfou/mogita/avatar.jpg&#34; alt=&#34;mogita&#34; /&gt;&lt;/div&gt;
  &lt;div class=&#34;content&#34;&gt;
    &lt;span class=&#34;username&#34;&gt;&lt;a href=&#34;https://fanfou.com/mogita&#34; target=&#34;_blank&#34;&gt;mogita&lt;/a&gt;&lt;/span&gt;
    &lt;span class=&#34;message&#34;&gt;在线上运行了 7 年 6 个月零 4 天，经历了一次重写，一次服务迁移之后，Fanstafou 代码库喜提首次 git commit。&lt;/span&gt;
    &lt;div class=&#34;meta&#34;&gt;
      &lt;a href=&#34;https://fanfou.com/statuses/Uj838x4odro&#34;&gt;2019-10-23 12:27&lt;/a&gt; 通过 网页
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&#34;attachment&#34;&gt;
    
    &lt;a href=&#34;http://localhost:1313/img/fanfou/mogita/zn_293783.png&#34; title=&#34;在线上运行了 7 年 6 个月零 4 天，经历了一次重写，一次服务迁移之后，Fanstafou 代码库喜提首次 git commit。&#34; target=&#34;_blank&#34;&gt;
      &lt;img src=&#34;http://localhost:1313/img/fanfou/mogita/zn_293783_hua79a25c766ee3fbc2a256c0f21a3d02a_121322_106x106_fill_q90_box_smart1_3.png&#34; alt=&#34;在线上运行了 7 年 6 个月零 4 天，经历了一次重写，一次服务迁移之后，Fanstafou 代码库喜提首次 git commit。&#34; title=&#34;在线上运行了 7 年 6 个月零 4 天，经历了一次重写，一次服务迁移之后，Fanstafou 代码库喜提首次 git commit。&#34; /&gt;
    &lt;/a&gt;
    
  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;style&gt;
  .quote-fanfou {
    font-family: HelveticaNeue, Helvetica Neue, Helvetica, Arial, sans-serif;
    font-style: normal;
    display: flex;
  }
  .quote-fanfou .avatar {
    margin-right: 8px;
  }
  .quote-fanfou .avatar img {
    height: 48px;
    width: 48px;
  }
  .quote-fanfou .content {
    max-width: 360px;
    flex-grow: 1;
    font-size: 14px;
    line-height: 20px;
  }
  .quote-fanfou .message {
    word-break: break-all;
  }
  .quote-fanfou .meta {
    margin-top: 4px;
  }
  .quote-fanfou .meta, .quote-fanfou .meta a {
    color: #999999;
    font-size: 12px;
  }
  .quote-fanfou .attachment {
    margin-left: 8px;
  }
  .quote-fanfou .attachment img {
    height: 106px;
    width: 106px;
    padding: 2px;
    border: 1px solid #cccccc;
  }
&lt;/style&gt;










&lt;blockquote class=&#34;quote-fanfou&#34;&gt;
  &lt;div class=&#34;avatar&#34;&gt;&lt;img src=&#34;http://localhost:1313/img/fanfou/mogita/avatar.jpg&#34; alt=&#34;mogita&#34; /&gt;&lt;/div&gt;
  &lt;div class=&#34;content&#34;&gt;
    &lt;span class=&#34;username&#34;&gt;&lt;a href=&#34;https://fanfou.com/mogita&#34; target=&#34;_blank&#34;&gt;mogita&lt;/a&gt;&lt;/span&gt;
    &lt;span class=&#34;message&#34;&gt;Instagram API 六月底彻底淘汰，又不想接触 Facebook 平台，冗长赘余的配置和审核，取代了激情迸发的美丽时代。再见 Web 2.0，再见 FanstaFou。&lt;/span&gt;
    &lt;div class=&#34;meta&#34;&gt;
      &lt;a href=&#34;https://fanfou.com/statuses/XNnHFP89BsQ&#34;&gt;2020-06-07 03:11&lt;/a&gt; 通过 &lt;a href=&#34;http://imach.me/gohanapp&#34;&gt;御飯 iOS&lt;/a&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div class=&#34;attachment&#34;&gt;
    
  &lt;/div&gt;
&lt;/blockquote&gt;

</description>
    </item>
    
    <item>
      <title>My Draw Something Collection ~ ⚠️ Bulk Images</title>
      <link>http://localhost:1313/posts/my-draw-something-collection.html</link>
      <pubDate>Sat, 07 Apr 2012 17:48:17 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/my-draw-something-collection.html</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Update: Draw Something along with OMGPOP was purchased by &lt;a href=&#34;https://www.zynga.com/games/draw-something/&#34;&gt;Zynga&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不是画画的人，没有画画的魂。会临摹不会创作。所以我拿起笔仍然是个二。请看我的图和我喜欢的画友的图。&lt;/p&gt;
&lt;p&gt;顺便还有几个 fun facts：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Draw Something 的词汇表里有开发商自己的名字 &lt;a href=&#34;https://omgpop.com/drawsomething&#34; target=&#34;_blank&#34;&gt;OMGPOP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;如果无节制地画下去，就会收到“墨水将要用尽”的提示并在画布下面出现一个进度条。墨水用尽时强制提交作品。&lt;/li&gt;
&lt;li&gt;中文用户名无法在游戏中显示（图中只有一个“.”的名字就是使用了中文用户名的后果）&lt;/li&gt;
&lt;li&gt;目前只和老呙一个人玩到了 99 局（当前版本的最高局数。下一版据说上限改为 999 局）&lt;/li&gt;
&lt;li&gt;我的用户名是 mogita&lt;/li&gt;
&lt;/ul&gt;
&lt;style&gt;
    .image-gallery {overflow: auto; margin-left: -1%!important;}
    .image-gallery li {float: left; display: block; margin: 0 0 1% 1%; width: 19%;}
    .image-gallery li a {font-size: 0.7em;text-align: center; text-decoration: none!important; color: #777;}
    .image-gallery li a span {display: block; text-overflow: ellipsis; overflow: hidden; white-space: nowrap; padding: 3px 0;}
    .image-gallery li a img {width: 100%; display: block;}
&lt;/style&gt;


&lt;ul class=&#34;image-gallery&#34;&gt;
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00001.png&#34; title=&#34;IMG_00001&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00001_hu21a290d266c760c0c3450e12ed3b5043_56458_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00001&#34; title=&#34;IMG_00001&#34;&gt;
        &lt;span&gt;IMG_00001&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00002.png&#34; title=&#34;IMG_00002&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00002_hub79a20ed8bb24a475e2c245fa0c1cd50_54096_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00002&#34; title=&#34;IMG_00002&#34;&gt;
        &lt;span&gt;IMG_00002&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00003.png&#34; title=&#34;IMG_00003&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00003_hu674829b6a2e53a8ef8645cc5cca266a1_39168_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00003&#34; title=&#34;IMG_00003&#34;&gt;
        &lt;span&gt;IMG_00003&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00004.png&#34; title=&#34;IMG_00004&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00004_hu770ca171779d3125a22199ca7f73e6c8_51397_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00004&#34; title=&#34;IMG_00004&#34;&gt;
        &lt;span&gt;IMG_00004&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00005.png&#34; title=&#34;IMG_00005&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00005_hu58adcdd420eafb42aa48c3737e056c38_44460_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00005&#34; title=&#34;IMG_00005&#34;&gt;
        &lt;span&gt;IMG_00005&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00006.png&#34; title=&#34;IMG_00006&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00006_huf4ae4f541f9767aa3dae231663f4dad0_44183_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00006&#34; title=&#34;IMG_00006&#34;&gt;
        &lt;span&gt;IMG_00006&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00007.png&#34; title=&#34;IMG_00007&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00007_hubf736a37fa2729643da1b2f22c294ef8_53805_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00007&#34; title=&#34;IMG_00007&#34;&gt;
        &lt;span&gt;IMG_00007&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00008.png&#34; title=&#34;IMG_00008&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00008_hu11e16f8ba17b0eff3c1c8beb3d1bec76_43050_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00008&#34; title=&#34;IMG_00008&#34;&gt;
        &lt;span&gt;IMG_00008&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00009.png&#34; title=&#34;IMG_00009&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00009_hucae6f44e37dbf1080eef76516400cba5_35565_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00009&#34; title=&#34;IMG_00009&#34;&gt;
        &lt;span&gt;IMG_00009&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00010.png&#34; title=&#34;IMG_00010&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00010_hu6217d249637a20643e24b6371f3a6583_30589_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00010&#34; title=&#34;IMG_00010&#34;&gt;
        &lt;span&gt;IMG_00010&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00011.png&#34; title=&#34;IMG_00011&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00011_hu90f531ef2fb043d41c747adaab66a969_26624_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00011&#34; title=&#34;IMG_00011&#34;&gt;
        &lt;span&gt;IMG_00011&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00012.png&#34; title=&#34;IMG_00012&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00012_hu3ff5e3a536d2e12dc7cfbe354094a813_24858_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00012&#34; title=&#34;IMG_00012&#34;&gt;
        &lt;span&gt;IMG_00012&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00013.png&#34; title=&#34;IMG_00013&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00013_hu0e8bf0fbaf406abf078a0cdb87eccf58_25745_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00013&#34; title=&#34;IMG_00013&#34;&gt;
        &lt;span&gt;IMG_00013&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00014.png&#34; title=&#34;IMG_00014&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00014_hu074baae856a671a38aec290c17896671_43534_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00014&#34; title=&#34;IMG_00014&#34;&gt;
        &lt;span&gt;IMG_00014&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00015.png&#34; title=&#34;IMG_00015&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00015_hubc99a1af9b8c91d5e8d0439095fb8ee1_58103_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00015&#34; title=&#34;IMG_00015&#34;&gt;
        &lt;span&gt;IMG_00015&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00016.png&#34; title=&#34;IMG_00016&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00016_hu70c77b562ae869d27321e8ed5ad7a32a_31562_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00016&#34; title=&#34;IMG_00016&#34;&gt;
        &lt;span&gt;IMG_00016&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00017.png&#34; title=&#34;IMG_00017&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00017_huacd3a28406dbac8a42309929f1cc5561_60517_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00017&#34; title=&#34;IMG_00017&#34;&gt;
        &lt;span&gt;IMG_00017&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00018.png&#34; title=&#34;IMG_00018&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00018_huc1ba6507ab1c2f7c9f9e1deb6d5fc13f_48335_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00018&#34; title=&#34;IMG_00018&#34;&gt;
        &lt;span&gt;IMG_00018&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00019.png&#34; title=&#34;IMG_00019&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00019_hufd92ddd5e3f12ec50100382c90e48277_40275_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00019&#34; title=&#34;IMG_00019&#34;&gt;
        &lt;span&gt;IMG_00019&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00020.png&#34; title=&#34;IMG_00020&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00020_hu5448b288dcf2c9184808e539d3519d7a_34612_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00020&#34; title=&#34;IMG_00020&#34;&gt;
        &lt;span&gt;IMG_00020&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00021.png&#34; title=&#34;IMG_00021&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00021_hud4d80ba2460bab458cb701bbd86dabbc_25964_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00021&#34; title=&#34;IMG_00021&#34;&gt;
        &lt;span&gt;IMG_00021&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00022.png&#34; title=&#34;IMG_00022&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00022_hudd463824a965c89c433b28147b05d327_29409_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00022&#34; title=&#34;IMG_00022&#34;&gt;
        &lt;span&gt;IMG_00022&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00023.png&#34; title=&#34;IMG_00023&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00023_hue275e91fc0e7c1b2fdcf3b634e46cce6_44710_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00023&#34; title=&#34;IMG_00023&#34;&gt;
        &lt;span&gt;IMG_00023&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00024.png&#34; title=&#34;IMG_00024&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00024_hue2fa7b6975c24eff63b0c4bb76f75992_26999_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00024&#34; title=&#34;IMG_00024&#34;&gt;
        &lt;span&gt;IMG_00024&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00025.png&#34; title=&#34;IMG_00025&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00025_hu3e206ebe6e70ad96d71fa2bd5e4baa58_40642_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00025&#34; title=&#34;IMG_00025&#34;&gt;
        &lt;span&gt;IMG_00025&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00026.png&#34; title=&#34;IMG_00026&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00026_hu874397dfbae8d669bee1d5f771e033ba_39140_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00026&#34; title=&#34;IMG_00026&#34;&gt;
        &lt;span&gt;IMG_00026&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00027.png&#34; title=&#34;IMG_00027&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00027_hu2ba9e2283388aeede44437d5a0f4c351_41305_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00027&#34; title=&#34;IMG_00027&#34;&gt;
        &lt;span&gt;IMG_00027&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00028.png&#34; title=&#34;IMG_00028&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00028_hue7c37787f22ea57fcc599ddbab9a592a_39743_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00028&#34; title=&#34;IMG_00028&#34;&gt;
        &lt;span&gt;IMG_00028&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00029.png&#34; title=&#34;IMG_00029&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00029_huc83033bbb2b95e9cb58a0d9a39e1b8c6_60891_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00029&#34; title=&#34;IMG_00029&#34;&gt;
        &lt;span&gt;IMG_00029&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00030.png&#34; title=&#34;IMG_00030&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00030_hu52d10a73bb604e2f4d2972209e1a1966_58857_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00030&#34; title=&#34;IMG_00030&#34;&gt;
        &lt;span&gt;IMG_00030&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00031.png&#34; title=&#34;IMG_00031&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00031_huf611a0071fcab13c9c1c7bc1a795d7b9_94833_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00031&#34; title=&#34;IMG_00031&#34;&gt;
        &lt;span&gt;IMG_00031&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00032.png&#34; title=&#34;IMG_00032&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00032_hu221310c02032bbd143a3e47a1a212810_33880_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00032&#34; title=&#34;IMG_00032&#34;&gt;
        &lt;span&gt;IMG_00032&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00033.png&#34; title=&#34;IMG_00033&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00033_hu881216ad04d45f72b8f4db107aa3a00e_30337_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00033&#34; title=&#34;IMG_00033&#34;&gt;
        &lt;span&gt;IMG_00033&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00034.png&#34; title=&#34;IMG_00034&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00034_hu87e07818a913e274d081ba943c508faf_47623_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00034&#34; title=&#34;IMG_00034&#34;&gt;
        &lt;span&gt;IMG_00034&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00035.png&#34; title=&#34;IMG_00035&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00035_huf770ea1b38f9ae5b1b43057915931399_28725_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00035&#34; title=&#34;IMG_00035&#34;&gt;
        &lt;span&gt;IMG_00035&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00036.png&#34; title=&#34;IMG_00036&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00036_hu732117d6349f1c815aacab7d085342d5_51861_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00036&#34; title=&#34;IMG_00036&#34;&gt;
        &lt;span&gt;IMG_00036&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00037.png&#34; title=&#34;IMG_00037&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00037_hu429c623124c4f48e918fad7311adbdcf_38195_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00037&#34; title=&#34;IMG_00037&#34;&gt;
        &lt;span&gt;IMG_00037&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00038.png&#34; title=&#34;IMG_00038&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00038_hue067d609c8692d06e0a8ca3d92b2624d_68073_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00038&#34; title=&#34;IMG_00038&#34;&gt;
        &lt;span&gt;IMG_00038&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00039.png&#34; title=&#34;IMG_00039&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00039_hu3b7780e0361c376f7988a21ed4dbda01_37640_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00039&#34; title=&#34;IMG_00039&#34;&gt;
        &lt;span&gt;IMG_00039&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00040.png&#34; title=&#34;IMG_00040&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00040_hu41d06ebd57920bab4980f1495201a81c_31586_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00040&#34; title=&#34;IMG_00040&#34;&gt;
        &lt;span&gt;IMG_00040&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00041.png&#34; title=&#34;IMG_00041&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00041_hud2684d4db67e2dcb2e88479b651688db_28625_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00041&#34; title=&#34;IMG_00041&#34;&gt;
        &lt;span&gt;IMG_00041&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00042.png&#34; title=&#34;IMG_00042&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00042_hu52d3477e1d0886c6ac6fa8b269eb6061_98800_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00042&#34; title=&#34;IMG_00042&#34;&gt;
        &lt;span&gt;IMG_00042&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00043.png&#34; title=&#34;IMG_00043&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00043_hucf825bc91690cd23194fe970a93b2308_37533_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00043&#34; title=&#34;IMG_00043&#34;&gt;
        &lt;span&gt;IMG_00043&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00044.png&#34; title=&#34;IMG_00044&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00044_hufcab4f23b85357d71f259903b15c6c8a_28624_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00044&#34; title=&#34;IMG_00044&#34;&gt;
        &lt;span&gt;IMG_00044&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00045.png&#34; title=&#34;IMG_00045&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00045_hu02e2cc4699d24c797daf628a6d95b86a_63909_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00045&#34; title=&#34;IMG_00045&#34;&gt;
        &lt;span&gt;IMG_00045&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00046.png&#34; title=&#34;IMG_00046&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00046_hua8290e349e1d4bf2aa940d3dde100f3c_57015_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00046&#34; title=&#34;IMG_00046&#34;&gt;
        &lt;span&gt;IMG_00046&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00047.png&#34; title=&#34;IMG_00047&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00047_huab03096c26ddd1fafb42b6914f2bc64c_43764_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00047&#34; title=&#34;IMG_00047&#34;&gt;
        &lt;span&gt;IMG_00047&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00048.png&#34; title=&#34;IMG_00048&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00048_hu7b5689c6cfe11db6ab77f4829882404b_59695_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00048&#34; title=&#34;IMG_00048&#34;&gt;
        &lt;span&gt;IMG_00048&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00049.png&#34; title=&#34;IMG_00049&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00049_hu64e43b98d30cf125a06698b3beada809_23683_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00049&#34; title=&#34;IMG_00049&#34;&gt;
        &lt;span&gt;IMG_00049&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00050.png&#34; title=&#34;IMG_00050&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00050_huf401c210d79c7fb1d906f309e92ff8d5_37273_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00050&#34; title=&#34;IMG_00050&#34;&gt;
        &lt;span&gt;IMG_00050&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00051.png&#34; title=&#34;IMG_00051&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00051_huef3f6eb9929bd259b43b4cdc792d46a3_38404_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00051&#34; title=&#34;IMG_00051&#34;&gt;
        &lt;span&gt;IMG_00051&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00052.png&#34; title=&#34;IMG_00052&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00052_hu91e57d3d63a7ba72d9a7f0c60c121ce0_53860_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00052&#34; title=&#34;IMG_00052&#34;&gt;
        &lt;span&gt;IMG_00052&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00053.png&#34; title=&#34;IMG_00053&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00053_hu88f7d6bf9786d6970535ba15baae34cf_103435_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00053&#34; title=&#34;IMG_00053&#34;&gt;
        &lt;span&gt;IMG_00053&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00054.png&#34; title=&#34;IMG_00054&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00054_hu2924fa4e97efa8f8432f9957dfe7dec8_76000_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00054&#34; title=&#34;IMG_00054&#34;&gt;
        &lt;span&gt;IMG_00054&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00055.png&#34; title=&#34;IMG_00055&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00055_hubacb1abdeb3a55892afa8107e0de4314_50734_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00055&#34; title=&#34;IMG_00055&#34;&gt;
        &lt;span&gt;IMG_00055&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  
&lt;li&gt;
      &lt;a href=&#34;http://localhost:1313/img/draw-something/IMG_00056.png&#34; title=&#34;IMG_00056&#34; class=&#34;lightbox-image&#34; target=&#34;_blank&#34;&gt;
        &lt;img src=&#34;http://localhost:1313/img/draw-something/IMG_00056_hud1adea520e4d95f1aeb026ab07d452dd_104940_300x300_fill_q50_box_smart1_3.png&#34; alt=&#34;IMG_00056&#34; title=&#34;IMG_00056&#34;&gt;
        &lt;span&gt;IMG_00056&lt;/span&gt;
      &lt;/a&gt;
    &lt;/li&gt;
  

&lt;/ul&gt;

</description>
    </item>
    
    <item>
      <title>The Lake of Dragon</title>
      <link>http://localhost:1313/posts/the-lake-of-dragon.html</link>
      <pubDate>Wed, 07 Mar 2012 10:11:16 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/the-lake-of-dragon.html</guid>
      <description>&lt;p&gt;A wild plain, all in dark.&lt;br&gt;
I’m chasing your trail.&lt;/p&gt;
&lt;p&gt;I’m thankful for the meet at last,&lt;br&gt;
and that you’ve been waiting for me to sing.&lt;br&gt;
It’s solid where I call for you.&lt;br&gt;
So I really really don’t care.&lt;/p&gt;
&lt;p&gt;Hush me the incantation.&lt;br&gt;
Don’t let me spell alone.&lt;/p&gt;
&lt;p&gt;Fish bone, cowry and the light,&lt;br&gt;
take my hand, I’ll tell you why.&lt;br&gt;
Going off the night is pain.&lt;br&gt;
You left a single choice to take.&lt;/p&gt;
&lt;p&gt;I’m thankful for the meet at last,&lt;br&gt;
and that you’ve been my relief.&lt;br&gt;
It’s solid where I call for you,&lt;br&gt;
in everlasting twinning soul.&lt;/p&gt;
&lt;p&gt;Listen:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://soundcloud.com/mogita/the-lake-of-dragon&#34;&gt;SoundCloud&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>假想敌的重要性</title>
      <link>http://localhost:1313/posts/the-importance-of-being-hostile.html</link>
      <pubDate>Sat, 18 Feb 2012 18:48:22 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/the-importance-of-being-hostile.html</guid>
      <description>&lt;p&gt;它让人变得有干劲。&lt;br&gt;
它让人思维变得活跃。&lt;br&gt;
它让人学会集中精力。&lt;br&gt;
它让人学会集中火力。&lt;br&gt;
它让人开始从未涉足过的学习。&lt;br&gt;
它让人开始旁若无人地压制性论辩。&lt;/p&gt;
&lt;p&gt;它让人学会处处在言语上保护自己。&lt;br&gt;
它让人以为人际交往的本质就是获得尊重。&lt;br&gt;
它让人有更高的人生目标。&lt;br&gt;
它让人把自己的心胸缩小从而适合于映衬自己形象的高大。&lt;br&gt;
它让人整理起规矩条框来头头是道。&lt;br&gt;
它让人产生发自潜意识的欲望。&lt;/p&gt;
&lt;p&gt;它让人不满足于当个多面手。&lt;br&gt;
它让人不满足于成为思想的领袖。&lt;br&gt;
它让人不满足于受到的最衷心的赞叹。&lt;br&gt;
它让人不满足于成为缔造新世界秩序的神。&lt;/p&gt;
&lt;p&gt;它让人捉摸不透。&lt;br&gt;
它让人上课走神。&lt;br&gt;
它让人乐于分析它的存在。&lt;br&gt;
它让人最终都会自觉地在五指山下尿尿。&lt;/p&gt;
&lt;p&gt;它让我半夜写了一段博文。&lt;br&gt;
我试图撇清和它的关系。&lt;br&gt;
如果撇清关系有用的话，&lt;br&gt;
还要田心想警察干什么。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tongue twisted</title>
      <link>http://localhost:1313/posts/tongue-twisted.html</link>
      <pubDate>Fri, 17 Feb 2012 16:21:18 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/tongue-twisted.html</guid>
      <description>&lt;p&gt;We were talking all night long, trying not to persuate of anything but just expressing. I didn’t mention my own thoughts. What was talked about was some kind of philosophucking or psycraplogical things. That was what I knew and what I remember now. Three men makes a band, and any two of them must be first in line. One of them hold an opinion that without a job, not mentioning some piece of art, one simply lives ge jiba. I don’t quite think so. But it was true, indeed. It being a part of art, it needs a ground on which I must stand firm, Mazax told me. I know where I came from and grew up with (bullsh1t). The job for me is being in one piece and never killing myself apart before my life ends itself. What can I do above that? I’ve been living for that question. Yes, according to the Oracle, I might have already answered that question. I’m now here to discover why I made that answer. I’m going to keep that safe. No one discovers it. Well, not many ones, I suppose.&lt;/p&gt;
&lt;p&gt;After a month we need to pay the last quarter’s rent. And then after 4 months we’re moving on. Towards where there needn’t be an answer now and technically, as what we’re getting changes everyday, I have to look up for new places just weeks before packing things.&lt;/p&gt;
&lt;p&gt;The function is just a function. It does nothing. Only those parameters matter.&lt;/p&gt;
&lt;p&gt;Here is my little simple programming learning work today. It’s called The Labyrinth. It means the maze basically where I’d like to peacock how my vocabulary looked checking all the way down my dictionary. =.= I’m a piece of sh1t. On that. Well the little app just asks four questions reflecting four different situations. The player’s goal is make the right choice from 2 options and reach to his/her final pal, not a final boss (There’s no boss actually, and every single question may be the final boss that you never win). Every time the app runs, the answers will be generated randomly so there could never be a walk-through. The player has to challenge his/her luck all the time. It’s boring though, to be a game. I really care about what’s beyond 42. I only know the question for now.&lt;/p&gt;
&lt;p&gt;And yes, this tiny little app was writen in Objective-C and only runs on a Mac computer, or a Unix based operating system like it said what it is, a Unix Executable File.&lt;/p&gt;
&lt;p&gt;I surely will enjoy the unknown.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>More Words：不定长、部分符合英文单词快捷检索</title>
      <link>http://localhost:1313/posts/more-words.html</link>
      <pubDate>Fri, 03 Feb 2012 18:32:23 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/more-words.html</guid>
      <description>&lt;p&gt;词汇量有限是个大问题，不用谈表达，连想法都无法具体转成一种符号。在个人现有词汇量的基础上，如果只知道某个单词中的几个字母，如何找到或罗列出所有按一定顺序包含这几个字母的单词？所以适时依靠一下强大的工具吧。&lt;/p&gt;
&lt;p&gt;用 More Words 可以检索出 Enable2k North America 词汇表中的 173528 个单词，本意是帮助人们解决字谜游戏等。由于是字谜游戏专用的单词表，所以不包含单个字母的单词或部分专有名词。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.morewords.com&#34;&gt;https://www.morewords.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;例如，如何找到尽可能多的以 “at” 结尾的单词呢？在搜索框里输入 &lt;code&gt;*at&lt;/code&gt; 就可以了。干脆把网站的&lt;a href=&#34;https://www.morewords.com/examples&#34;&gt;搜索示例&lt;/a&gt;稍微翻译一下吧：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查询确切的单词“crosswords”：&lt;code&gt;crosswords&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;三个字母的单词，结尾字母是“r”：&lt;code&gt;–r&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;六个字母的单词，前两个字母是“pu”，最后一个字母是“e”：&lt;code&gt;pu–e&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;十个字母的单词，中间两个字母是“sw”：&lt;code&gt;--—-sw—---&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;包含“sswo”这个字母顺序的任意长度单词：&lt;code&gt;*sswo*&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;以“cross”开头的任意长度单词：&lt;code&gt;cross*&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;以“zzle”结尾的任意长度单词：&lt;code&gt;*zzle&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;以“a”开头并以“z”结尾的单词：&lt;code&gt;a*z&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;以“b”开头并在中间某个位置包含“c”，且以“d”结尾的单词：&lt;code&gt;b*c*d&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;以“ab”开头且不包含“e”或“o”的单词：&lt;code&gt;ab* ^eo&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还有其他用法，例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将以“at”结尾的单词按从短到长的顺序全部排列出来：
&lt;a href=&#34;https://www.morewords.com/ends-with-by-length/at/&#34;&gt;https://www.morewords.com/ends-with-by-length/at/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;或者将以“at”结尾的单词按流行度排列出来：
&lt;a href=&#34;https://www.morewords.com/most-common-ends-with/at/&#34;&gt;https://www.morewords.com/most-common-ends-with/at/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用法还很多，不一一列举了。值得一提的是检索速度还算快，页面也很干净。&lt;/p&gt;
&lt;p&gt;好吧，我在最后必须承认，这个工具有助于在写词时偶尔偷个懒。梦境才是最好的写作工具。&lt;/p&gt;
&lt;p&gt;Use it well.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Packed Like Rolls to Be Developed</title>
      <link>http://localhost:1313/posts/packed-like-rolls-to-be-developed.html</link>
      <pubDate>Fri, 13 Jan 2012 18:59:35 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/packed-like-rolls-to-be-developed.html</guid>
      <description>&lt;p&gt;Please try and stay, I have to whisper, for whom behind the picture.&lt;br&gt;
I’m not allowed to say what I think of, but we surely sense the same thing.&lt;/p&gt;
&lt;p&gt;The air is sweet, the woods are the covers, the grass is our bed.&lt;br&gt;
This minute I come out of my shell, the shell that never helps.&lt;/p&gt;
&lt;p&gt;Everybody could be paranoid, when they believe they are police.&lt;br&gt;
They’re just too good at capturing, anything, anything.&lt;/p&gt;
&lt;p&gt;It looks like I’ve had a long dream, I’m done if I just laughed out.&lt;br&gt;
That’s our films, never developed, we’re meant to be nobody.&lt;/p&gt;
&lt;p&gt;Everybody could be paranoid, when they believe they are living.&lt;br&gt;
They’re too good at self-persuasion, by anything, anything.&lt;/p&gt;
&lt;p&gt;Everybody could be paranoid, when they believe they’re inspecting.&lt;br&gt;
They’re just too good at capturing, anything, you, and me.&lt;/p&gt;
&lt;p&gt;Listen:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://soundcloud.com/mogita/packed-like-rolls-to-be-developed&#34;&gt;SoundCloud&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://site.douban.com/mogita/?s=203250&#34;&gt;Douban Site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Bye, youth</title>
      <link>http://localhost:1313/posts/bye-youth.html</link>
      <pubDate>Sun, 15 May 2011 16:23:38 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/bye-youth.html</guid>
      <description>&lt;p&gt;If you leave me tomorrow, there’s one thing you can’t change.&lt;br&gt;
Take a minute to resist, then years of time to watch you leave.&lt;/p&gt;
&lt;p&gt;There’s nothing left to prove it’s me, but the outside world can never change.&lt;br&gt;
I gave you my most stupid age, you return me the heaviest memories.&lt;/p&gt;
&lt;p&gt;I wish I’d said all the words I have in mind today.&lt;br&gt;
You think the same way but none of them ever remains.&lt;br&gt;
The very fast blink is what I fear the most,&lt;br&gt;
I would have seen it only once when I’m dying old.&lt;/p&gt;
&lt;p&gt;Where had I been, when the story was happening?&lt;br&gt;
Where had I been, when the story was happening?&lt;/p&gt;
&lt;p&gt;Listen:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://soundcloud.com/mogita/bye-youth&#34;&gt;SoundCloud&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://site.douban.com/mogita/?s=123731&#34;&gt;Douban Site&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;slipklove’s comment meant the new title, easy and fit prelude.&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
